{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap b31914e8a35c9115fab0","webpack:///./node_modules/pako/lib/utils/common.js","webpack:///./src/Services/index.js","webpack:///./src/Utils/index.js","webpack:///./src/config.js","webpack:///./src/state.js","webpack:///./src/Mtp/index.js","webpack:///./src/TL/index.js","webpack:///./src/Utils/utils.js","webpack:///./src/Utils/leemonBigInt.js","webpack:///./node_modules/pako/lib/zlib/messages.js","webpack:///./src/network.js","webpack:///./src/Utils/bigNumbers.js","webpack:///external \"crypto-js\"","webpack:///./node_modules/pako/lib/zlib/adler32.js","webpack:///./node_modules/pako/lib/zlib/crc32.js","webpack:///./node_modules/pako/lib/utils/strings.js","webpack:///./node_modules/pako/lib/zlib/zstream.js","webpack:///./node_modules/pako/lib/zlib/constants.js","webpack:///./src/Mtp/MtpAuthorizer.js","webpack:///./src/Mtp/MtpNetworker.js","webpack:///./src/index.js","webpack:///./src/Mtp/MtpDcConfigurator.js","webpack:///./src/schema.json","webpack:///./src/Services/DateTimeService.js","webpack:///./src/Services/ErrorResponse.js","webpack:///./src/Mtp/MtpRsaKeysManager.js","webpack:///./src/TL/TLSerialization.js","webpack:///./node_modules/buffer/index.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/isarray/index.js","webpack:///external \"rusha\"","webpack:///./src/Utils/aesIGEMode.js","webpack:///./node_modules/pako/index.js","webpack:///./node_modules/pako/lib/deflate.js","webpack:///./node_modules/pako/lib/zlib/deflate.js","webpack:///./node_modules/pako/lib/zlib/trees.js","webpack:///./node_modules/pako/lib/inflate.js","webpack:///./node_modules/pako/lib/zlib/inflate.js","webpack:///./node_modules/pako/lib/zlib/inffast.js","webpack:///./node_modules/pako/lib/zlib/inftrees.js","webpack:///./node_modules/pako/lib/zlib/gzheader.js","webpack:///./src/Mtp/MtpTimeManager.js","webpack:///./src/Utils/aes.js","webpack:///./src/Mtp/MtpProxy.js","webpack:///./src/Utils/SRP.js","webpack:///./package.json"],"names":["DateTimeService","ErrorResponse","utils","BigNumbers","Config","Log","verbose","App","id","hash","version","Modes","ssl","test","websockets","Schema","MTProto","API","require","layer","defaultDCs","main","defaultState","current_dc_id","prev_dc_id","undefined","dc_options","networkers","state","dump","load","flushState","setState","initState","options","dumpState","loadState","Promise","resolve","reject","console","error","persistState","appId","appHash","configHash","isTest","then","JSON","parse","stateContents","Error","log","e","catch","getState","newState","res","rej","stringify","MtpDcConfigurator","MtpRsaKeysManager","MtpTimeManager","MtpAuthorizer","MtpNetworker","MtpProxy","TLSerialization","TLDeserialization","dT","tsNow","md5","bigint","bigStringInt","dHexDump","bytesToHex","bytesFromHex","bytesToBase64","uint6ToBase64","base64ToBlob","dataUrlToBlob","blobConstruct","blobSafeMimeType","bytesCmp","bytesXor","bytesToWords","bytesFromWords","bytesFromBigInt","bytesFromLeemonBigInt","bytesToArrayBuffer","convertToArrayBuffer","convertToUint8Array","convertToByteArray","bytesFromArrayBuffer","bufferConcat","longToInts","longToBytes","longFromInts","intToUint","uintToInt","sha1HashSync","sha1BytesSync","sha256HashSync","rsaEncrypt","addPadding","aesEncryptSync","aesDecryptSync","toArrayBuffer","gzipUncompress","inflate","nextRandomInt","pqPrimeFactorization","pqPrimeBigInteger","gcdLong","pqPrimeLong","pqPrimeLeemon","bytesModPow","IGE","_logTimer","Date","getTime","toFixed","seconds","t","Math","floor","data","CryptoJS","MD5","toString","num","BigInteger","strNum","bytes","arr","i","length","push","join","hexString","len","start","parseInt","charAt","substr","mod3","result","nLen","nUint24","nIdx","String","fromCharCode","replace","nUint6","base64str","mimeType","sliceSize","byteCharacters","atob","bytesLength","slicesCount","ceil","byteArrays","Array","sliceIndex","begin","end","min","offset","charCodeAt","Uint8Array","url","urlParts","split","blob","blobParts","safeMimeType","Blob","type","bb","BlobBuilder","angular","forEach","blobPart","append","getBlob","indexOf","bytes1","bytes2","ArrayBuffer","words","lib","WordArray","init","wordArray","sigBytes","bigInt","toByteArray","padding","needPadding","concat","slice","str","b","buffer","byteLength","BYTES_PER_ELEMENT","isArray","newBytes","byteView","buffer1","buffer2","l1","l2","tmp","set","sLong","divRem","divideAndRemainder","intValue","reverse","high","low","shiftLeft","add","val","rushaInstance","Rusha","hashBytes","rawDigest","hashWords","SHA256","publicKey","N","modulus","E","exponent","X","encryptedBigInt","modPowInt","encryptedBytes","blockSize","zeroes","SecureRandom","nextBytes","keyBytes","ivBytes","encryptedWords","AES","encrypt","iv","pad","NoPadding","mode","ciphertext","decryptedWords","decrypt","buf","ab","view","pako","to","maxValue","random","pqBytes","what","bitLength","goog","math","Long","fromString","it","g","q","x","y","clone","lim","j","a","c","equals","ZERO","and","ONE","compareTo","subtract","shiftRight","z","gcd","f","divide","P","Q","notEquals","compare","fromInt","div","minBits","minLen","m","xBigInt","yBigInt","mBigInt","resBigInt","modPow","getBpe","getOne","findPrimes","millerRabinInt","millerRabin","bitSize","expand","randTruePrime","randProbPrime","randProbPrimeRounds","mod","addInt","mult","powMod","sub","inverseMod","multMod","randTruePrime_","randBigInt","randBigInt_","GCD","GCD_","inverseMod_","inverseModInt","inverseModInt_","eGCD_","negative","greaterShift","greater","divide_","carry_","modInt","int2bigInt","str2bigInt","equalsInt","isZero","bigInt2str","dup","copy_","copyInt_","addInt_","rightShift_","halve_","leftShift_","multInt_","divInt_","linComb_","linCombShift_","addShift_","subShift_","sub_","add_","mult_","mod_","multMod_","squareMod_","trim","powMod_","mont_","bpe","mask","radix","digitsStr","one","ss","s0","s1","s2","s3","s4","s5","s6","s7","T","sa","mr_x1","mr_r","mr_a","eg_v","eg_u","eg_A","eg_B","eg_C","eg_D","md_q1","md_q2","md_q3","md_r","md_r1","md_r2","md_tt","primes","pows","s_i","s_i2","s_R","s_rm","s_q","s_n1","s_a","s_r2","s_n","s_b","s_d","s_x1","s_x2","s_aa","rpprb","n","s","p","ans","k","w","divisible","B","pm","dd","r","zz","recSize","pow","recLimit","xc","yc","xp","yp","A","C","D","sing","qp","max","v","shift","kx","ky","y1","y2","bits","minSize","buff","base","d","kk","substring","ys","kn","k1","k2","np","ui","ks","WSocket","dcId","_url","_dcId","open","prototype","reconnect","_gonnaClose","clearTimeout","_reconnTimeout","setTimeout","close","_socket","_networkCallback","WebSocket","binaryType","_incomePromiseResolvers","addEventListener","event","resolver","dec","_decryptor","_openResolver","_openPromise","onopen","setupObfuscation","onclose","onerror","reversed","encrypt_key","encrypt_iv","decrypt_key","decrypt_iv","_encryptor","ModeOfOperationCTR","enc","send","warn","setCallback","networkCallback","incomePromise","mData","lenA","emit","flushSockets","u","networkRequest","requestData","socket","oReq","XMLHttpRequest","responseType","onload","oEvent","arrayBuffer","response","abort","byteArray","navigator","dbits","canary","j_lm","fromNumber","nbi","am1","am2","xl","xh","l","h","am3","appName","am","DB","DM","DV","BI_FP","FV","F1","F2","BI_RM","BI_RC","rr","vv","int2char","intAt","bnpCopyTo","bnpFromInt","nbv","bnpFromString","signed","fromRadix","mi","sh","clamp","subTo","bnpClamp","bnToString","negate","toRadix","km","bnNegate","bnAbs","bnCompareTo","nbits","bnBitLength","bnpDLShiftTo","bnpDRShiftTo","bnpLShiftTo","bs","cbs","bm","ds","bnpRShiftTo","bnpSubTo","bnpMultiplyTo","abs","bnpSquareTo","bnpDivRemTo","pt","copyTo","ts","ms","nsh","lShiftTo","y0","yt","d1","d2","dlShiftTo","qd","drShiftTo","rShiftTo","bnMod","divRemTo","Classic","cConvert","cRevert","cReduce","cMulTo","multiplyTo","reduce","cSqrTo","squareTo","convert","revert","mulTo","sqrTo","bnpInvDigit","Montgomery","mp","invDigit","mpl","mph","um","mt2","montConvert","montRevert","montReduce","u0","montSqrTo","montMulTo","bnpIsEven","bnpExp","r2","bnModPowInt","isEven","exp","bnClone","bnIntValue","bnByteValue","bnShortValue","bnpChunkSize","LN2","bnSigNum","bnpToRadix","signum","cs","chunkSize","bnpFromRadix","dMultiply","dAddOffset","bnpFromNumber","testBit","bitwiseTo","op_or","isProbablePrime","bnToByteArray","bnEquals","bnMin","bnMax","bnpBitwiseTo","op","op_and","bnAnd","bnOr","op_xor","bnXor","op_andnot","bnAndNot","bnNot","bnShiftLeft","bnShiftRight","lbit","bnGetLowestSetBit","cbit","bnBitCount","bnTestBit","bnpChangeBit","bnSetBit","changeBit","bnClearBit","bnFlipBit","bnpAddTo","bnAdd","addTo","bnSubtract","bnMultiply","bnSquare","bnDivide","bnRemainder","bnDivideAndRemainder","bnpDMultiply","bnpDAddOffset","NullExp","nNop","nMulTo","nSqrTo","bnPow","bnpMultiplyLowerTo","bnpMultiplyUpperTo","Barrett","q3","mu","barrettConvert","barrettRevert","barrettReduce","multiplyUpperTo","multiplyLowerTo","barrettSqrTo","barrettMulTo","bnModPow","g2","is1","bnGCD","getLowestSetBit","bnpModInt","bnModInverse","ac","lowprimes","lplim","bnIsProbablePrime","bnpMillerRabin","n1","byteValue","shortValue","or","xor","andNot","not","bitCount","setBit","clearBit","flipBit","multiply","remainder","modInverse","square","rng_state","rng_pool","rng_pptr","rng_seed_int","rng_psize","rng_seed_time","global","window","crypto","getRandomValues","ua","appVersion","rng_get_byte","prng_newstate","next","rng_get_bytes","ba","Arcfour","S","ARC4init","key","ARC4next","mtpSendPlainRequest","dcID","requestBuffer","requestLength","requestArray","Int32Array","header","storeLongP","storeLong","generateID","storeInt","headerBuffer","getBuffer","headerArray","headerLength","resultBuffer","resultArray","chooseServer","baseError","code","deserializer","mtproto","auth_key_id","fetchLong","msg_id","msg_len","fetchInt","originalError","err","mtpSendReqPQ","auth","deferred","request","storeMethod","nonce","fetchObject","_","serverNonce","server_nonce","pq","fingerprints","server_public_key_fingerprints","select","pAndQ","mtpSendReqDhParams","prepare","newNonce","storeObject","new_nonce","dataWithHash","getBytes","public_key_fingerprint","fingerprint","encrypted_data","newNonceHash","new_nonce_hash","mtpDecryptServerDhDataAnswer","encrypted_answer","mtpSendSetClientDhParams","encryptedAnswer","localTime","tmpAesKey","tmpAesIv","answerWithHash","answerWithPadding","constructor","dhPrime","dh_prime","gA","g_a","serverTime","server_time","retry","mtpVerifyDhParams","getOffset","applyServerTime","dhPrimeHex","gABigInt","dhPrimeBigInt","two","twoPow","gBytes","gB","retry_id","g_b","encryptedData","authKey","authKeyHash","authKeyAux","authKeyID","newNonceHash1","new_nonce_hash1","serverSalt","newNonceHash2","new_nonce_hash2","newNonceHash3","new_nonce_hash3","cached","flushCachedNetworkers","mtpAuth","noCache","obj","startAll","stopAll","updatesProcessor","message","iii","offline","offlineInited","akStopped","signedIn","authKeyUint8","authKeyBuffer","upload","fileUpload","fileDownload","updateSessionId","lastServerMessages","currentRequests","checkConnectionPeriod","sentMessages","clientMessages","pendingMessages","pendingAcks","pendingResends","connectionInited","pendingTimeouts","getDcId","seqNo","prevSessionID","sessionID","setupMobileSleep","self","updateSentMessage","sentMessageID","sentMessage","container","newInner","inner","innerSentMessageID","innerSentMessage","seq_no","generateSeqNo","notContentRelated","wrapMtpCall","method","params","serializer","messageID","body","pushMessage","wrapMtpMessage","object","wrapApiCall","storeString","afterMessageID","resultType","isAPI","user","checkLongPoll","force","isClean","cleanupSent","longPollPending","Storage","get","baseDcID","sleepAfter","sendLongPoll","cb","maxWait","max_delay","wait_after","max_wait","noResponse","longPoll","noShedule","sheduleRequest","pushResend","delay","value","getMsgKey","dataWithPadding","isOut","msgKeyLargePlain","subarray","msgKeyLarge","msgKey","getAesKeyIv","sha2aText","sha2bText","promises","result_sha2a","result_sha2b","aesKey","aesIv","sha2a","sha2b","checkConnection","pingID","ping_id","pingMessage","sendEncryptedRequest","timeout","toggleOffline","enabled","performSheduledRequest","nextReq","ackMsgIDs","msg_ids","resendMsgIDs","resendOpts","lastResendReq","req_msg_id","resend_msg_ids","messages","messagesByteLen","currentTime","hasApiCall","hasHttpWait","lengthOverflow","singlesCount","Object","keys","messageByteLength","singleInRequest","noResponseMsgs","startMaxLength","onloads","innerMessages","storeRawBytes","containerSentMessage","parseResponse","setLastID","processMessage","msgID","sqrt","getEncryptedMessage","keyIv","getDecryptedMessage","storeIntBytes","dataBuffer","paddingLength","encryptedResult","getArray","requestPromise","responseBuffer","fetchIntBytes","fetchRawBytes","calcMsgKey","salt","totalLength","messageBodyLength","messageBody","deserializerOptions","override","mt_message","field","seqno","mt_rpc_result","applyServerSalt","newServerSalt","newNetworkers","networker","find","nw","bind","ackMessage","reqResendMessage","notEmpty","processMessageAck","acked","processError","rawError","matches","error_message","match","error_code","description","msgidInt","bad_msg_id","bad_msg_seqno","new_server_salt","badMessage","info","first_msg_id","server_salt","currentDcId","answer_msg_id","badMsgID","pos","splice","getNetworker","setUpdatesProcessor","callback","dcConfig","filter","dc","pFlags","ipv6","dcOption","domain","dcs","ip_address","port","path","dataObject","getOwnPropertyNames","cache","publisKeysHex","publicKeysParsed","prepared","prepareRsaKeys","keyParsed","RSAPublicKey","storeBytes","fingerprintBytes","selectRsaKeyByFingerPrint","fingerprintHex","foundKey","maxLength","createBuffer","intView","typed","checkLength","needBytes","previousBuffer","previousArray","writeInt","storeBool","iHigh","iLow","storeDouble","doubleView","Float64Array","sUTF8","unescape","encodeURIComponent","name","methodName","schema","methodData","methods","param","condType","fieldBit","itemType","toLowerCase","predicate","isBare","constructorData","constructors","Uint32Array","readInt","fetchDouble","longDec","fetchBool","fetchString","decodeURIComponent","escape","fetchBytes","constructorCmp","compressed","newDeserializer","checkType","Buffer","from","index","constructorsIndex","fallback","schemaFallback","overrideKey","apply","isCond","fetchEnd","BlockCipherMode","extend","Encryptor","processBlock","cipher","_cipher","_ivp","_iv","_iv2p","nextIv2p","xorBlock","encryptBlock","Decryptor","nextIvp","decryptBlock","block","lastMessageID","lastBigInt","timeOffset","lastServerBigInt","server_time_offset","generateMessageID","timeTicks","timeSec","timeMSec","longFrom","setLastMessageID","toSet","newTimeOffset","changed","numberOfRounds","rcon","Si","T1","T2","T3","T4","T5","T6","T7","T8","U1","U2","U3","U4","checkInt","checkInts","arrayish","coerceArray","arg","copy","isView","call","createArray","convertToInt32","defineProperty","_prepare","rounds","_Ke","_Kd","roundKeyCount","KC","tk","rconpointer","tt","plaintext","Counter","initialValue","_counter","setValue","setBytes","increment","counter","_remainingCounter","_remainingCounterIndex","_aes","encrypted","isInitialized","MtpAuth","SRPGenerator","SRP","setUpdatesCallback","inflateObj","nearestDCData","getNearestDc","loggingLevel","gNetworker","default_dc_id","defaultDC","keepNotDefaultNetworkers","updatedNetworkers","mtpGetNetworker","noErrorBox","nearestDC","mtpInvokeApi","selfUser","networkersPromises","networkersPromisesResolvers","networkersPromisesRejecters","logOut","networkerDataFromState","wPromise","originalDcId","defaultNetworker","dcIdToExport","dc_id","exportedAuth","api_id","api_hash","rejectPromise","handled","prevDcId","valid401Errors","newDcID","waitTime","now","stopTime","currrentDcId","accountPassword","algo","current_algo","_algo","_salt1","salt1","_salt2","salt2","_g","_p","_srp_B","srp_B","_srp_id","srp_id","_secure_random","secure_random","goodPrime","prime","primeB","BIGFROMUINTA","subprimeB","smallPrimes","smallPrime","randomA","getInputCheckPasswordSRP","thePassword","generate","m1","_A_bytes","M1","_m1","_passwordA","TextEncoder","encode","p_bytes","g_bytes","PAD","B_bytes","PH2","x_bytes","g_x","k_bytes","H","CONCAT","kg_x","A_bytes","u_bytes","_a","UINTAFROMBIG","ux","a_ux","S_bytes","K_bytes","h1","h2","p1","XOR","p2","p3","p4","p5","p6","concated","uint8Array1","uint8Array2","ret","padded","a1","a2","uint8Array","big","SH","PH1","password","ph1","PBKDF2","pbk","iterations","subtle","importKey","deriveKey","exportKey"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,KAAK;QACL;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;QAEA;QACA;;;;;;;;AC7Da;;;AAGb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,UAAU;;AAE5B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA,4BAA4B,YAAY;AACxC,qBAAqB,8BAA8B;AACnD;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,kCAAkC,OAAO;AACzC;AACA;;AAEA;AACA;AACA;AACA,kCAAkC,OAAO;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;8DCxGA,+C,IAAYA,e;AACZ,6C;;AAEe,EAAEA,gCAAF,EAAmBC,sCAAnB,E;;;;;;;qTCHf,oC,IAAYC,K;AACZ,0C,IAAYC,U;;AAEQD,K,EAAUC,U;;;;;;;8DCH9B,IAAMC,SAAS;AACbC,OAAK;AACHC,aAAS,KADN,EADQ;;AAIbC,OAAK;AACHC,QAAI,IADD;AAEHC,UAAM,IAFH;AAGHC,aAAS,OAHN,EAJQ;;AASbC,SAAO;AA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AAA,iB;AACAC,c,GAAAA,c;AACAC,a,GAAAA,a;AACAC,Y,GAAAA,Y;AACAC,Q,GAAAA,Q;;;;;;;8HCbJ,+C;;;AAGIC,e,GAAAA,gC;AACAC,iB,GAAAA,kC;;;;;;;;;;;;;;;;;;ACOYC,E,GAAAA,E;;;;AAIAC,K,GAAAA,K;;;;;AAKAC,G,GAAAA,G;;;;AAIAC,M,GAAAA,M;;;;AAIAC,Y,GAAAA,Y;;;;AAIAC,Q,GAAAA,Q;;;;;;;;;;;;;;;;AAgBAC,U,GAAAA,U;;;;;;;;;AASAC,Y,GAAAA,Y;;;;;;;;;;;;;;;;;;AAkBAC,a,GAAAA,a;;;;;;;;;;;;;;;;;;;;;AAqBAC,a,GAAAA,a;;;;;;;;;;;;;;AAcAC,Y,GAAAA,Y;;;;;;;;;;;;;;;;;;;;;AAqBAC,a,GAAAA,a;;;;;;;;AAQAC,a,GAAAA,a;;;;;;;;;;;;;;;AAeAC,gB,GAAAA,gB;;;;;;;;;;;;;;;;;;;AAmBAC,Q,GAAAA,Q;;;;;;;;;;;;;;AAcAC,Q,GAAAA,Q;;;;;;;;;;;AAWAC,Y,GAAAA,Y;;;;;;;;;;;;;;AAcAC,c,GAAAA,c;;;;;;;;;;;;AAYAC,e,GAAAA,e;;;;;;;;;;;;;;;;;;;;;;AAsBAC,qB,GAAAA,qB;;;;;AAKAC,kB,GAAAA,kB;;;;AAIAC,oB,GAAAA,oB;;;;;;;;;;;;AAYAC,mB,GAAAA,mB;;;;;;;AAOAC,kB,GAAAA,kB;;;;;;;;;;;;AAYAC,oB,GAAAA,oB;;;;;;;;;;;;AAYAC,Y,GAAAA,Y;;;;;;;;;;AAUAC,U,GAAAA,U;;;;;;AAMAC,W,GAAAA,W;;;;AAIAC,Y,GAAAA,Y;;;;AAIAC,S,GAAAA,S;;;;;;;;AAQAC,S,GAAAA,S;;;;;;;AAOAC,Y,GAAAA,Y;;;;;;AAMAC,a,GAAAA,a;;;;AAIAC,c,GAAAA,c;;;;;;AAMAC,U,GAAAA,U;;;;;;;;;;AAUAC,U,GAAAA,U;;;;;;;;;;;;;;;;;;;;;;;;;AAyBAC,c,GAAAA,c;;;;;;;;;;;;;;;;AAgBAC,c,GAAAA,c;;;;;;;;;;;;;AAaAC,a,GAAAA,a;;;;;;;;;AASAC,c,GAAAA,c;;;;;AAKAC,O,GAAAA,O;;;;AAIAC,a,GAAAA,a;;;;AAIAC,oB,GAAAA,oB;;;;;;;;;;;;;;;;;;;;;;;;;AAyBAC,iB,GAAAA,iB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDAC,O,GAAAA,O;;;;;;;;;;;;;;;;;AAiBAC,W,GAAAA,W;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDAC,a,GAAAA,a;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EAC,W,GAAAA,W,CA/pBhB,qC,6CACA,0CACA,2CACA,wC,mDACA,0C,IAAYC,G,wCACZ,uCACA,oC,wYAEA,IAAMC,YAAa,IAAIC,IAAJ,EAAD,CAAaC,OAAb,EAAlB,CAGO,SAASnD,EAAT,GAAc,CACjB,OAAO,MAAM,CAAC,CAAE,IAAIkD,IAAJ,EAAD,CAAaC,OAAb,KAAyBF,SAA1B,IAAuC,IAAxC,EAA8CG,OAA9C,CAAsD,CAAtD,CAAN,GAAiE,GAAxE,CACH,CAEM,SAASnD,KAAT,CAAeoD,OAAf,EAAwB,CAC3B,IAAIC,IAAI,CAAC,IAAIJ,IAAJ,EAAT,CACA,OAAOG,UAAUE,KAAKC,KAAL,CAAWF,IAAI,IAAf,CAAV,GAAiCA,CAAxC,CACH,CAEM,SAASpD,GAAT,CAAauD,IAAb,EAAmB,CACtB,OAAOC,mBAASC,GAAT,CAAa3C,aAAayC,IAAb,CAAb,EAAiCG,QAAjC,EAAP,CACH,CAEM,SAASzD,MAAT,CAAgB0D,GAAhB,EAAqB,CACxB,OAAO,IAAIC,sBAAJ,CAAeD,IAAID,QAAJ,CAAa,EAAb,CAAf,EAAiC,EAAjC,CAAP,CACH,CAEM,SAASxD,YAAT,CAAsB2D,MAAtB,EAA8B,CACjC,OAAO,IAAID,sBAAJ,CAAeC,MAAf,EAAuB,EAAvB,CAAP,CACH,CAEM,SAAS1D,QAAT,CAAkB2D,KAAlB,EAAyB,CAC5B,IAAIC,MAAM,EAAV,CACA,KAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,MAAMG,MAA1B,EAAkCD,GAAlC,EAAuC,CACnC,IAAIA,KAAK,EAAEA,IAAI,CAAN,CAAT,EAAmB,CACf,IAAI,EAAEA,IAAI,EAAN,CAAJ,EAAe,CACXD,IAAIG,IAAJ,CAAS,IAAT,EACH,CAFD,MAEO,IAAI,EAAEF,IAAI,CAAN,CAAJ,EAAc,CACjBD,IAAIG,IAAJ,CAAS,IAAT,EACH,CAFM,MAEA,CACHH,IAAIG,IAAJ,CAAS,GAAT,EACH,CACJ,CACDH,IAAIG,IAAJ,CAAS,CAACJ,MAAME,CAAN,IAAW,EAAX,GAAgB,GAAhB,GAAsB,EAAvB,IAA6BF,MAAME,CAAN,EAASN,QAAT,CAAkB,EAAlB,CAAtC,EACH,CACJ,CAEM,SAAStD,UAAT,CAAoB0D,KAApB,EAA2B,CAC9BA,QAAQA,SAAS,EAAjB,CACA,IAAIC,MAAM,EAAV,CACA,KAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,MAAMG,MAA1B,EAAkCD,GAAlC,EAAuC,CACnCD,IAAIG,IAAJ,CAAS,CAACJ,MAAME,CAAN,IAAW,EAAX,GAAgB,GAAhB,GAAsB,EAAvB,IAA6B,CAACF,MAAME,CAAN,KAAY,CAAb,EAAgBN,QAAhB,CAAyB,EAAzB,CAAtC,EACH,CACD,OAAOK,IAAII,IAAJ,CAAS,EAAT,CAAP,CACH,CAEM,SAAS9D,YAAT,CAAsB+D,SAAtB,EAAiC,CACpC,IAAIC,MAAMD,UAAUH,MAApB,CACID,CADJ,CAEA,IAAIM,QAAQ,CAAZ,CACA,IAAIR,QAAQ,EAAZ,CAEA,IAAIM,UAAUH,MAAV,GAAmB,CAAvB,EAA0B,CACtBH,MAAMI,IAAN,CAAWK,SAASH,UAAUI,MAAV,CAAiB,CAAjB,CAAT,EAA8B,EAA9B,CAAX,EACAF,QACH,CAED,KAAKN,IAAIM,KAAT,EAAgBN,IAAIK,GAApB,EAAyBL,KAAK,CAA9B,EAAiC,CAC7BF,MAAMI,IAAN,CAAWK,SAASH,UAAUK,MAAV,CAAiBT,CAAjB,EAAoB,CAApB,CAAT,EAAiC,EAAjC,CAAX,EACH,CAED,OAAOF,KAAP,CACH,CAEM,SAASxD,aAAT,CAAuBwD,KAAvB,EAA8B,CACjC,IAAIY,IAAJ,CACA,IAAIC,SAAS,EAAb,CAEA,KAAK,IAAIC,OAAOd,MAAMG,MAAjB,EAAyBY,UAAU,CAAnC,EAAsCC,OAAO,CAAlD,EAAqDA,OAAOF,IAA5D,EAAkEE,MAAlE,EAA0E,CACtEJ,OAAOI,OAAO,CAAd,CACAD,WAAWf,MAAMgB,IAAN,MAAgB,OAAOJ,IAAP,GAAc,EAA9B,CAAX,CACA,IAAIA,SAAS,CAAT,IAAcE,OAAOE,IAAP,KAAgB,CAAlC,EAAqC,CACjCH,UAAUI,OAAOC,YAAP,CACNzE,cAAcsE,YAAY,EAAZ,GAAiB,EAA/B,CADM,EAENtE,cAAcsE,YAAY,EAAZ,GAAiB,EAA/B,CAFM,EAGNtE,cAAcsE,YAAY,CAAZ,GAAgB,EAA9B,CAHM,EAINtE,cAAcsE,UAAU,EAAxB,CAJM,CAAV,CAMAA,UAAU,CAAV,CACH,CACJ,CAED,OAAOF,OAAOM,OAAP,CAAe,YAAf,EAA6B,GAA7B,CAAP,CACH,CAEM,SAAS1E,aAAT,CAAuB2E,MAAvB,EAA+B,CAClC,OAAOA,SAAS,EAAT,GACDA,SAAS,EADR,GAEDA,SAAS,EAAT,GACIA,SAAS,EADb,GAEIA,SAAS,EAAT,GACIA,SAAS,CADb,GAEIA,WAAW,EAAX,GACI,EADJ,GAEIA,WAAW,EAAX,GACI,EADJ,GAEI,EAVtB,CAWH,CAEM,SAAS1E,YAAT,CAAsB2E,SAAtB,EAAiCC,QAAjC,EAA2C,CAC9C,IAAIC,YAAY,IAAhB,CACA,IAAIC,iBAAiBC,KAAKJ,SAAL,CAArB,CACA,IAAIK,cAAcF,eAAerB,MAAjC,CACA,IAAIwB,cAAcpC,KAAKqC,IAAL,CAAUF,cAAcH,SAAxB,CAAlB,CACA,IAAIM,aAAa,IAAIC,KAAJ,CAAUH,WAAV,CAAjB,CAEA,KAAK,IAAII,aAAa,CAAtB,EAAyBA,aAAaJ,WAAtC,EAAmD,EAAEI,UAArD,EAAiE,CAC7D,IAAIC,QAAQD,aAAaR,SAAzB,CACA,IAAIU,MAAM1C,KAAK2C,GAAL,CAASF,QAAQT,SAAjB,EAA4BG,WAA5B,CAAV,CAEA,IAAI1B,QAAQ,IAAI8B,KAAJ,CAAUG,MAAMD,KAAhB,CAAZ,CACA,KAAK,IAAIG,SAASH,KAAb,EAAoB9B,IAAI,CAA7B,EAAgCiC,SAASF,GAAzC,EAA8C,EAAE/B,CAAF,EAAK,EAAEiC,MAArD,EAA6D,CACzDnC,MAAME,CAAN,IAAWsB,eAAeW,MAAf,EAAuBC,UAAvB,CAAkC,CAAlC,CAAX,CACH,CACDP,WAAWE,UAAX,IAAyB,IAAIM,UAAJ,CAAerC,KAAf,CAAzB,CACH,CAED,OAAOpD,cAAciF,UAAd,EAA0BP,QAA1B,CAAP,CACH,CAEM,SAAS3E,aAAT,CAAuB2F,GAAvB,EAA4B,CAC/B,IAAIC,WAAWD,IAAIE,KAAJ,CAAU,GAAV,CAAf,CACA,IAAInB,YAAYkB,SAAS,CAAT,CAAhB,CACA,IAAIjB,WAAWiB,SAAS,CAAT,EAAYC,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,EAA0BA,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CAAf,CACA,IAAIC,OAAO/F,aAAa2E,SAAb,EAAwBC,QAAxB,CAAX,CACA,OAAOmB,IAAP,CACH,CAEM,SAAS7F,aAAT,CAAuB8F,SAAvB,EAAkCpB,QAAlC,EAA4C,CAC/C,IAAImB,IAAJ,CACA,IAAIE,eAAe9F,iBAAiByE,QAAjB,CAAnB,CACA,IAAI,CACAmB,OAAO,IAAIG,IAAJ,CAASF,SAAT,EAAoB,EAAEG,MAAMF,YAAR,EAApB,CAAP,CACH,CAFD,CAEE,OAAO1H,CAAP,EAAU,CACR,IAAI6H,KAAK,IAAIC,WAAJ,EAAT,CACAC,QAAQC,OAAR,CAAgBP,SAAhB,EAA2B,UAAUQ,QAAV,EAAoB,CAC3CJ,GAAGK,MAAH,CAAUD,QAAV,EACH,CAFD,EAGAT,OAAOK,GAAGM,OAAH,CAAWT,YAAX,CAAP,CACH,CACD,OAAOF,IAAP,CACH,CAEM,SAAS5F,gBAAT,CAA0ByE,QAA1B,EAAoC,CACvC,IAAI,CACA,YADA,EAEA,WAFA,EAGA,WAHA,EAIA,YAJA,EAKA,WALA,EAMA,WANA,EAOA,YAPA,EAQA,iBARA,EASA,WATA,EAUA,YAVA,EAWA,WAXA,EAYF+B,OAZE,CAYM/B,QAZN,KAYmB,CAAC,CAZxB,EAY2B,CACvB,OAAO,0BAAP,CACH,CACD,OAAOA,QAAP,CACH,CAEM,SAASxE,QAAT,CAAkBwG,MAAlB,EAA0BC,MAA1B,EAAkC,CACrC,IAAIhD,MAAM+C,OAAOnD,MAAjB,CACA,IAAII,OAAOgD,OAAOpD,MAAlB,EAA0B,CACtB,OAAO,KAAP,CACH,CAED,KAAK,IAAID,IAAI,CAAb,EAAgBA,IAAIK,GAApB,EAAyBL,GAAzB,EAA8B,CAC1B,IAAIoD,OAAOpD,CAAP,KAAaqD,OAAOrD,CAAP,CAAjB,EAA4B,CACxB,OAAO,KAAP,CACH,CACJ,CACD,OAAO,IAAP,CACH,CAEM,SAASnD,QAAT,CAAkBuG,MAAlB,EAA0BC,MAA1B,EAAkC,CACrC,IAAIhD,MAAM+C,OAAOnD,MAAjB,CACA,IAAIH,QAAQ,EAAZ,CAEA,KAAK,IAAIE,IAAI,CAAb,EAAgBA,IAAIK,GAApB,EAAyB,EAAEL,CAA3B,EAA8B,CAC1BF,MAAME,CAAN,IAAWoD,OAAOpD,CAAP,IAAYqD,OAAOrD,CAAP,CAAvB,CACH,CAED,OAAOF,KAAP,CACH,CAEM,SAAShD,YAAT,CAAsBgD,KAAtB,EAA6B,CAChC,IAAIA,iBAAiBwD,WAArB,EAAkC,CAC9BxD,QAAQ,IAAIqC,UAAJ,CAAerC,KAAf,CAAR,CACH,CACD,IAAIO,MAAMP,MAAMG,MAAhB,CACA,IAAIsD,QAAQ,EAAZ,CACA,IAAIvD,CAAJ,CACA,KAAKA,IAAI,CAAT,EAAYA,IAAIK,GAAhB,EAAqBL,GAArB,EAA0B,CACtBuD,MAAMvD,MAAM,CAAZ,KAAkBF,MAAME,CAAN,KAAa,KAAMA,IAAI,CAAL,GAAU,CAA9C,CACH,CAED,OAAO,IAAIR,mBAASgE,GAAT,CAAaC,SAAb,CAAuBC,IAA3B,CAAgCH,KAAhC,EAAuClD,GAAvC,CAAP,CACH,CAEM,SAAStD,cAAT,CAAwB4G,SAAxB,EAAmC,CACtC,IAAIJ,QAAQI,UAAUJ,KAAtB,CACA,IAAIK,WAAWD,UAAUC,QAAzB,CACA,IAAI9D,QAAQ,EAAZ,CAEA,KAAK,IAAIE,IAAI,CAAb,EAAgBA,IAAI4D,QAApB,EAA8B5D,GAA9B,EAAmC,CAC/BF,MAAMI,IAAN,CAAYqD,MAAMvD,MAAM,CAAZ,MAAoB,KAAMA,IAAI,CAAL,GAAU,CAApC,GAA0C,IAArD,EACH,CAED,OAAOF,KAAP,CACH,CAEM,SAAS9C,eAAT,CAAyB6G,MAAzB,EAAiCxD,GAAjC,EAAsC,CACzC,IAAIP,QAAQ+D,OAAOC,WAAP,EAAZ,CAEA,IAAIzD,OAAOP,MAAMG,MAAN,GAAeI,GAA1B,EAA+B,CAC3B,IAAI0D,UAAU,EAAd,CACA,KAAK,IAAI/D,IAAI,CAAR,EAAWgE,cAAc3D,MAAMP,MAAMG,MAA1C,EAAkDD,IAAIgE,WAAtD,EAAmEhE,GAAnE,EAAwE,CACpE+D,QAAQ/D,CAAR,IAAa,CAAb,CACH,CACD,IAAIF,iBAAiBwD,WAArB,EAAkC,CAC9BxD,QAAQvC,aAAawG,OAAb,EAAsBjE,KAAtB,CAAR,CACH,CAFD,MAEO,CACHA,QAAQiE,QAAQE,MAAR,CAAenE,KAAf,CAAR,CACH,CACJ,CAVD,MAUO,CACH,OAAO,CAACA,MAAM,CAAN,CAAD,KAAc,CAACO,GAAD,IAAQP,MAAMG,MAAN,GAAeI,GAArC,CAAP,EAAkD,CAC9CP,QAAQA,MAAMoE,KAAN,CAAY,CAAZ,CAAR,CACH,CACJ,CAED,OAAOpE,KAAP,CACH,CAEM,SAAS7C,qBAAT,CAA+B4G,MAA/B,EAAuCxD,GAAvC,EAA4C,CAC/C,IAAI8D,MAAM,8BAAWN,MAAX,EAAmB,EAAnB,CAAV,CACA,OAAOxH,aAAa8H,GAAb,CAAP,CACH,CAEM,SAASjH,kBAAT,CAA4BkH,CAA5B,EAA+B,CAClC,OAAQ,IAAIjC,UAAJ,CAAeiC,CAAf,CAAD,CAAoBC,MAA3B,CACH,CAEM,SAASlH,oBAAT,CAA8B2C,KAA9B,EAAqC,CACxC;AACA,QAAIA,iBAAiBwD,WAArB,EAAkC,CAC9B,OAAOxD,KAAP,CACH,CACD,IAAIA,MAAMuE,MAAN,KAAiBlL,SAAjB,IACA2G,MAAMuE,MAAN,CAAaC,UAAb,IAA2BxE,MAAMG,MAAN,GAAeH,MAAMyE,iBADpD,EACuE,CACnE,OAAOzE,MAAMuE,MAAb,CACH,CACD,OAAOnH,mBAAmB4C,KAAnB,CAAP,CACH,CAEM,SAAS1C,mBAAT,CAA6B0C,KAA7B,EAAoC,CACvC,IAAIA,MAAMuE,MAAN,KAAiBlL,SAArB,EAAgC,CAC5B,OAAO2G,KAAP,CACH,CACD,OAAO,IAAIqC,UAAJ,CAAerC,KAAf,CAAP,CACH,CAEM,SAASzC,kBAAT,CAA4ByC,KAA5B,EAAmC,CACtC,IAAI8B,MAAM4C,OAAN,CAAc1E,KAAd,CAAJ,EAA0B,CACtB,OAAOA,KAAP,CACH,CACDA,QAAQ1C,oBAAoB0C,KAApB,CAAR,CACA,IAAI2E,WAAW,EAAf,CACA,KAAK,IAAIzE,IAAI,CAAR,EAAWK,MAAMP,MAAMG,MAA5B,EAAoCD,IAAIK,GAAxC,EAA6CL,GAA7C,EAAkD,CAC9CyE,SAASvE,IAAT,CAAcJ,MAAME,CAAN,CAAd,EACH,CACD,OAAOyE,QAAP,CACH,CAEM,SAASnH,oBAAT,CAA8B+G,MAA9B,EAAsC,CACzC,IAAIhE,MAAMgE,OAAOC,UAAjB,CACA,IAAII,WAAW,IAAIvC,UAAJ,CAAekC,MAAf,CAAf,CACA,IAAIvE,QAAQ,EAAZ,CAEA,KAAK,IAAIE,IAAI,CAAb,EAAgBA,IAAIK,GAApB,EAAyB,EAAEL,CAA3B,EAA8B,CAC1BF,MAAME,CAAN,IAAW0E,SAAS1E,CAAT,CAAX,CACH,CAED,OAAOF,KAAP,CACH,CAEM,SAASvC,YAAT,CAAsBoH,OAAtB,EAA+BC,OAA/B,EAAwC,CAC3C,IAAIC,KAAKF,QAAQL,UAAR,IAAsBK,QAAQ1E,MAAvC,CACA,IAAI6E,KAAKF,QAAQN,UAAR,IAAsBM,QAAQ3E,MAAvC,CACA,IAAI8E,MAAM,IAAI5C,UAAJ,CAAe0C,KAAKC,EAApB,CAAV,CACAC,IAAIC,GAAJ,CAAQL,mBAAmBrB,WAAnB,GAAiC,IAAInB,UAAJ,CAAewC,OAAf,CAAjC,GAA2DA,OAAnE,EAA4E,CAA5E,EACAI,IAAIC,GAAJ,CAAQJ,mBAAmBtB,WAAnB,GAAiC,IAAInB,UAAJ,CAAeyC,OAAf,CAAjC,GAA2DA,OAAnE,EAA4EC,EAA5E,EAEA,OAAOE,IAAIV,MAAX,CACH,CAEM,SAAS7G,UAAT,CAAoByH,KAApB,EAA2B,CAC9B,IAAIC,SAAShJ,aAAa+I,KAAb,EAAoBE,kBAApB,CAAuClJ,OAAO,WAAP,CAAvC,CAAb,CAEA,OAAO,CAACiJ,OAAO,CAAP,EAAUE,QAAV,EAAD,EAAuBF,OAAO,CAAP,EAAUE,QAAV,EAAvB,CAAP,CACH,CAEM,SAAS3H,WAAT,CAAqBwH,KAArB,EAA4B,CAC/B,OAAOlI,eAAe,EAAEwG,OAAO/F,WAAWyH,KAAX,CAAT,EAA4BrB,UAAU,CAAtC,EAAf,EAA0DyB,OAA1D,EAAP,CACH,CAEM,SAAS3H,YAAT,CAAsB4H,IAAtB,EAA4BC,GAA5B,EAAiC,CACpC,OAAOtJ,OAAOqJ,IAAP,EAAaE,SAAb,CAAuB,EAAvB,EAA2BC,GAA3B,CAA+BxJ,OAAOsJ,GAAP,CAA/B,EAA4C7F,QAA5C,CAAqD,EAArD,CAAP,CACH,CAEM,SAAS/B,SAAT,CAAmB+H,GAAnB,EAAwB,CAC3BA,MAAMnF,SAASmF,GAAT,CAAN,CACA,IAAIA,MAAM,CAAV,EAAa,CACTA,MAAMA,MAAM,UAAZ,CACH,CACD,OAAOA,GAAP,CACH,CAEM,SAAS9H,SAAT,CAAmB8H,GAAnB,EAAwB,CAC3B,IAAIA,MAAM,UAAV,EAAsB,CAClBA,MAAMA,MAAM,UAAZ,CACH,CACD,OAAOA,GAAP,CACH,CAEM,SAAS7H,YAAT,CAAsBiC,KAAtB,EAA6B,CAChC,IAAM6F,gBAAgB,IAAIC,eAAJ,CAAU,OAAO,IAAjB,CAAtB,CACA,IAAIC,YAAYF,cAAcG,SAAd,CAAwBhG,KAAxB,EAA+BuE,MAA/C,CACA,OAAOwB,SAAP,CACH,CAEM,SAAS/H,aAAT,CAAuBgC,KAAvB,EAA8B,CACjC,OAAOxC,qBAAqBO,aAAaiC,KAAb,CAArB,CAAP,CACH,CAEM,SAAS/B,cAAT,CAAwB+B,KAAxB,EAA+B,CAClC,IAAIiG,YAAYvG,mBAASwG,MAAT,CAAgBlJ,aAAagD,KAAb,CAAhB,CAAhB,CACA,IAAI+F,YAAY9I,eAAegJ,SAAf,CAAhB,CACA,OAAOF,SAAP,CACH,CAEM,SAAS7H,UAAT,CAAoBiI,SAApB,EAA+BnG,KAA/B,EAAsC,CACzCA,QAAQ7B,WAAW6B,KAAX,EAAkB,GAAlB,CAAR,CACA,IAAIoG,IAAI,IAAItG,sBAAJ,CAAeqG,UAAUE,OAAzB,EAAkC,EAAlC,CAAR,CACA,IAAIC,IAAI,IAAIxG,sBAAJ,CAAeqG,UAAUI,QAAzB,EAAmC,EAAnC,CAAR,CACA,IAAIC,IAAI,IAAI1G,sBAAJ,CAAeE,KAAf,CAAR,CACA,IAAIyG,kBAAkBD,EAAEE,SAAF,CAAYJ,CAAZ,EAAeF,CAAf,CAAtB,CACIO,iBAAiBzJ,gBAAgBuJ,eAAhB,EAAiC,GAAjC,CADrB,CAEA,OAAOE,cAAP,CACH,CAEM,SAASxI,UAAT,CAAoB6B,KAApB,EAA2B4G,SAA3B,EAAsCC,MAAtC,EAA8C,CACjDD,YAAYA,aAAa,EAAzB,CACA,IAAIrG,MAAMP,MAAMwE,UAAN,IAAoBxE,MAAMG,MAApC,CACA,IAAI+D,cAAc0C,YAAarG,MAAMqG,SAArC,CACA,IAAI1C,cAAc,CAAd,IAAmBA,cAAc0C,SAArC,EAAgD,CAC5C,IAAI3C,UAAU,IAAInC,KAAJ,CAAUoC,WAAV,CAAd,CACA,IAAI2C,MAAJ,EAAY,CACR,KAAK,IAAI3G,IAAI,CAAb,EAAgBA,IAAIgE,WAApB,EAAiChE,GAAjC,EAAsC,CAClC+D,QAAQ/D,CAAR,IAAa,CAAb,CACH,CACJ,CAJD,MAIO,CACF,IAAI4G,wBAAJ,EAAD,CAAqBC,SAArB,CAA+B9C,OAA/B,EACH,CAED,IAAIjE,iBAAiBwD,WAArB,EAAkC,CAC9BxD,QAAQvC,aAAauC,KAAb,EAAoBiE,OAApB,CAAR,CACH,CAFD,MAEO,CACHjE,QAAQA,MAAMmE,MAAN,CAAaF,OAAb,CAAR,CACH,CACJ,CAED,OAAOjE,KAAP,CACH,CAGM,SAAS5B,cAAT,CAAwB4B,KAAxB,EAA+BgH,QAA/B,EAAyCC,OAAzC,EAAkD,CACrD,IAAI1G,MAAMP,MAAMwE,UAAN,IAAoBxE,MAAMG,MAApC,CAEAH,QAAQ7B,WAAW6B,KAAX,CAAR,CAEA,IAAIkH,iBAAiBxH,mBAASyH,GAAT,CAAaC,OAAb,CAAqBpK,aAAagD,KAAb,CAArB,EAA0ChD,aAAagK,QAAb,CAA1C,EAAkE,EACnFK,IAAIrK,aAAaiK,OAAb,CAD+E,EAEnFhD,SAASvE,mBAAS4H,GAAT,CAAaC,SAF6D,EAGnFC,MAAM9H,mBAAS8H,IAAT,CAAcxI,GAH+D,EAAlE,EAIlByI,UAJH,CAMA,IAAId,iBAAiB1J,eAAeiK,cAAf,CAArB,CAEA,OAAOP,cAAP,CACH,CAEM,SAAStI,cAAT,CAAwBsI,cAAxB,EAAwCK,QAAxC,EAAkDC,OAAlD,EAA2D,CAE9D,IAAIS,iBAAiBhI,mBAASyH,GAAT,CAAaQ,OAAb,CAAqB,EAAEF,YAAYzK,aAAa2J,cAAb,CAAd,EAArB,EAAmE3J,aAAagK,QAAb,CAAnE,EAA2F,EAC5GK,IAAIrK,aAAaiK,OAAb,CADwG,EAE5GhD,SAASvE,mBAAS4H,GAAT,CAAaC,SAFsF,EAG5GC,MAAM9H,mBAAS8H,IAAT,CAAcxI,GAHwF,EAA3F,CAArB,CAMA,IAAIgB,QAAQ/C,eAAeyK,cAAf,CAAZ,CAEA,OAAO1H,KAAP,CACH,CAEM,SAAS1B,aAAT,CAAuBsJ,GAAvB,EAA4B,CAC/B,IAAIC,KAAK,IAAIrE,WAAJ,CAAgBoE,IAAIzH,MAApB,CAAT,CACA,IAAI2H,OAAO,IAAIzF,UAAJ,CAAewF,EAAf,CAAX,CACA,KAAK,IAAI3H,IAAI,CAAb,EAAgBA,IAAI0H,IAAIzH,MAAxB,EAAgC,EAAED,CAAlC,EAAqC,CACjC4H,KAAK5H,CAAL,IAAU0H,IAAI1H,CAAJ,CAAV,CACH,CACD,OAAO2H,EAAP,CACH,CAEM,SAAStJ,cAAT,CAAwByB,KAAxB,EAA+B,CAClC,IAAIa,SAASkH,eAAKvJ,OAAL,CAAawB,KAAb,CAAb,CACA,OAAO1B,cAAcuC,MAAd,CAAP,CACH,CAEM,SAASrC,OAAT,CAAiBwB,KAAjB,EAAwB,CAC3B,OAAO+H,eAAKvJ,OAAL,CAAawB,KAAb,EAAoB,EAAEgI,IAAI,QAAN,EAApB,CAAP,CACH,CAEM,SAASvJ,aAAT,CAAuBwJ,QAAvB,EAAiC,CACpC,OAAO1I,KAAKC,KAAL,CAAWD,KAAK2I,MAAL,KAAgBD,QAA3B,CAAP,CACH,CAEM,SAASvJ,oBAAT,CAA8ByJ,OAA9B,EAAuC,CAC1C,IAAIC,OAAO,IAAItI,sBAAJ,CAAeqI,OAAf,CAAX,CACA,IAAItH,SAAS,KAAb,CAEA,IAAI,CACAA,SAAS/B,cAAc,8BAAWsJ,KAAKxI,QAAL,CAAc,EAAd,CAAX,EAA8B,EAA9B,EAAkCL,KAAKqC,IAAL,CAAU,KAAK,2BAAf,IAA2B,CAA7D,CAAd,CAAT,CACH,CAFD,CAEE,OAAO3G,CAAP,EAAU,CACR;AACH,KAED,IAAI4F,WAAW,KAAX,IAAoBuH,KAAKC,SAAL,MAAoB,EAA5C,EAAgD,CAC5C,IAAI,CACAxH,SAAShC,YAAYyJ,KAAKC,IAAL,CAAUC,IAAV,CAAeC,UAAf,CAA0BL,KAAKxI,QAAL,CAAc,EAAd,CAA1B,EAA6C,EAA7C,CAAZ,CAAT,CACH,CAFD,CAEE,OAAO3E,CAAP,EAAU,CACR;AACH,SACJ,CAED,IAAI4F,WAAW,KAAf,EAAsB,CAClBA,SAASlC,kBAAkByJ,IAAlB,CAAT,CACH,CAED,OAAOvH,MAAP,CACH,CAEM,SAASlC,iBAAT,CAA2ByJ,IAA3B,EAAiC,CACpC,IAAIM,KAAK,CAAT,CACIC,CADJ,CAEA,KAAK,IAAIzI,IAAI,CAAb,EAAgBA,IAAI,CAApB,EAAuBA,GAAvB,EAA4B,CACxB,IAAI0I,IAAI,CAACnK,cAAc,GAAd,IAAqB,EAAtB,IAA4B,EAApC,CACA,IAAIoK,IAAI1M,OAAOsC,cAAc,UAAd,IAA4B,CAAnC,CAAR,CACA,IAAIqK,IAAID,EAAEE,KAAF,EAAR,CACA,IAAIC,MAAM,KAAM9I,IAAI,EAApB,CAEA,KAAK,IAAI+I,IAAI,CAAb,EAAgBA,IAAID,GAApB,EAAyBC,GAAzB,EAA8B,CAC1B,EAAEP,EAAF,CACA,IAAIQ,IAAIL,EAAEE,KAAF,EAAR,CACA,IAAIzE,IAAIuE,EAAEE,KAAF,EAAR,CACA,IAAII,IAAIhN,OAAOyM,CAAP,CAAR,CAEA,OAAO,CAACtE,EAAE8E,MAAF,CAAStJ,uBAAWuJ,IAApB,CAAR,EAAmC,CAC/B,IAAI,CAAC/E,EAAEgF,GAAF,CAAMxJ,uBAAWyJ,GAAjB,EAAsBH,MAAtB,CAA6BtJ,uBAAWuJ,IAAxC,CAAL,EAAoD,CAChDF,IAAIA,EAAExD,GAAF,CAAMuD,CAAN,CAAJ,CACA,IAAIC,EAAEK,SAAF,CAAYpB,IAAZ,IAAoB,CAAxB,EAA2B,CACvBe,IAAIA,EAAEM,QAAF,CAAWrB,IAAX,CAAJ,CACH,CACJ,CACDc,IAAIA,EAAEvD,GAAF,CAAMuD,CAAN,CAAJ,CACA,IAAIA,EAAEM,SAAF,CAAYpB,IAAZ,IAAoB,CAAxB,EAA2B,CACvBc,IAAIA,EAAEO,QAAF,CAAWrB,IAAX,CAAJ,CACH,CACD9D,IAAIA,EAAEoF,UAAF,CAAa,CAAb,CAAJ,CACH,CAEDb,IAAIM,EAAEJ,KAAF,EAAJ,CACA,IAAIY,IAAId,EAAEW,SAAF,CAAYV,CAAZ,IAAiB,CAAjB,GAAqBA,EAAEW,QAAF,CAAWZ,CAAX,CAArB,GAAqCA,EAAEY,QAAF,CAAWX,CAAX,CAA7C,CACAH,IAAIgB,EAAEC,GAAF,CAAMxB,IAAN,CAAJ,CACA,IAAI,CAACO,EAAES,MAAF,CAAStJ,uBAAWyJ,GAApB,CAAL,EAA+B,CAC3B,MACH,CACD,IAAI,CAACN,IAAKA,IAAI,CAAV,KAAiB,CAArB,EAAwB,CACpBH,IAAID,EAAEE,KAAF,EAAJ,CACH,CACJ,CACD,IAAIJ,EAAEa,SAAF,CAAY1J,uBAAWyJ,GAAvB,IAA8B,CAAlC,EAAqC,CACjC,MACH,CACJ,CAED,IAAIM,IAAIzB,KAAK0B,MAAL,CAAYnB,CAAZ,CAAR,CAAwBoB,CAAxB,CAA2BC,CAA3B,CAEA,IAAIrB,EAAEa,SAAF,CAAYK,CAAZ,IAAiB,CAArB,EAAwB,CACpBE,IAAIF,CAAJ,CACAG,IAAIrB,CAAJ,CACH,CAHD,MAGO,CACHoB,IAAIpB,CAAJ,CACAqB,IAAIH,CAAJ,CACH,CAED,OAAO,CAAC3M,gBAAgB6M,CAAhB,CAAD,EAAqB7M,gBAAgB8M,CAAhB,CAArB,EAAyCtB,EAAzC,CAAP,CACH,CAEM,SAAS9J,OAAT,CAAiBsK,CAAjB,EAAoB5E,CAApB,EAAuB,CAC1B,OAAO4E,EAAEe,SAAF,CAAY3B,KAAKC,IAAL,CAAUC,IAAV,CAAea,IAA3B,KAAoC/E,EAAE2F,SAAF,CAAY3B,KAAKC,IAAL,CAAUC,IAAV,CAAea,IAA3B,CAA3C,EAA6E,CACzE,OAAO/E,EAAEgF,GAAF,CAAMhB,KAAKC,IAAL,CAAUC,IAAV,CAAee,GAArB,EAA0BH,MAA1B,CAAiCd,KAAKC,IAAL,CAAUC,IAAV,CAAea,IAAhD,CAAP,EAA8D,CAC1D/E,IAAIA,EAAEoF,UAAF,CAAa,CAAb,CAAJ,CACH,CACD,OAAOR,EAAEI,GAAF,CAAMhB,KAAKC,IAAL,CAAUC,IAAV,CAAee,GAArB,EAA0BH,MAA1B,CAAiCd,KAAKC,IAAL,CAAUC,IAAV,CAAea,IAAhD,CAAP,EAA8D,CAC1DH,IAAIA,EAAEQ,UAAF,CAAa,CAAb,CAAJ,CACH,CACD,IAAIR,EAAEgB,OAAF,CAAU5F,CAAV,IAAe,CAAnB,EAAsB,CAClB4E,IAAIA,EAAEO,QAAF,CAAWnF,CAAX,CAAJ,CACH,CAFD,MAEO,CACHA,IAAIA,EAAEmF,QAAF,CAAWP,CAAX,CAAJ,CACH,CACJ,CACD,OAAO5E,EAAE8E,MAAF,CAASd,KAAKC,IAAL,CAAUC,IAAV,CAAea,IAAxB,IAAgCH,CAAhC,GAAoC5E,CAA3C,CACH,CAEM,SAASzF,WAAT,CAAqBuJ,IAArB,EAA2B,CAC9B,IAAIM,KAAK,CAAT,CACIC,CADJ,CAEA,KAAK,IAAIzI,IAAI,CAAb,EAAgBA,IAAI,CAApB,EAAuBA,GAAvB,EAA4B,CACxB,IAAI0I,IAAIN,KAAKC,IAAL,CAAUC,IAAV,CAAe2B,OAAf,CAAuB,CAAC1L,cAAc,GAAd,IAAqB,EAAtB,IAA4B,EAAnD,CAAR,CACA,IAAIoK,IAAIP,KAAKC,IAAL,CAAUC,IAAV,CAAe2B,OAAf,CAAuB1L,cAAc,UAAd,IAA4B,CAAnD,CAAR,CACA,IAAIqK,IAAID,CAAR,CACA,IAAIG,MAAM,KAAM9I,IAAI,EAApB,CAEA,KAAK,IAAI+I,IAAI,CAAb,EAAgBA,IAAID,GAApB,EAAyBC,GAAzB,EAA8B,CAC1B,EAAEP,EAAF,CACA,IAAIQ,IAAIL,CAAR,CACA,IAAIvE,IAAIuE,CAAR,CACA,IAAIM,IAAIP,CAAR,CAEA,OAAOtE,EAAE2F,SAAF,CAAY3B,KAAKC,IAAL,CAAUC,IAAV,CAAea,IAA3B,CAAP,EAAyC,CACrC,IAAI/E,EAAEgF,GAAF,CAAMhB,KAAKC,IAAL,CAAUC,IAAV,CAAee,GAArB,EAA0BU,SAA1B,CAAoC3B,KAAKC,IAAL,CAAUC,IAAV,CAAea,IAAnD,CAAJ,EAA8D,CAC1DF,IAAIA,EAAExD,GAAF,CAAMuD,CAAN,CAAJ,CACA,IAAIC,EAAEe,OAAF,CAAU9B,IAAV,IAAkB,CAAtB,EAAyB,CACrBe,IAAIA,EAAEM,QAAF,CAAWrB,IAAX,CAAJ,CACH,CACJ,CACDc,IAAIA,EAAEvD,GAAF,CAAMuD,CAAN,CAAJ,CACA,IAAIA,EAAEgB,OAAF,CAAU9B,IAAV,IAAkB,CAAtB,EAAyB,CACrBc,IAAIA,EAAEO,QAAF,CAAWrB,IAAX,CAAJ,CACH,CACD9D,IAAIA,EAAEoF,UAAF,CAAa,CAAb,CAAJ,CACH,CAEDb,IAAIM,CAAJ,CACA,IAAIQ,IAAId,EAAEqB,OAAF,CAAUpB,CAAV,IAAe,CAAf,GAAmBA,EAAEW,QAAF,CAAWZ,CAAX,CAAnB,GAAmCA,EAAEY,QAAF,CAAWX,CAAX,CAA3C,CACAH,IAAI/J,QAAQ+K,CAAR,EAAWvB,IAAX,CAAJ,CACA,IAAIO,EAAEsB,SAAF,CAAY3B,KAAKC,IAAL,CAAUC,IAAV,CAAee,GAA3B,CAAJ,EAAqC,CACjC,MACH,CACD,IAAI,CAACN,IAAKA,IAAI,CAAV,KAAiB,CAArB,EAAwB,CACpBH,IAAID,CAAJ,CACH,CACJ,CACD,IAAIF,EAAEuB,OAAF,CAAU5B,KAAKC,IAAL,CAAUC,IAAV,CAAee,GAAzB,IAAgC,CAApC,EAAuC,CACnC,MACH,CACJ,CAED,IAAIM,IAAIzB,KAAKgC,GAAL,CAASzB,CAAT,CAAR,CAAqBoB,CAArB,CAAwBC,CAAxB,CAEA,IAAIrB,EAAEuB,OAAF,CAAUL,CAAV,IAAe,CAAnB,EAAsB,CAClBE,IAAIF,CAAJ,CACAG,IAAIrB,CAAJ,CACH,CAHD,MAGO,CACHoB,IAAIpB,CAAJ,CACAqB,IAAIH,CAAJ,CACH,CAED,OAAO,CAACtN,aAAawN,EAAEnK,QAAF,CAAW,EAAX,CAAb,CAAD,EAA+BrD,aAAayN,EAAEpK,QAAF,CAAW,EAAX,CAAb,CAA/B,EAA6D8I,EAA7D,CAAP,CACH,CAEM,SAAS5J,aAAT,CAAuBsJ,IAAvB,EAA6B,CAChC,IAAIiC,UAAU,EAAd,CACA,IAAIC,SAAS/K,KAAKqC,IAAL,CAAUyI,UAAU,2BAApB,IAAgC,CAA7C,CACA,IAAI3B,KAAK,CAAT,CACA,IAAIxI,CAAJ,EAAO0I,CAAP,CACA,IAAIK,CAAJ,EAAOD,GAAP,CACA,IAAIL,CAAJ,EAAOoB,CAAP,CACA,IAAIC,CAAJ,CACA,IAAId,IAAI,IAAIpH,KAAJ,CAAUwI,MAAV,CAAR,CACA,IAAIhG,IAAI,IAAIxC,KAAJ,CAAUwI,MAAV,CAAR,CACA,IAAInB,IAAI,IAAIrH,KAAJ,CAAUwI,MAAV,CAAR,CACA,IAAI3B,IAAI,IAAI7G,KAAJ,CAAUwI,MAAV,CAAR,CACA,IAAIX,IAAI,IAAI7H,KAAJ,CAAUwI,MAAV,CAAR,CACA,IAAIzB,IAAI,IAAI/G,KAAJ,CAAUwI,MAAV,CAAR,CACA,IAAIxB,IAAI,IAAIhH,KAAJ,CAAUwI,MAAV,CAAR,CAEA,KAAKpK,IAAI,CAAT,EAAYA,IAAI,CAAhB,EAAmBA,GAAnB,EAAwB,CACpB0I,IAAI,CAACnK,cAAc,GAAd,IAAqB,EAAtB,IAA4B,EAAhC,CACA,4BAASoK,CAAT,EAAYpK,cAAc,UAAd,IAA4B,CAAxC,EACA,yBAAMqK,CAAN,EAASD,CAAT,EACAG,MAAM,KAAM9I,IAAI,EAAhB,CAEA,KAAK+I,IAAI,CAAT,EAAYA,IAAID,GAAhB,EAAqBC,GAArB,EAA0B,CACtB,EAAEP,EAAF,CACA,yBAAMQ,CAAN,EAASL,CAAT,EACA,yBAAMvE,CAAN,EAASuE,CAAT,EACA,4BAASM,CAAT,EAAYP,CAAZ,EAEA,OAAO,CAAC,0BAAOtE,CAAP,CAAR,EAAmB,CACf,IAAIA,EAAE,CAAF,IAAO,CAAX,EAAc,CACV,wBAAK6E,CAAL,EAAQD,CAAR,EACA,IAAI,2BAAQC,CAAR,EAAWf,IAAX,CAAJ,EAAsB,CAClB,wBAAKe,CAAL,EAAQf,IAAR,EACH,CACJ,CACD,wBAAKc,CAAL,EAAQA,CAAR,EACA,IAAI,2BAAQA,CAAR,EAAWd,IAAX,CAAJ,EAAsB,CAClB,wBAAKc,CAAL,EAAQd,IAAR,EACH,CACD,+BAAY9D,CAAZ,EAAe,CAAf,EACH,CAED,yBAAMuE,CAAN,EAASM,CAAT,EACA,IAAI,2BAAQN,CAAR,EAAWC,CAAX,CAAJ,EAAmB,CACf,yBAAMa,CAAN,EAASd,CAAT,EACA,wBAAKc,CAAL,EAAQb,CAAR,EACH,CAHD,MAGO,CACH,yBAAMa,CAAN,EAASb,CAAT,EACA,wBAAKa,CAAL,EAAQd,CAAR,EACH,CACD,yBAAMc,CAAN,EAASvB,IAAT,EAAeO,CAAf,EAAkBO,CAAlB,EAAqB5E,CAArB,EACA,IAAI,CAAC,6BAAUqE,CAAV,EAAa,CAAb,CAAL,EAAsB,CAClB,MACH,CACD,IAAI,CAACM,IAAKA,IAAI,CAAV,KAAiB,CAArB,EAAwB,CACpB,yBAAMH,CAAN,EAASD,CAAT,EACH,CACJ,CACD,IAAI,2BAAQF,CAAR,EAAW,2BAAX,CAAJ,EAA0B,CACtB,MACH,CACJ,CAED,2BAAQP,IAAR,EAAcO,CAAd,EAAiBE,CAAjB,EAAoBC,CAApB,EAEA,IAAI,2BAAQH,CAAR,EAAWE,CAAX,CAAJ,EAAmB,CACfkB,IAAIlB,CAAJ,CACAmB,IAAIrB,CAAJ,CACH,CAHD,MAGO,CACHoB,IAAIpB,CAAJ,CACAqB,IAAInB,CAAJ,CACH,CAED,OAAO,CAAC1L,sBAAsB4M,CAAtB,CAAD,EAA2B5M,sBAAsB6M,CAAtB,CAA3B,EAAqDtB,EAArD,CAAP,CACH,CAEM,SAAS3J,WAAT,CAAqB8J,CAArB,EAAwBC,CAAxB,EAA2ByB,CAA3B,EAA8B,CACjC,IAAI,CACA,IAAIC,UAAU,8BAAWlO,WAAWuM,CAAX,CAAX,EAA0B,EAA1B,CAAd,CACA,IAAI4B,UAAU,8BAAWnO,WAAWwM,CAAX,CAAX,EAA0B,EAA1B,CAAd;AACA,YAAI4B,UAAU,8BAAWpO,WAAWiO,CAAX,CAAX,EAA0B,EAA1B,CAAd;AACA,YAAII,YAAY,0BAAOH,OAAP,EAAgBC,OAAhB,EAAyBC,OAAzB,CAAhB;;AAEA,eAAOnO,aAAa,8BAAWoO,SAAX,EAAsB,EAAtB,CAAb,CAAP;AACH,KAPD,CAOE,OAAO1P,CAAP,EAAU;AACR;AACH;;AAED,WAAOiC,gBAAgB,IAAI4C,sBAAJ,CAAe+I,CAAf,EAAkB+B,MAAlB,CAAyB,IAAI9K,sBAAJ,CAAegJ,CAAf,CAAzB,EAA4C,IAAIhJ,sBAAJ,CAAeyK,CAAf,CAA5C,CAAhB,EAAgF,GAAhF,CAAP;AACH,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrbeM,M,GAAAA,M;;;;AAIAC,M,GAAAA,M;;;;;AAKAC,U,GAAAA,U;;;;;;;;;;;;;;;;;;;;;;;AAuBAC,c,GAAAA,c;;;;;;;;;;;;;AAaAC,W,GAAAA,W;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDAC,O,GAAAA,O;;;;;;;;;AASAC,M,GAAAA,M;;;;;;;AAOAC,a,GAAAA,a;;;;;;;AAOAC,a,GAAAA,a;;;;;;;;;;;;;;;AAeAC,mB,GAAAA,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CAC,G,GAAAA,G;;;;;;;AAOAC,M,GAAAA,M;;;;;;;AAOAC,I,GAAAA,I;;;;;;;AAOAC,M,GAAAA,M;;;;;;;AAOAC,G,GAAAA,G;;;;;;;AAOAhG,G,GAAAA,G;;;;;;;AAOAiG,U,GAAAA,U;;;;;;;;AAQAC,O,GAAAA,O;;;;;;;;AAQAC,c,GAAAA,c;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoIAC,U,GAAAA,U;;;;;;;;;;AAUAC,W,GAAAA,W;;;;;;;;;;;;;;AAcAC,G,GAAAA,G;;;;;;;;;;AAUAC,I,GAAAA,I;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDAC,W,GAAAA,W;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuEAC,a,GAAAA,a;;;;;;;;;;;;;;;;AAgBAC,c,GAAAA,c;;;;;;;;AAQAC,K,GAAAA,K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqEAC,Q,GAAAA,Q;;;;;;;;AAQAC,Y,GAAAA,Y;;;;;;;;;;;;;;;;AAgBAC,O,GAAAA,O;;;;;;;;;;;;;;;;;;;;;;;;;AAyBAC,O,GAAAA,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DAC,M,GAAAA,M;;;;;;;;;;;;;;;;;AAiBAC,M,GAAAA,M;;;;;;;;;;;AAWAC,U,GAAAA,U;;;;;;;;;;;;;AAaAC,U,GAAAA,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDAC,S,GAAAA,S;;;;;;;;;;;;AAYA3D,M,GAAAA,M;;;;;;;;;;;;;;;;;;;AAmBA4D,M,GAAAA,M;;;;;;;;;;AAUAC,U,GAAAA,U;;;;;;;;;;;;;;;;;;;;;;;;;AAyBAC,G,GAAAA,G;;;;;;;;AAQAC,K,GAAAA,K;;;;;;;;;;AAUAC,Q,GAAAA,Q;;;;;;;;;;AAUAC,O,GAAAA,O;;;;;;;;;;;;;;;;;;;AAmBAC,W,GAAAA,W;;;;;;;;;;;;;;;;;AAiBAC,M,GAAAA,M;;;;;;;;;AASAC,U,GAAAA,U;;;;;;;;;;;;;;;;;;;;AAoBAC,Q,GAAAA,Q;;;;;;;;;;;;;;;;;;;AAmBAC,O,GAAAA,O;;;;;;;;;;;;AAYAC,Q,GAAAA,Q;;;;;;;;;;;;;;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a;;;AAGb,YAAY,mBAAO,CAAC,CAAU;;;AAG9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK,wCAAwC,EAAE,aAAa,sBAAsB;AAClF,KAAK,oDAAoD,EAAE,aAAa,0BAA0B;;;AAGlG;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA,kCAAkC;;;AAGlC;AACA;AACA;;AAEA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,wBAAwB,aAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,sBAAsB,SAAS;AAC/B;AACA;AACA,mBAAmB,qBAAqB,UAAU;;AAElD;AACA;AACA,oBAAoB,0BAA0B,gBAAgB,UAAU;;AAExE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,0BAA0B,UAAU;;AAExD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,kBAAkB;;AAE3C;AACA;AACA,kDAAkD,OAAO;;AAEzD;AACA;AACA,gBAAgB,YAAY;;AAE5B;AACA;AACA,kBAAkB,YAAY;;AAE9B;AACA;;;;;;;;AC1La;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AA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CA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,mDAAmD;AACxE;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gDAAgD,EAAE;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,eAAe;AACvC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,wBAAwB,QAAQ;AAChC;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,cAAc;AACjuDAAuD,OAAO;AAC9D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD,OAAO;AAC9D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA,GAAG;AACH;AACA,eAAe,SAAS;AACxB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,YAAY;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;AC5vDA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;;ACpBY;;AAEZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kCAAkC,SAAS;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,UAAU;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;ACvJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,QAAQ,WAAW;;AAEnB;AACA;AACA;AACA,QAAQ,WAAW;;AAEnB;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;A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Ae;AACvC,gBAAgB,mBAAO,CAAC,EAAsB;;AAE9C;;AAEA;;AAEA;;;;;;;;ACba;;;AAGb,mBAAmB,mBAAO,CAAC,EAAgB;AAC3C,mBAAmB,mBAAO,CAAC,CAAgB;AAC3C,mBAAmB,mBAAO,CAAC,EAAiB;AAC5C,mBAAmB,mBAAO,CAAC,CAAiB;AAC5C,mBAAmB,mBAAO,CAAC,EAAgB;;AAE3C;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,UAAU;AAC7C;AACA;AACA,8BAA8B;AAC9B;AACA,qBAAqB,8BAA8B;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,eAAe;;AAElB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB;AAClB,mBAAmB;AACnB,sBAAsB;AACtB,mBAAmB;;AAEnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,cAAc;;AAEjC;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,qBAAqB,yCAAyC;;AAE9D;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;;;;;;AC/Ya;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,CAAiB;AACvC,cAAc,mBAAO,CAAC,EAAS;AAC/B,cAAc,mBAAO,CAAC,EAAW;AACjC,cAAc,mBAAO,CAAC,EAAS;AAC/B,cAAc,mBAAO,CAAC,CAAY;;AAElC;AACA;;;AAGA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC;AAChC;;;AAGA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0BAA0B;AAC1B,0BAA0B;AAC1B,0BAA0B;AAC1B,0BAA0B;;AAE1B,mBAAmB;;AAEnB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB,sBAAsB,qBAAqB,cAAc,EAAE;;;AAG/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,QAAQ;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,YAAY;AAC/B,kBAAkB,UAAU;;AAE5B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,wBAAwB;AACxB,YAAY;AACZ,UAAU;AACV,+BAA+B;AAC/B,gCAAgC;AAChC;AACA;;AAEA,sBAAsB;;AAEtB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,0BAA0B;;AAE3D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,aAAa;;AAEb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE;;AAEnE;AACA,yDAAyD;AACzD;;AAEA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,0DAA0D;AAC1D;;AAEA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,aAAa;;AAEb;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,OAAO,EAAE;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;;AAEA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX,mBAAmB;;AAEnB;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,OAAO,EAAE;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oEAAoE;AACpE;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,0DAA0D;AAC1D;;AAEA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB;AACrB,eAAe;;AAEf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,mBAAmB;AACnB,kBAAkB;AAClB,0BAA0B;AAC1B,4BAA4B;AAC5B,uBAAuB;AACvB,mBAAmB;AACnB,gBAAgB;AAChB,qBAAqB;AACrB,mBAAmB;AACnB,2BAA2B;AAC3B,uBAAuB;;AAEvB,kBAAkB;AAClB,kBAAkB;AAClB,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB;;AAEnB,iBAAiB;AACjB,qBAAqB;AACrB,qBAAqB;AACrB,qBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,wBAAwB;AACxB,sBAAsB;AACtB,2BAA2B;AAC3B,oBAAoB;AACpB,uBAAuB;AACvB,qBAAqB;;AAErB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB;AACjB,oBAAoB;;AAEpB;AACA;;AAEA,sBAAsB;;AAEtB;;AAEA;;AAEA,2CAA2C;AAC3C,6CAA6C;AAC7C,4CAA4C;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB;AACvB,uBAAuB;AACvB,uBAAuB;;AAEvB;AACA;AACA;;AAEA,0BAA0B;AAC1B,+CAA+C;AAC/C;;AAEA,oBAAoB;AACpB,oBAAoB;AACpB;AACA;AACA;;AAEA,gDAAgD;AAChD;AACA;AACA;;AAEA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA;;AAEA,mBAAmB;AACnB,sBAAsB;AACtB,mBAAmB;AACnB,kBAAkB;;;AAGlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,6BAA6B,uBAAuB;AACpD,8BAA8B,uBAAuB;AACrD;AACA;AACA;;;AAGA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB;AACvB;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB;;AAErB,sCAAsC;;AAEtC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA,eAAe;;AAEf;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB;AACA;;AAEA;AACA;;AAEA,uBAAuB;AACvB,qBAAqB;AACrB;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,6BAA6B,uBAAuB;AACpD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;;AAEnC;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,uBAAuB;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,8BAA8B;;AAE9B,2BAA2B,aAAa;AACxC,oBAAoB,qBAAqB;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oDAAoD;AACpD;AACA;;AAEA,aAAa;;AAEb;AACA;AACA,qBAAqB;AACrB,yBAAyB;AACzB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACj1Da;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,YAAY,mBAAO,CAAC,CAAiB;;AAErC;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B;AAC9B;;AAEA;;;AAGA,oBAAoB,sBAAsB,qBAAqB,cAAc,EAAE;;AAE/E;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,wBAAwB;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA,kCAAkC;AAClC,iCAAiC;AACjC,iCAAiC;AACjC,4BAA4B;AAC5B,iCAAiC;;AAEjC;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA,2BAA2B;AAC3B,oBAAoB;AACpB,6BAA6B;AAC7B;;;;AAIA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,WAAW;AACX,WAAW;AACX,YAAY;AACZ,QAAQ;AACR,mBAAmB;;AAEnB,gBAAgB,kBAAkB;AAClC;AACA;;AAEA;AACA;AACA;AACA,+CAA+C;;AAE/C,0BAA0B,eAAe;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,UAAU,EAAE;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;;AAE/B;AACA;;AAEA;AACA;AACA;AACA,oCAAoC,QAAQ;AAC5C,uBAAuB;AACvB,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,yBAAyB,YAAY;AACrC;AACA;AACA;AACA,yBAAyB,UAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,mBAAmB;AACnB,qBAAqB;AACrB;AACA,0CAA0C;AAC1C,eAAe;AACf,WAAW;AACX,QAAQ;;AAER;AACA;AACA;AACA,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,gBAAgB;AAC7B;AACA,oBAAoB,UAAU;AAC9B;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,QAAQ;AACR,WAAW;AACX,aAAa;AACb,WAAW;AACX,WAAW;AACX;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,yBAAyB;AACzC;AACA,eAAe,8BAA8B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,WAAW;AAC3B;AACA,eAAe,8BAA8B;AAC7C;AACA;AACA;AACA;AACA,aAAa;AACb,QAAQ,gBAAgB;AACxB;AACA,eAAe,oCAAoC;AACnD;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,kBAAkB;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,aAAa;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA,aAAa,aAAa,QAAQ,iCAAiC;AACnE,aAAa,aAAa,QAAQ,iCAAiC;AACnE,aAAa,cAAc,OAAO,+BAA+B;;AAEjE;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,eAAe;AACf,kBAAkB;AAClB;AACA,eAAe;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,YAAY;AACZ;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,OAAO;;AAEtD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,2BAA2B;AAC3B;AACA,WAAW;AACX,SAAS;AACT,aAAa;AACb,WAAW;AACX,YAAY;;AAEZ;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC;AAChC;AACA,OAAO;AACP;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA,kCAAkC;AAClC;AACA,eAAe;AACf;AACA;;AAEA,kCAAkC;AAClC;AACA;AACA;AACA,oCAAoC;AACpC;AACA,OAAO;;AAEP;AACA;AACA;;AAEA,KAAK;AACL;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,oBAAoB;AACpB,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,WAAW;AACxB;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uCAAuC,QAAQ,OAAO,wBAAwB;;AAE9E;AACA;AACA;AACA,eAAe;AACf;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;;AAEA,8BAA8B;;AAE9B,6BAA6B;AAC7B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,mBAAmB;AACnB;AACA,QAAQ;AACR,mBAAmB;AACnB,aAAa;;AAEb,wCAAwC;;AAExC,gBAAgB;AAChB,oBAAoB;AACpB,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA,gDAAgD;;AAEhD,aAAa,eAAe;AAC5B;AACA;;AAEA;AACA;;AAEA,KAAK;AACL;;AAEA,KAAK;;AAEL,+BAA+B,kCAAkC;AACjE;;AAEA,KAAK;AACL;;AAEA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,mBAAmB;AACnB;AACA,QAAQ;AACR,mBAAmB;AACnB,aAAa;;AAEb,wCAAwC;;AAExC,gBAAgB;AAChB,oBAAoB;AACpB,oBAAoB;;AAEpB,+BAA+B;AAC/B;AACA;AACA;AACA;;AAEA,aAAa,eAAe;AAC5B;AACA;;AAEA;AACA;;AAEA,KAAK;AACL,UAAU,iCAAiC,EAAE;;AAE7C,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,kBAAkB;;AAElB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAkC,kBAAkB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA,gCAAgC;AAChC,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;;AAEA,wCAAwC;AACxC;;AAEA,wCAAwC;AACxC;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,IAAI,MAAM,GAAG,MAAM,GAAG;AAChD;AACA;AACA;AACA,SAAS,IAAI,KAAK,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,IAAI,MAAM,IAAI;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,iBAAiB;AACjB,WAAW;AACX;AACA,wDAAwD;AACxD,uCAAuC;AACvC;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,iBAAiB;AACjB,WAAW;AACX;AACA,4BAA4B;AAC5B,sBAAsB;;AAEtB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kCAAkC,wBAAwB;;AAE1D,GAAG;AACH;AACA,4CAA4C;AAC5C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;;AAEH;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,kBAAkB;AAClB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;ACrsCa;;;AAGb,mBAAmB,mBAAO,CAAC,EAAgB;AAC3C,mBAAmB,mBAAO,CAAC,CAAgB;AAC3C,mBAAmB,mBAAO,CAAC,EAAiB;AAC5C,mBAAmB,mBAAO,CAAC,EAAkB;AAC7C,mBAAmB,mBAAO,CAAC,CAAiB;AAC5C,mBAAmB,mBAAO,CAAC,EAAgB;AAC3C,mBAAmB,mBAAO,CAAC,EAAiB;;AAE5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,UAAU;AAC7C;AACA;AACA,8BAA8B;AAC9B;AACA,qBAAqB,8BAA8B;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG,eAAe;;AAElB;;AAEA;AACA;AACA;AACA;AACA,+BAA+B,sBAAsB;AACrD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB,mBAAmB;AACnB,sBAAsB;AACtB,mBAAmB;;AAEnB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,cAAc;AACjC;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,sDAAsD;;AAEtD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,kEAAkE;;AAEvF;;AAEA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,qBAAqB,yCAAyC;;AAE9D;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;;;;;;ACtaa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,mBAAO,CAAC,CAAiB;AAC7C,oBAAoB,mBAAO,CAAC,EAAW;AACvC,oBAAoB,mBAAO,CAAC,EAAS;AACrC,oBAAoB,mBAAO,CAAC,EAAW;AACvC,oBAAoB,mBAAO,CAAC,EAAY;;AAExC;AACA;AACA;;AAEA;AACA;;;AAGA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;;AAGA,gBAAgB;AAChB,iBAAiB;AACjB,gBAAgB;AAChB,cAAc;AACd,iBAAiB;AACjB,iBAAiB;AACjB,gBAAgB;AAChB,mBAAmB;AACnB,gBAAgB;AAChB,mBAAmB;AACnB,iBAAiB;AACjB,qBAAqB;AACrB,uBAAuB;AACvB,uBAAuB;AACvB,sBAAsB;AACtB,qBAAqB;AACrB,sBAAsB;AACtB,wBAAwB;AACxB,yBAAyB;AACzB,yBAAyB;AACzB,wBAAwB;AACxB,2BAA2B;AAC3B,yBAAyB;AACzB,4BAA4B;AAC5B,0BAA0B;AAC1B,wBAAwB;AACxB,kBAAkB;AAClB,mBAAmB;AACnB,iBAAiB;AACjB,gBAAgB;AAChB,gBAAgB;AAChB,iBAAiB;;AAEjB;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,gBAAgB;AAChB,oBAAoB;AACpB,gBAAgB;AAChB,wBAAwB;AACxB,iBAAiB;AACjB,gBAAgB;AAChB,iBAAiB;AACjB,iBAAiB;AACjB;AACA,mBAAmB;;AAEnB;AACA,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;AACjB,qBAAqB;;AAErB;AACA,gBAAgB;AAChB,gBAAgB;;AAEhB;AACA,kBAAkB;AAClB,kBAAkB;;AAElB;AACA,iBAAiB;;AAEjB;AACA,sBAAsB;AACtB,uBAAuB;AACvB,mBAAmB;AACnB,oBAAoB;;AAEpB;AACA,iBAAiB;AACjB,gBAAgB;AAChB,iBAAiB;AACjB,gBAAgB;AAChB,mBAAmB;;AAEnB,mCAAmC;AACnC,mCAAmC;;AAEnC;AACA;AACA;AACA;AACA,yCAAyC;AACzC,qBAAqB;AACrB,sBAAsB;AACtB,gBAAgB;AAChB,gBAAgB;AAChB,eAAe;AACf;;AAEA;AACA;;AAEA,6BAA6B,uBAAuB;AACpD;AACA;AACA,gBAAgB;AAChB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,6BAA6B,uBAAuB;AACpD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,6BAA6B,uBAAuB;AACpD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAc,uBAAuB;AACrC,sBAAsB;;AAEtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB;;AAEpB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,uBAAuB,uBAAuB;AAC9C,uBAAuB,uBAAuB;AAC9C,uBAAuB,uBAAuB;AAC9C,uBAAuB,uBAAuB;;AAE9C,uEAAuE,UAAU;;AAEjF;AACA;AACA,sBAAsB,uBAAuB;;AAE7C,uEAAuE,UAAU;;AAEjF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,iBAAiB;AACzD,sCAAsC,qBAAqB;AAC3D;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB,WAAW;AACX,UAAU;AACV,iBAAiB;AACjB,WAAW;AACX,WAAW;AACX,gBAAgB;AAChB,WAAW;AACX,WAAW;AACX;AACA,eAAe;AACf,mCAAmC;AACnC,aAAa;AACb,mCAAmC;AACnC,UAAU;AACV,UAAU;AACV,+BAA+B;AAC/B;;AAEA,QAAQ;;AAER;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,qBAAqB,EAAE;;;AAGnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,aAAa;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,iBAAiB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,iBAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,aAAa;AACzC,4BAA4B,aAAa;AACzC,2BAA2B,iBAAiB;AAC5C,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,oEAAoE;AACpE;AACA;AACA;;AAEA,sCAAsC,OAAO;AAC7C;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,iBAAiB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,iBAAiB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,iBAAiB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iCAAiC,OAAO;;AAExC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,iBAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,kEAAkE;AAClE;AACA;AACA;;AAEA,kCAAkC,OAAO;AACzC;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA,kDAAkD,OAAO;AACzD;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,oEAAoE;AACpE;AACA;AACA;;AAEA,oCAAoC,OAAO;AAC3C;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA,kDAAkD,OAAO;AACzD;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iBAAiB;AAC1C;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,qBAAqB;AAC3D,8BAA8B,aAAa;AAC3C;AACA;AACA;AACA;AACA,aAAa;AACb,qCAAqC,kBAAkB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,qBAAqB;AACzD;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,0BAA0B,aAAa;AACvC;AACA;AACA;AACA;AACA,SAAS;AACT,iCAAiC,kBAAkB;AACnD;AACA;AACA,yBAAyB,iBAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,6BAA6B,uBAAuB;AACpD;AACA,+BAA+B,uBAAuB;;AAEtD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,6DAA6D,uBAAuB;AACpF;;AAEA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnhDa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb,cAAc;;AAEd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,WAAW;AACX,WAAW;AACX,UAAU;AACV,UAAU;AACV;AACA,WAAW;AACX;AACA,YAAY;AACZ,YAAY;AACZ,YAAY;AACZ;AACA,eAAe;AACf,WAAW;AACX,WAAW;AACX,YAAY;AACZ,YAAY;AACZ,YAAY;AACZ,YAAY;AACZ,WAAW;AACX,SAAS;AACT;AACA,UAAU;AACV,WAAW;AACX,WAAW;AACX;;;AAGA,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,WAAW,GAAG;AACd;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;;AAEA,wBAAwB;AACxB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,4BAA4B;AAC5B,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,gCAAgC;AAChC;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,mBAAmB;AACnB,qCAAqC;AACrC;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,mBAAmB;AACnB;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA,qBAAqB;AACrB,uCAAuC;AACvC;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,mBAAmB;AACnB,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,kBAAkB;AAClB;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;AACZ;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxVa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,CAAiB;;AAErC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB;;AAEzB,cAAc;AACd,cAAc;AACd,uBAAuB;AACvB,eAAe;AACf,eAAe;AACf,eAAe;AACf,eAAe;AACf,eAAe;AACf,eAAe;AACf,WAAW;AACX,WAAW;AACX,UAAU;AACV,WAAW;AACX,WAAW;AACX,kBAAkB;AAClB;AACA,iBAAiB;AACjB,UAAU;AACV,2CAA2C,eAAe;AAC1D,0CAA0C,eAAe;AACzD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA,eAAe,aAAa;AAC5B;AACA;;AAEA;AACA;AACA,qBAAqB,UAAU;AAC/B,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA,kBAAkB;AAClB,sCAAsC,2BAA2B;AACjE,uCAAuC;AACvC,wCAAwC;AACxC;;;AAGA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA,eAAe,WAAW;AAC1B,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA,eAAe,eAAe;AAC9B;AACA;;AAEA;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,GAAG,OAAO;AACV;AACA;AACA;AACA;;AAEA;AACA,WAAW;AACX,UAAU;AACV,YAAY;AACZ,qBAAqB;AACrB,cAAc;AACd,WAAW;AACX,WAAW;AACX,mBAAmB;AACnB,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;ACtVa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","file":"telejs.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"crypto-js\"), require(\"rusha\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"telejs\", [\"crypto-js\", \"rusha\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"telejs\"] = factory(require(\"crypto-js\"), require(\"rusha\"));\n\telse\n\t\troot[\"telejs\"] = factory(root[\"crypto-js\"], root[\"rusha\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_12__, __WEBPACK_EXTERNAL_MODULE_32__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 20);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b31914e8a35c9115fab0","'use strict';\n\n\nvar TYPED_OK =  (typeof Uint8Array !== 'undefined') &&\n                (typeof Uint16Array !== 'undefined') &&\n                (typeof Int32Array !== 'undefined');\n\nfunction _has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexports.assign = function (obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    var source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (var p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// reduce buffer size, avoiding mem copy\nexports.shrinkBuf = function (buf, size) {\n  if (buf.length === size) { return buf; }\n  if (buf.subarray) { return buf.subarray(0, size); }\n  buf.length = size;\n  return buf;\n};\n\n\nvar fnTyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    if (src.subarray && dest.subarray) {\n      dest.set(src.subarray(src_offs, src_offs + len), dest_offs);\n      return;\n    }\n    // Fallback to ordinary array\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    var i, l, len, pos, chunk, result;\n\n    // calculate data length\n    len = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      len += chunks[i].length;\n    }\n\n    // join chunks\n    result = new Uint8Array(len);\n    pos = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      chunk = chunks[i];\n      result.set(chunk, pos);\n      pos += chunk.length;\n    }\n\n    return result;\n  }\n};\n\nvar fnUntyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    return [].concat.apply([], chunks);\n  }\n};\n\n\n// Enable/Disable typed arrays use, for testing\n//\nexports.setTyped = function (on) {\n  if (on) {\n    exports.Buf8  = Uint8Array;\n    exports.Buf16 = Uint16Array;\n    exports.Buf32 = Int32Array;\n    exports.assign(exports, fnTyped);\n  } else {\n    exports.Buf8  = Array;\n    exports.Buf16 = Array;\n    exports.Buf32 = Array;\n    exports.assign(exports, fnUntyped);\n  }\n};\n\nexports.setTyped(TYPED_OK);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pako/lib/utils/common.js\n// module id = 0\n// module chunks = 0","import * as DateTimeService from './DateTimeService'\nimport ErrorResponse from './ErrorResponse'\n\nexport default { DateTimeService, ErrorResponse }\n\n\n// WEBPACK FOOTER //\n// ./src/Services/index.js","import * as utils from './utils'\nimport * as BigNumbers from './bigNumbers'\n\nexport default { ...utils, ...BigNumbers }\n\n\n// WEBPACK FOOTER //\n// ./src/Utils/index.js","const Config = {\n  Log: {\n    verbose: false\n  },\n  App: {\n    id: null,\n    hash: null,\n    version: '2.0.1',\n  },\n  Modes: {\n    // allow_tmpfs: false,\n    // animations: true,\n    // chrome_packed: false,\n    // debug: false,\n    // force_desktop: false,\n    // force_mobile: false,\n    // http: false,\n    // ios_standalone: undefined,\n    // memory_only: false,\n    // nacl: true,\n    // packed: false,\n    // push_api: true,\n    ssl: false,\n    test: true,\n    websockets: true,\n    // webcrypto: true\n  }\n}\n\nConfig.Schema = Config.Schema || {}\nConfig.Schema.MTProto = null;\nConfig.Schema.MTProto = {\n  'constructors': [\n    {\n      'id': '481674261',\n      'predicate': 'vector',\n      'params': [\n\n      ],\n      'type': 'Vector t'\n    },\n    {\n      'id': '85337187',\n      'predicate': 'resPQ',\n      'params': [\n        {\n          'name': 'nonce',\n          'type': 'int128'\n        },\n        {\n          'name': 'server_nonce',\n          'type': 'int128'\n        },\n        {\n          'name': 'pq',\n          'type': 'bytes'\n        },\n        {\n          'name': 'server_public_key_fingerprints',\n          'type': 'Vector<long>'\n        }\n      ],\n      'type': 'ResPQ'\n    },\n    {\n      'id': '-2083955988',\n      'predicate': 'p_q_inner_data',\n      'params': [\n        {\n          'name': 'pq',\n          'type': 'bytes'\n        },\n        {\n          'name': 'p',\n          'type': 'bytes'\n        },\n        {\n          'name': 'q',\n          'type': 'bytes'\n        },\n        {\n          'name': 'nonce',\n          'type': 'int128'\n        },\n        {\n          'name': 'server_nonce',\n          'type': 'int128'\n        },\n        {\n          'name': 'new_nonce',\n          'type': 'int256'\n        }\n      ],\n      'type': 'P_Q_inner_data'\n    },\n    {\n      'id': '2043348061',\n      'predicate': 'server_DH_params_fail',\n      'params': [\n        {\n          'name': 'nonce',\n          'type': 'int128'\n        },\n        {\n          'name': 'server_nonce',\n          'type': 'int128'\n        },\n        {\n          'name': 'new_nonce_hash',\n          'type': 'int128'\n        }\n      ],\n      'type': 'Server_DH_Params'\n    },\n    {\n      'id': '-790100132',\n      'predicate': 'server_DH_params_ok',\n      'params': [\n        {\n          'name': 'nonce',\n          'type': 'int128'\n        },\n        {\n          'name': 'server_nonce',\n          'type': 'int128'\n        },\n        {\n          'name': 'encrypted_answer',\n          'type': 'bytes'\n        }\n      ],\n      'type': 'Server_DH_Params'\n    },\n    {\n      'id': '-1249309254',\n      'predicate': 'server_DH_inner_data',\n      'params': [\n        {\n          'name': 'nonce',\n          'type': 'int128'\n        },\n        {\n          'name': 'server_nonce',\n          'type': 'int128'\n        },\n        {\n          'name': 'g',\n          'type': 'int'\n        },\n        {\n          'name': 'dh_prime',\n          'type': 'bytes'\n        },\n        {\n          'name': 'g_a',\n          'type': 'bytes'\n        },\n        {\n          'name': 'server_time',\n          'type': 'int'\n        }\n      ],\n      'type': 'Server_DH_inner_data'\n    },\n    {\n      'id': '1715713620',\n      'predicate': 'client_DH_inner_data',\n      'params': [\n        {\n          'name': 'nonce',\n          'type': 'int128'\n        },\n        {\n          'name': 'server_nonce',\n          'type': 'int128'\n        },\n        {\n          'name': 'retry_id',\n          'type': 'long'\n        },\n        {\n          'name': 'g_b',\n          'type': 'bytes'\n        }\n      ],\n      'type': 'Client_DH_Inner_Data'\n    },\n    {\n      'id': '1003222836',\n      'predicate': 'dh_gen_ok',\n      'params': [\n        {\n          'name': 'nonce',\n          'type': 'int128'\n        },\n        {\n          'name': 'server_nonce',\n          'type': 'int128'\n        },\n        {\n          'name': 'new_nonce_hash1',\n          'type': 'int128'\n        }\n      ],\n      'type': 'Set_client_DH_params_answer'\n    },\n    {\n      'id': '1188831161',\n      'predicate': 'dh_gen_retry',\n      'params': [\n        {\n          'name': 'nonce',\n          'type': 'int128'\n        },\n        {\n          'name': 'server_nonce',\n          'type': 'int128'\n        },\n        {\n          'name': 'new_nonce_hash2',\n          'type': 'int128'\n        }\n      ],\n      'type': 'Set_client_DH_params_answer'\n    },\n    {\n      'id': '-1499615742',\n      'predicate': 'dh_gen_fail',\n      'params': [\n        {\n          'name': 'nonce',\n          'type': 'int128'\n        },\n        {\n          'name': 'server_nonce',\n          'type': 'int128'\n        },\n        {\n          'name': 'new_nonce_hash3',\n          'type': 'int128'\n        }\n      ],\n      'type': 'Set_client_DH_params_answer'\n    },\n    {\n      'id': '-212046591',\n      'predicate': 'rpc_result',\n      'params': [\n        {\n          'name': 'req_msg_id',\n          'type': 'long'\n        },\n        {\n          'name': 'result',\n          'type': 'Object'\n        }\n      ],\n      'type': 'RpcResult'\n    },\n    {\n      'id': '558156313',\n      'predicate': 'rpc_error',\n      'params': [\n        {\n          'name': 'error_code',\n          'type': 'int'\n        },\n        {\n          'name': 'error_message',\n          'type': 'string'\n        }\n      ],\n      'type': 'RpcError'\n    },\n    {\n      'id': '1579864942',\n      'predicate': 'rpc_answer_unknown',\n      'params': [\n\n      ],\n      'type': 'RpcDropAnswer'\n    },\n    {\n      'id': '-847714938',\n      'predicate': 'rpc_answer_dropped_running',\n      'params': [\n\n      ],\n      'type': 'RpcDropAnswer'\n    },\n    {\n      'id': '-1539647305',\n      'predicate': 'rpc_answer_dropped',\n      'params': [\n        {\n          'name': 'msg_id',\n          'type': 'long'\n        },\n        {\n          'name': 'seq_no',\n          'type': 'int'\n        },\n        {\n          'name': 'bytes',\n          'type': 'int'\n        }\n      ],\n      'type': 'RpcDropAnswer'\n    },\n    {\n      'id': '155834844',\n      'predicate': 'future_salt',\n      'params': [\n        {\n          'name': 'valid_since',\n          'type': 'int'\n        },\n        {\n          'name': 'valid_until',\n          'type': 'int'\n        },\n        {\n          'name': 'salt',\n          'type': 'long'\n        }\n      ],\n      'type': 'FutureSalt'\n    },\n    {\n      'id': '-1370486635',\n      'predicate': 'future_salts',\n      'params': [\n        {\n          'name': 'req_msg_id',\n          'type': 'long'\n        },\n        {\n          'name': 'now',\n          'type': 'int'\n        },\n        {\n          'name': 'salts',\n          'type': 'vector<future_salt>'\n        }\n      ],\n      'type': 'FutureSalts'\n    },\n    {\n      'id': '880243653',\n      'predicate': 'pong',\n      'params': [\n        {\n          'name': 'msg_id',\n          'type': 'long'\n        },\n        {\n          'name': 'ping_id',\n          'type': 'long'\n        }\n      ],\n      'type': 'Pong'\n    },\n    {\n      'id': '-501201412',\n      'predicate': 'destroy_session_ok',\n      'params': [\n        {\n          'name': 'session_id',\n          'type': 'long'\n        }\n      ],\n      'type': 'DestroySessionRes'\n    },\n    {\n      'id': '1658015945',\n      'predicate': 'destroy_session_none',\n      'params': [\n        {\n          'name': 'session_id',\n          'type': 'long'\n        }\n      ],\n      'type': 'DestroySessionRes'\n    },\n    {\n      'id': '-1631450872',\n      'predicate': 'new_session_created',\n      'params': [\n        {\n          'name': 'first_msg_id',\n          'type': 'long'\n        },\n        {\n          'name': 'unique_id',\n          'type': 'long'\n        },\n        {\n          'name': 'server_salt',\n          'type': 'long'\n        }\n      ],\n      'type': 'NewSession'\n    },\n    {\n      'id': '1945237724',\n      'predicate': 'msg_container',\n      'params': [\n        {\n          'name': 'messages',\n          'type': 'vector<%Message>'\n        }\n      ],\n      'type': 'MessageContainer'\n    },\n    {\n      'id': '1538843921',\n      'predicate': 'message',\n      'params': [\n        {\n          'name': 'msg_id',\n          'type': 'long'\n        },\n        {\n          'name': 'seqno',\n          'type': 'int'\n        },\n        {\n          'name': 'bytes',\n          'type': 'int'\n        },\n        {\n          'name': 'body',\n          'type': 'Object'\n        }\n      ],\n      'type': 'Message'\n    },\n    {\n      'id': '-530561358',\n      'predicate': 'msg_copy',\n      'params': [\n        {\n          'name': 'orig_message',\n          'type': 'Message'\n        }\n      ],\n      'type': 'MessageCopy'\n    },\n    {\n      'id': '812830625',\n      'predicate': 'gzip_packed',\n      'params': [\n        {\n          'name': 'packed_data',\n          'type': 'bytes'\n        }\n      ],\n      'type': 'Object'\n    },\n    {\n      'id': '1658238041',\n      'predicate': 'msgs_ack',\n      'params': [\n        {\n          'name': 'msg_ids',\n          'type': 'Vector<long>'\n        }\n      ],\n      'type': 'MsgsAck'\n    },\n    {\n      'id': '-1477445615',\n      'predicate': 'bad_msg_notification',\n      'params': [\n        {\n          'name': 'bad_msg_id',\n          'type': 'long'\n        },\n        {\n          'name': 'bad_msg_seqno',\n          'type': 'int'\n        },\n        {\n          'name': 'error_code',\n          'type': 'int'\n        }\n      ],\n      'type': 'BadMsgNotification'\n    },\n    {\n      'id': '-307542917',\n      'predicate': 'bad_server_salt',\n      'params': [\n        {\n          'name': 'bad_msg_id',\n          'type': 'long'\n        },\n        {\n          'name': 'bad_msg_seqno',\n          'type': 'int'\n        },\n        {\n          'name': 'error_code',\n          'type': 'int'\n        },\n        {\n          'name': 'new_server_salt',\n          'type': 'long'\n        }\n      ],\n      'type': 'BadMsgNotification'\n    },\n    {\n      'id': '2105940488',\n      'predicate': 'msg_resend_req',\n      'params': [\n        {\n          'name': 'msg_ids',\n          'type': 'Vector<long>'\n        }\n      ],\n      'type': 'MsgResendReq'\n    },\n    {\n      'id': '-630588590',\n      'predicate': 'msgs_state_req',\n      'params': [\n        {\n          'name': 'msg_ids',\n          'type': 'Vector<long>'\n        }\n      ],\n      'type': 'MsgsStateReq'\n    },\n    {\n      'id': '81704317',\n      'predicate': 'msgs_state_info',\n      'params': [\n        {\n          'name': 'req_msg_id',\n          'type': 'long'\n        },\n        {\n          'name': 'info',\n          'type': 'bytes'\n        }\n      ],\n      'type': 'MsgsStateInfo'\n    },\n    {\n      'id': '-1933520591',\n      'predicate': 'msgs_all_info',\n      'params': [\n        {\n          'name': 'msg_ids',\n          'type': 'Vector<long>'\n        },\n        {\n          'name': 'info',\n          'type': 'bytes'\n        }\n      ],\n      'type': 'MsgsAllInfo'\n    },\n    {\n      'id': '661470918',\n      'predicate': 'msg_detailed_info',\n      'params': [\n        {\n          'name': 'msg_id',\n          'type': 'long'\n        },\n        {\n          'name': 'answer_msg_id',\n          'type': 'long'\n        },\n        {\n          'name': 'bytes',\n          'type': 'int'\n        },\n        {\n          'name': 'status',\n          'type': 'int'\n        }\n      ],\n      'type': 'MsgDetailedInfo'\n    },\n    {\n      'id': '-2137147681',\n      'predicate': 'msg_new_detailed_info',\n      'params': [\n        {\n          'name': 'answer_msg_id',\n          'type': 'long'\n        },\n        {\n          'name': 'bytes',\n          'type': 'int'\n        },\n        {\n          'name': 'status',\n          'type': 'int'\n        }\n      ],\n      'type': 'MsgDetailedInfo'\n    }\n  ],\n  'methods': [\n    {\n      'id': '1615239032',\n      'method': 'req_pq',\n      'params': [\n        {\n          'name': 'nonce',\n          'type': 'int128'\n        }\n      ],\n      'type': 'ResPQ'\n    },\n    {\n      'id': '-686627650',\n      'method': 'req_DH_params',\n      'params': [\n        {\n          'name': 'nonce',\n          'type': 'int128'\n        },\n        {\n          'name': 'server_nonce',\n          'type': 'int128'\n        },\n        {\n          'name': 'p',\n          'type': 'bytes'\n        },\n        {\n          'name': 'q',\n          'type': 'bytes'\n        },\n        {\n          'name': 'public_key_fingerprint',\n          'type': 'long'\n        },\n        {\n          'name': 'encrypted_data',\n          'type': 'bytes'\n        }\n      ],\n      'type': 'Server_DH_Params'\n    },\n    {\n      'id': '-184262881',\n      'method': 'set_client_DH_params',\n      'params': [\n        {\n          'name': 'nonce',\n          'type': 'int128'\n        },\n        {\n          'name': 'server_nonce',\n          'type': 'int128'\n        },\n        {\n          'name': 'encrypted_data',\n          'type': 'bytes'\n        }\n      ],\n      'type': 'Set_client_DH_params_answer'\n    },\n    {\n      'id': '1491380032',\n      'method': 'rpc_drop_answer',\n      'params': [\n        {\n          'name': 'req_msg_id',\n          'type': 'long'\n        }\n      ],\n      'type': 'RpcDropAnswer'\n    },\n    {\n      'id': '-1188971260',\n      'method': 'get_future_salts',\n      'params': [\n        {\n          'name': 'num',\n          'type': 'int'\n        }\n      ],\n      'type': 'FutureSalts'\n    },\n    {\n      'id': '2059302892',\n      'method': 'ping',\n      'params': [\n        {\n          'name': 'ping_id',\n          'type': 'long'\n        }\n      ],\n      'type': 'Pong'\n    },\n    {\n      'id': '-213746804',\n      'method': 'ping_delay_disconnect',\n      'params': [\n        {\n          'name': 'ping_id',\n          'type': 'long'\n        },\n        {\n          'name': 'disconnect_delay',\n          'type': 'int'\n        }\n      ],\n      'type': 'Pong'\n    },\n    {\n      'id': '-414113498',\n      'method': 'destroy_session',\n      'params': [\n        {\n          'name': 'session_id',\n          'type': 'long'\n        }\n      ],\n      'type': 'DestroySessionRes'\n    },\n    {\n      'id': '-1835453025',\n      'method': 'http_wait',\n      'params': [\n        {\n          'name': 'max_delay',\n          'type': 'int'\n        },\n        {\n          'name': 'wait_after',\n          'type': 'int'\n        },\n        {\n          'name': 'max_wait',\n          'type': 'int'\n        }\n      ],\n      'type': 'HttpWait'\n    }\n  ]\n}\n\n// From https://github.com/stephenmathieson/node-tlds/blob/master/index.js\n// Config.TLD = ['abogado', 'ac', 'academy', 'accountants', 'active', 'actor', 'ad', 'adult', 'ae', 'aero', 'af', 'ag', 'agency', 'ai', 'airforce', 'al', 'allfinanz', 'alsace', 'am', 'amsterdam', 'an', 'android', 'ao', 'apartments', 'aq', 'aquarelle', 'ar', 'archi', 'army', 'arpa', 'as', 'asia', 'associates', 'at', 'attorney', 'au', 'auction', 'audio', 'autos', 'aw', 'ax', 'axa', 'az', 'ba', 'band', 'bank', 'bar', 'barclaycard', 'barclays', 'bargains', 'bayern', 'bb', 'bd', 'be', 'beer', 'berlin', 'best', 'bf', 'bg', 'bh', 'bi', 'bid', 'bike', 'bingo', 'bio', 'biz', 'bj', 'black', 'blackfriday', 'bloomberg', 'blue', 'bm', 'bmw', 'bn', 'bnpparibas', 'bo', 'boo', 'boutique', 'br', 'brussels', 'bs', 'bt', 'budapest', 'build', 'builders', 'business', 'buzz', 'bv', 'bw', 'by', 'bz', 'bzh', 'ca', 'cab', 'cal', 'camera', 'camp', 'cancerresearch', 'canon', 'capetown', 'capital', 'caravan', 'cards', 'care', 'career', 'careers', 'cartier', 'casa', 'cash', 'cat', 'catering', 'cc', 'cd', 'center', 'ceo', 'cern', 'cf', 'cg', 'ch', 'channel', 'chat', 'cheap', 'christmas', 'chrome', 'church', 'ci', 'citic', 'city', 'ck', 'cl', 'claims', 'cleaning', 'click', 'clinic', 'clothing', 'club', 'cm', 'cn', 'co', 'coach', 'codes', 'coffee', 'college', 'cologne', 'com', 'community', 'company', 'computer', 'condos', 'construction', 'consulting', 'contractors', 'cooking', 'cool', 'coop', 'country', 'cr', 'credit', 'creditcard', 'cricket', 'crs', 'cruises', 'cu', 'cuisinella', 'cv', 'cw', 'cx', 'cy', 'cymru', 'cz', 'dabur', 'dad', 'dance', 'dating', 'day', 'dclk', 'de', 'deals', 'degree', 'delivery', 'democrat', 'dental', 'dentist', 'desi', 'design', 'dev', 'diamonds', 'diet', 'digital', 'direct', 'directory', 'discount', 'dj', 'dk', 'dm', 'dnp', 'do', 'docs', 'domains', 'doosan', 'durban', 'dvag', 'dz', 'eat', 'ec', 'edu', 'education', 'ee', 'eg', 'email', 'emerck', 'energy', 'engineer', 'engineering', 'enterprises', 'equipment', 'er', 'es', 'esq', 'estate', 'et', 'eu', 'eurovision', 'eus', 'events', 'everbank', 'exchange', 'expert', 'exposed', 'fail', 'farm', 'fashion', 'feedback', 'fi', 'finance', 'financial', 'firmdale', 'fish', 'fishing', 'fit', 'fitness', 'fj', 'fk', 'flights', 'florist', 'flowers', 'flsmidth', 'fly', 'fm', 'fo', 'foo', 'forsale', 'foundation', 'fr', 'frl', 'frogans', 'fund', 'furniture', 'futbol', 'ga', 'gal', 'gallery', 'garden', 'gb', 'gbiz', 'gd', 'ge', 'gent', 'gf', 'gg', 'ggee', 'gh', 'gi', 'gift', 'gifts', 'gives', 'gl', 'glass', 'gle', 'global', 'globo', 'gm', 'gmail', 'gmo', 'gmx', 'gn', 'goog', 'google', 'gop', 'gov', 'gp', 'gq', 'gr', 'graphics', 'gratis', 'green', 'gripe', 'gs', 'gt', 'gu', 'guide', 'guitars', 'guru', 'gw', 'gy', 'hamburg', 'hangout', 'haus', 'healthcare', 'help', 'here', 'hermes', 'hiphop', 'hiv', 'hk', 'hm', 'hn', 'holdings', 'holiday', 'homes', 'horse', 'host', 'hosting', 'house', 'how', 'hr', 'ht', 'hu', 'ibm', 'id', 'ie', 'ifm', 'il', 'im', 'immo', 'immobilien', 'in', 'industries', 'info', 'ing', 'ink', 'institute', 'insure', 'int', 'international', 'investments', 'io', 'iq', 'ir', 'irish', 'is', 'it', 'iwc', 'jcb', 'je', 'jetzt', 'jm', 'jo', 'jobs', 'joburg', 'jp', 'juegos', 'kaufen', 'kddi', 'ke', 'kg', 'kh', 'ki', 'kim', 'kitchen', 'kiwi', 'km', 'kn', 'koeln', 'kp', 'kr', 'krd', 'kred', 'kw', 'ky', 'kyoto', 'kz', 'la', 'lacaixa', 'land', 'lat', 'latrobe', 'lawyer', 'lb', 'lc', 'lds', 'lease', 'legal', 'lgbt', 'li', 'lidl', 'life', 'lighting', 'limited', 'limo', 'link', 'lk', 'loans', 'london', 'lotte', 'lotto', 'lr', 'ls', 'lt', 'ltda', 'lu', 'luxe', 'luxury', 'lv', 'ly', 'ma', 'madrid', 'maison', 'management', 'mango', 'market', 'marketing', 'marriott', 'mc', 'md', 'me', 'media', 'meet', 'melbourne', 'meme', 'memorial', 'menu', 'mg', 'mh', 'miami', 'mil', 'mini', 'mk', 'ml', 'mm', 'mn', 'mo', 'mobi', 'moda', 'moe', 'monash', 'money', 'mormon', 'mortgage', 'moscow', 'motorcycles', 'mov', 'mp', 'mq', 'mr', 'ms', 'mt', 'mu', 'museum', 'mv', 'mw', 'mx', 'my', 'mz', 'na', 'nagoya', 'name', 'navy', 'nc', 'ne', 'net', 'network', 'neustar', 'new', 'nexus', 'nf', 'ng', 'ngo', 'nhk', 'ni', 'nico', 'ninja', 'nl', 'no', 'np', 'nr', 'nra', 'nrw', 'ntt', 'nu', 'nyc', 'nz', 'okinawa', 'om', 'one', 'ong', 'onl', 'ooo', 'org', 'organic', 'osaka', 'otsuka', 'ovh', 'pa', 'paris', 'partners', 'parts', 'party', 'pe', 'pf', 'pg', 'ph', 'pharmacy', 'photo', 'photography', 'photos', 'physio', 'pics', 'pictures', 'pink', 'pizza', 'pk', 'pl', 'place', 'plumbing', 'pm', 'pn', 'pohl', 'poker', 'porn', 'post', 'pr', 'praxi', 'press', 'pro', 'prod', 'productions', 'prof', 'properties', 'property', 'ps', 'pt', 'pub', 'pw', 'py', 'qa', 'qpon', 'quebec', 're', 'realtor', 'recipes', 'red', 'rehab', 'reise', 'reisen', 'reit', 'ren', 'rentals', 'repair', 'report', 'republican', 'rest', 'restaurant', 'reviews', 'rich', 'rio', 'rip', 'ro', 'rocks', 'rodeo', 'rs', 'rsvp', 'ru', 'ruhr', 'rw', 'ryukyu', 'sa', 'saarland', 'sale', 'samsung', 'sarl', 'saxo', 'sb', 'sc', 'sca', 'scb', 'schmidt', 'schule', 'schwarz', 'science', 'scot', 'sd', 'se', 'services', 'sew', 'sexy', 'sg', 'sh', 'shiksha', 'shoes', 'shriram', 'si', 'singles', 'sj', 'sk', 'sky', 'sl', 'sm', 'sn', 'so', 'social', 'software', 'sohu', 'solar', 'solutions', 'soy', 'space', 'spiegel', 'sr', 'st', 'style', 'su', 'supplies', 'supply', 'support', 'surf', 'surgery', 'suzuki', 'sv', 'sx', 'sy', 'sydney', 'systems', 'sz', 'taipei', 'tatar', 'tattoo', 'tax', 'tc', 'td', 'technology', 'tel', 'temasek', 'tennis', 'tf', 'tg', 'th', 'tienda', 'tips', 'tires', 'tirol', 'tj', 'tk', 'tl', 'tm', 'tn', 'to', 'today', 'tokyo', 'tools', 'top', 'toshiba', 'town', 'toys', 'tp', 'tr', 'trade', 'training', 'travel', 'trust', 'tt', 'tui', 'tv', 'tw', 'tz', 'ua', 'ug', 'uk', 'university', 'uno', 'uol', 'us', 'uy', 'uz', 'va', 'vacations', 'vc', 've', 'vegas', 'ventures', 'versicherung', 'vet', 'vg', 'vi', 'viajes', 'video', 'villas', 'vision', 'vlaanderen', 'vn', 'vodka', 'vote', 'voting', 'voto', 'voyage', 'vu', 'wales', 'wang', 'watch', 'webcam', 'website', 'wed', 'wedding', 'wf', 'whoswho', 'wien', 'wiki', 'williamhill', 'wme', 'work', 'works', 'world', 'ws', 'wtc', 'wtf', '佛山', '集团', '在线', '한국', 'ভারত', '八卦', 'موقع', '公益', '公司', '移动', '我爱你', 'москва', 'қаз', 'онлайн', 'сайт', 'срб', '淡马锡', 'орг', '삼성', 'சிங்கப்பூர்', '商标', '商店', '商城', 'дети', 'мкд', '中文网', '中信', '中国', '中國', '谷歌', 'భారత్', 'ලංකා', 'ભારત', 'भारत', '网店', 'संगठन', '网络', 'укр', '香港', '台湾', '台灣', '手机', 'мон', 'الجزائر', 'عمان', 'ایران', 'امارات', 'بازار', 'الاردن', 'بھارت', 'المغرب', 'السعودية', 'مليسيا', 'شبكة', 'გე', '机构', '组织机构', 'ไทย', 'سورية', 'рус', 'рф', 'تونس', 'みんな', 'グーグル', '世界', 'ਭਾਰਤ', '网址', '游戏', 'vermögensberater', 'vermögensberatung', '企业', 'مصر', 'قطر', '广东', 'இலங்கை', 'இந்தியா', '新加坡', 'فلسطين', '政务', 'xxx', 'xyz', 'yachts', 'yandex', 'ye', 'yoga', 'yokohama', 'youtube', 'yt', 'za', 'zip', 'zm', 'zone', 'zuerich', 'zw']\n\n// 105\n\n// 108\n\n// 109\nConfig.Schema.API = require('./schema.json');\nConfig.Schema.API.layer = 112;\n\nexport default Config\n\n\n// WEBPACK FOOTER //\n// ./src/config.js","import Config from './config.js'\nimport { ErrorResponse } from './Services'\n\nconst defaultDCs = {\n    test: [\n            {\n                \"_\": \"dcOption\",\n                \"pFlags\": {},\n                \"flags\": 0,\n                \"id\": 1,\n                \"ip_address\": \"149.154.175.10\",\n                \"port\": 80\n            },\n            {\n                \"_\": \"dcOption\",\n                \"pFlags\": {},\n                \"flags\": 0,\n                \"id\": 2,\n                \"ip_address\": \"149.154.167.40\",\n                \"port\": 80\n            },\n            {\n                \"_\": \"dcOption\",\n                \"pFlags\": {},\n                \"flags\": 0,\n                \"id\": 2,\n                \"ip_address\": \"149.154.175.117\",\n                \"port\": 80\n            },\n        ],\n    main: [\n            {\n                \"_\": \"dcOption\",\n                \"pFlags\": {},\n                \"flags\": 0,\n                \"id\": 1,\n                \"ip_address\": \"149.154.175.50\",\n                \"port\": 443\n            },\n            {\n                \"_\": \"dcOption\",\n                \"pFlags\": {\n                    \"ipv6\": true\n                },\n                \"flags\": 1,\n                \"id\": 1,\n                \"ip_address\": \"2001:0b28:f23d:f001:0000:0000:0000:000a\",\n                \"port\": 443\n            },\n            {\n                \"_\": \"dcOption\",\n                \"pFlags\": {},\n                \"flags\": 0,\n                \"id\": 2,\n                \"ip_address\": \"149.154.167.51\",\n                \"port\": 443\n            },\n            {\n                \"_\": \"dcOption\",\n                \"pFlags\": {\n                    \"static\": true\n                },\n                \"flags\": 16,\n                \"id\": 2,\n                \"ip_address\": \"149.154.167.51\",\n                \"port\": 443\n            },\n            {\n                \"_\": \"dcOption\",\n                \"pFlags\": {\n                    \"ipv6\": true\n                },\n                \"flags\": 1,\n                \"id\": 2,\n                \"ip_address\": \"2001:067c:04e8:f002:0000:0000:0000:000a\",\n                \"port\": 443\n            },\n            {\n                \"_\": \"dcOption\",\n                \"pFlags\": {},\n                \"flags\": 0,\n                \"id\": 3,\n                \"ip_address\": \"149.154.175.100\",\n                \"port\": 443\n            },\n            {\n                \"_\": \"dcOption\",\n                \"pFlags\": {\n                    \"ipv6\": true\n                },\n                \"flags\": 1,\n                \"id\": 3,\n                \"ip_address\": \"2001:0b28:f23d:f003:0000:0000:0000:000a\",\n                \"port\": 443\n            },\n            {\n                \"_\": \"dcOption\",\n                \"pFlags\": {},\n                \"flags\": 0,\n                \"id\": 4,\n                \"ip_address\": \"149.154.167.92\",\n                \"port\": 443\n            },\n            {\n                \"_\": \"dcOption\",\n                \"pFlags\": {\n                    \"ipv6\": true\n                },\n                \"flags\": 1,\n                \"id\": 4,\n                \"ip_address\": \"2001:067c:04e8:f004:0000:0000:0000:000a\",\n                \"port\": 443\n            },\n            {\n                \"_\": \"dcOption\",\n                \"pFlags\": {\n                    \"media_only\": true\n                },\n                \"flags\": 2,\n                \"id\": 4,\n                \"ip_address\": \"149.154.165.120\",\n                \"port\": 443\n            },\n            {\n                \"_\": \"dcOption\",\n                \"pFlags\": {},\n                \"flags\": 0,\n                \"id\": 5,\n                \"ip_address\": \"91.108.56.170\",\n                \"port\": 443\n            },\n            {\n                \"_\": \"dcOption\",\n                \"pFlags\": {\n                    \"ipv6\": true\n                },\n                \"flags\": 1,\n                \"id\": 5,\n                \"ip_address\": \"2001:0b28:f23f:f005:0000:0000:0000:000a\",\n                \"port\": 443\n            }\n        ],\n};\n\nconst defaultState = {\n    current_dc_id: 2,\n    prev_dc_id: undefined,\n    dc_options: Config.Modes.test ? defaultDCs.test : defaultDCs.main,\n    networkers: [\n    ]\n}\n\nlet state = { ...defaultState }\n\nlet dump = undefined\nlet load = undefined\n\nexport const flushState = () => {\n    state = { ...defaultState };\n    setState();\n}\n\nexport const initState = (options, dumpState, loadState) => new Promise((resolve, reject) => {\n    console.error(options);\n\n    // console.warn('Set config hash', 1);\n    let persistState = options.persistState || false;\n    // console.warn('Set config hash', 1);\n    // let test = options.test || false;\n    // let ssl = options.ssl || false;\n\n    // console.warn('Set config hash', 1);\n    Config.App.id = options.appId;\n    Config.App.hash = options.appHash;\n\n    // console.warn('Set config hash', configHash);\n    Config.Modes.websockets = options.websockets || false;\n    Config.Modes.test = options.test || false;\n    Config.Modes.ssl = options.ssl || false;\n\n    let configHash = ''+Config.App.id+'_'+Config.App.hash+'_'+Config.Modes.websockets+Config.Modes.test+Config.Modes.ssl;\n    // console.warn('Set config hash', configHash);\n\n    defaultState.configHash = configHash;\n    defaultState.dc_options = Config.Modes.test ? defaultDCs.test : defaultDCs.main;\n    defaultState.isTest = Config.Modes.test;\n\n    dump = dumpState\n    load = loadState\n    // console.warn('Set config hash', configHash);\n\n    if (!persistState) {\n        flushState();\n        resolve();\n\n        return;\n    }\n\n    //LogService.logInfo(`[state] init`)\n\n    if (load) {\n        load()\n            .then(stateContents => {\n                try {\n                    state = JSON.parse(stateContents);\n\n                    if (state.configHash !== defaultState.configHash) {\n                        throw new Error('Different config hash in stored state. Need to flush it...');\n                    }\n                    console.log(state);\n                } catch(e) {\n                    console.error(e);\n                    flushState();\n                }\n                resolve()\n            })\n            .catch(err => {\n                //LogService.logError(`[state] ${new ErrorResponse(err)}`)\n\n                reject()\n            })\n        return\n    }\n\n    resolve()\n})\n\nexport const getState = () => {\n    return state\n}\nexport const setState = (newState) => {\n    return new Promise((res, rej)=>{\n        state = { ...state, ...newState }\n        if (dump) {\n            dump(JSON.stringify(state))\n                .then(()=>{\n                    res();\n                })\n                .catch(()=>{\n                    res();\n                });\n        } else {\n            res();\n        }\n    });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/state.js","import * as MtpDcConfigurator from './MtpDcConfigurator'\nimport * as MtpRsaKeysManager from './MtpRsaKeysManager'\nimport * as MtpTimeManager from './MtpTimeManager'\nimport * as MtpAuthorizer from './MtpAuthorizer'\nimport * as MtpNetworker from './MtpNetworker'\nimport * as MtpProxy from './MtpProxy'\n\nexport { \n    MtpDcConfigurator,\n    MtpRsaKeysManager,\n    MtpTimeManager,\n    MtpAuthorizer,\n    MtpNetworker,\n    MtpProxy\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Mtp/index.js","import { TLSerialization, TLDeserialization } from './TLSerialization'\n\nexport {\n    TLSerialization,\n    TLDeserialization\n}\n\n\n// WEBPACK FOOTER //\n// ./src/TL/index.js","import Rusha from 'rusha'\nimport { BigInteger, SecureRandom } from './bigNumbers'\nimport { str2bigInt, bigInt2str, getBpe, getOne, copyInt_, copy_, add_, rightShift_, sub_, eGCD_, divide_, equalsInt, greater, isZero, powMod } from './leemonBigInt'\nimport CryptoJS from 'crypto-js'\nimport * as IGE from './aesIGEMode'\nimport { ErrorResponse } from '../Services'\nimport pako from 'pako'\n\nconst _logTimer = (new Date()).getTime()\n\n\nexport function dT() {\n    return '[' + (((new Date()).getTime() - _logTimer) / 1000).toFixed(3) + ']'\n}\n\nexport function tsNow(seconds) {\n    var t = +new Date()\n    return seconds ? Math.floor(t / 1000) : t\n}\n\nexport function md5(data) {\n    return CryptoJS.MD5(bytesToWords(data)).toString();\n}\n\nexport function bigint(num) {\n    return new BigInteger(num.toString(16), 16)\n}\n\nexport function bigStringInt(strNum) {\n    return new BigInteger(strNum, 10)\n}\n\nexport function dHexDump(bytes) {\n    var arr = []\n    for (var i = 0; i < bytes.length; i++) {\n        if (i && !(i % 2)) {\n            if (!(i % 16)) {\n                arr.push('\\n')\n            } else if (!(i % 4)) {\n                arr.push('  ')\n            } else {\n                arr.push(' ')\n            }\n        }\n        arr.push((bytes[i] < 16 ? '0' : '') + bytes[i].toString(16))\n    }\n}\n\nexport function bytesToHex(bytes) {\n    bytes = bytes || []\n    var arr = []\n    for (var i = 0; i < bytes.length; i++) {\n        arr.push((bytes[i] < 16 ? '0' : '') + (bytes[i] || 0).toString(16))\n    }\n    return arr.join('')\n}\n\nexport function bytesFromHex(hexString) {\n    var len = hexString.length,\n        i\n    var start = 0\n    var bytes = []\n\n    if (hexString.length % 2) {\n        bytes.push(parseInt(hexString.charAt(0), 16))\n        start++\n    }\n\n    for (i = start; i < len; i += 2) {\n        bytes.push(parseInt(hexString.substr(i, 2), 16))\n    }\n\n    return bytes\n}\n\nexport function bytesToBase64(bytes) {\n    var mod3\n    var result = ''\n\n    for (var nLen = bytes.length, nUint24 = 0, nIdx = 0; nIdx < nLen; nIdx++) {\n        mod3 = nIdx % 3\n        nUint24 |= bytes[nIdx] << (16 >>> mod3 & 24)\n        if (mod3 === 2 || nLen - nIdx === 1) {\n            result += String.fromCharCode(\n                uint6ToBase64(nUint24 >>> 18 & 63),\n                uint6ToBase64(nUint24 >>> 12 & 63),\n                uint6ToBase64(nUint24 >>> 6 & 63),\n                uint6ToBase64(nUint24 & 63)\n            )\n            nUint24 = 0\n        }\n    }\n\n    return result.replace(/A(?=A$|$)/g, '=')\n}\n\nexport function uint6ToBase64(nUint6) {\n    return nUint6 < 26\n        ? nUint6 + 65\n        : nUint6 < 52\n            ? nUint6 + 71\n            : nUint6 < 62\n                ? nUint6 - 4\n                : nUint6 === 62\n                    ? 43\n                    : nUint6 === 63\n                        ? 47\n                        : 65\n}\n\nexport function base64ToBlob(base64str, mimeType) {\n    var sliceSize = 1024\n    var byteCharacters = atob(base64str)\n    var bytesLength = byteCharacters.length\n    var slicesCount = Math.ceil(bytesLength / sliceSize)\n    var byteArrays = new Array(slicesCount)\n\n    for (var sliceIndex = 0; sliceIndex < slicesCount; ++sliceIndex) {\n        var begin = sliceIndex * sliceSize\n        var end = Math.min(begin + sliceSize, bytesLength)\n\n        var bytes = new Array(end - begin)\n        for (var offset = begin, i = 0; offset < end; ++i, ++offset) {\n            bytes[i] = byteCharacters[offset].charCodeAt(0)\n        }\n        byteArrays[sliceIndex] = new Uint8Array(bytes)\n    }\n\n    return blobConstruct(byteArrays, mimeType)\n}\n\nexport function dataUrlToBlob(url) {\n    var urlParts = url.split(',')\n    var base64str = urlParts[1]\n    var mimeType = urlParts[0].split(':')[1].split(';')[0]\n    var blob = base64ToBlob(base64str, mimeType)\n    return blob\n}\n\nexport function blobConstruct(blobParts, mimeType) {\n    var blob\n    var safeMimeType = blobSafeMimeType(mimeType)\n    try {\n        blob = new Blob(blobParts, { type: safeMimeType })\n    } catch (e) {\n        var bb = new BlobBuilder\n        angular.forEach(blobParts, function (blobPart) {\n            bb.append(blobPart)\n        })\n        blob = bb.getBlob(safeMimeType)\n    }\n    return blob\n}\n\nexport function blobSafeMimeType(mimeType) {\n    if ([\n        'image/jpeg',\n        'image/png',\n        'image/gif',\n        'image/webp',\n        'image/bmp',\n        'video/mp4',\n        'video/webm',\n        'video/quicktime',\n        'audio/ogg',\n        'audio/mpeg',\n        'audio/mp4',\n    ].indexOf(mimeType) == -1) {\n        return 'application/octet-stream'\n    }\n    return mimeType\n}\n\nexport function bytesCmp(bytes1, bytes2) {\n    var len = bytes1.length\n    if (len != bytes2.length) {\n        return false\n    }\n\n    for (var i = 0; i < len; i++) {\n        if (bytes1[i] != bytes2[i]) {\n            return false\n        }\n    }\n    return true\n}\n\nexport function bytesXor(bytes1, bytes2) {\n    var len = bytes1.length\n    var bytes = []\n\n    for (var i = 0; i < len; ++i) {\n        bytes[i] = bytes1[i] ^ bytes2[i]\n    }\n\n    return bytes\n}\n\nexport function bytesToWords(bytes) {\n    if (bytes instanceof ArrayBuffer) {\n        bytes = new Uint8Array(bytes)\n    }\n    var len = bytes.length\n    var words = []\n    var i\n    for (i = 0; i < len; i++) {\n        words[i >>> 2] |= bytes[i] << (24 - (i % 4) * 8)\n    }\n\n    return new CryptoJS.lib.WordArray.init(words, len)\n}\n\nexport function bytesFromWords(wordArray) {\n    var words = wordArray.words\n    var sigBytes = wordArray.sigBytes\n    var bytes = []\n\n    for (var i = 0; i < sigBytes; i++) {\n        bytes.push((words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff)\n    }\n\n    return bytes\n}\n\nexport function bytesFromBigInt(bigInt, len) {\n    var bytes = bigInt.toByteArray()\n\n    if (len && bytes.length < len) {\n        var padding = []\n        for (var i = 0, needPadding = len - bytes.length; i < needPadding; i++) {\n            padding[i] = 0\n        }\n        if (bytes instanceof ArrayBuffer) {\n            bytes = bufferConcat(padding, bytes)\n        } else {\n            bytes = padding.concat(bytes)\n        }\n    } else {\n        while (!bytes[0] && (!len || bytes.length > len)) {\n            bytes = bytes.slice(1)\n        }\n    }\n\n    return bytes\n}\n\nexport function bytesFromLeemonBigInt(bigInt, len) {\n    var str = bigInt2str(bigInt, 16)\n    return bytesFromHex(str)\n}\n\nexport function bytesToArrayBuffer(b) {\n    return (new Uint8Array(b)).buffer\n}\n\nexport function convertToArrayBuffer(bytes) {\n    // Be careful with converting subarrays!!\n    if (bytes instanceof ArrayBuffer) {\n        return bytes\n    }\n    if (bytes.buffer !== undefined &&\n        bytes.buffer.byteLength == bytes.length * bytes.BYTES_PER_ELEMENT) {\n        return bytes.buffer\n    }\n    return bytesToArrayBuffer(bytes)\n}\n\nexport function convertToUint8Array(bytes) {\n    if (bytes.buffer !== undefined) {\n        return bytes\n    }\n    return new Uint8Array(bytes)\n}\n\nexport function convertToByteArray(bytes) {\n    if (Array.isArray(bytes)) {\n        return bytes\n    }\n    bytes = convertToUint8Array(bytes)\n    var newBytes = []\n    for (var i = 0, len = bytes.length; i < len; i++) {\n        newBytes.push(bytes[i])\n    }\n    return newBytes\n}\n\nexport function bytesFromArrayBuffer(buffer) {\n    var len = buffer.byteLength\n    var byteView = new Uint8Array(buffer)\n    var bytes = []\n\n    for (var i = 0; i < len; ++i) {\n        bytes[i] = byteView[i]\n    }\n\n    return bytes\n}\n\nexport function bufferConcat(buffer1, buffer2) {\n    var l1 = buffer1.byteLength || buffer1.length\n    var l2 = buffer2.byteLength || buffer2.length\n    var tmp = new Uint8Array(l1 + l2)\n    tmp.set(buffer1 instanceof ArrayBuffer ? new Uint8Array(buffer1) : buffer1, 0)\n    tmp.set(buffer2 instanceof ArrayBuffer ? new Uint8Array(buffer2) : buffer2, l1)\n\n    return tmp.buffer\n}\n\nexport function longToInts(sLong) {\n    var divRem = bigStringInt(sLong).divideAndRemainder(bigint(0x100000000))\n\n    return [divRem[0].intValue(), divRem[1].intValue()]\n}\n\nexport function longToBytes(sLong) {\n    return bytesFromWords({ words: longToInts(sLong), sigBytes: 8 }).reverse()\n}\n\nexport function longFromInts(high, low) {\n    return bigint(high).shiftLeft(32).add(bigint(low)).toString(10)\n}\n\nexport function intToUint(val) {\n    val = parseInt(val)\n    if (val < 0) {\n        val = val + 4294967296\n    }\n    return val\n}\n\nexport function uintToInt(val) {\n    if (val > 2147483647) {\n        val = val - 4294967296\n    }\n    return val\n}\n\nexport function sha1HashSync(bytes) {\n    const rushaInstance = new Rusha(1024 * 1024)\n    var hashBytes = rushaInstance.rawDigest(bytes).buffer\n    return hashBytes\n}\n\nexport function sha1BytesSync(bytes) {\n    return bytesFromArrayBuffer(sha1HashSync(bytes))\n}\n\nexport function sha256HashSync(bytes) {\n    var hashWords = CryptoJS.SHA256(bytesToWords(bytes))\n    var hashBytes = bytesFromWords(hashWords)\n    return hashBytes\n}\n\nexport function rsaEncrypt(publicKey, bytes) {\n    bytes = addPadding(bytes, 255)\n    var N = new BigInteger(publicKey.modulus, 16)\n    var E = new BigInteger(publicKey.exponent, 16)\n    var X = new BigInteger(bytes)\n    var encryptedBigInt = X.modPowInt(E, N),\n        encryptedBytes = bytesFromBigInt(encryptedBigInt, 256)\n    return encryptedBytes\n}\n\nexport function addPadding(bytes, blockSize, zeroes) {\n    blockSize = blockSize || 16\n    var len = bytes.byteLength || bytes.length\n    var needPadding = blockSize - (len % blockSize)\n    if (needPadding > 0 && needPadding < blockSize) {\n        var padding = new Array(needPadding)\n        if (zeroes) {\n            for (var i = 0; i < needPadding; i++) {\n                padding[i] = 0\n            }\n        } else {\n            (new SecureRandom()).nextBytes(padding)\n        }\n\n        if (bytes instanceof ArrayBuffer) {\n            bytes = bufferConcat(bytes, padding)\n        } else {\n            bytes = bytes.concat(padding)\n        }\n    }\n\n    return bytes\n}\n\n\nexport function aesEncryptSync(bytes, keyBytes, ivBytes) {\n    var len = bytes.byteLength || bytes.length\n\n    bytes = addPadding(bytes)\n\n    var encryptedWords = CryptoJS.AES.encrypt(bytesToWords(bytes), bytesToWords(keyBytes), {\n        iv: bytesToWords(ivBytes),\n        padding: CryptoJS.pad.NoPadding,\n        mode: CryptoJS.mode.IGE\n    }).ciphertext\n\n    var encryptedBytes = bytesFromWords(encryptedWords)\n\n    return encryptedBytes\n}\n\nexport function aesDecryptSync(encryptedBytes, keyBytes, ivBytes) {\n\n    var decryptedWords = CryptoJS.AES.decrypt({ ciphertext: bytesToWords(encryptedBytes) }, bytesToWords(keyBytes), {\n        iv: bytesToWords(ivBytes),\n        padding: CryptoJS.pad.NoPadding,\n        mode: CryptoJS.mode.IGE\n    })\n\n    var bytes = bytesFromWords(decryptedWords)\n\n    return bytes\n}\n\nexport function toArrayBuffer(buf) {\n    var ab = new ArrayBuffer(buf.length)\n    var view = new Uint8Array(ab)\n    for (var i = 0; i < buf.length; ++i) {\n        view[i] = buf[i]\n    }\n    return ab\n}\n\nexport function gzipUncompress(bytes) {\n    var result = pako.inflate(bytes)\n    return toArrayBuffer(result)\n}\n\nexport function inflate(bytes) {\n    return pako.inflate(bytes, { to: 'string' });\n}\n\nexport function nextRandomInt(maxValue) {\n    return Math.floor(Math.random() * maxValue)\n}\n\nexport function pqPrimeFactorization(pqBytes) {\n    var what = new BigInteger(pqBytes)\n    var result = false\n\n    try {\n        result = pqPrimeLeemon(str2bigInt(what.toString(16), 16, Math.ceil(64 / getBpe()) + 1))\n    } catch (e) {\n        // LogService.logError(`[utils] pqPrimeFactorization() pqPrimeLeemon() ${new ErrorResponse(e)}`)\n    }\n\n    if (result === false && what.bitLength() <= 64) {\n        try {\n            result = pqPrimeLong(goog.math.Long.fromString(what.toString(16), 16))\n        } catch (e) {\n            // LogService.logError(`[utils] pqPrimeFactorization() pqPrimeLong() ${new ErrorResponse(e)}`)\n        }\n    }\n\n    if (result === false) {\n        result = pqPrimeBigInteger(what)\n    }\n\n    return result\n}\n\nexport function pqPrimeBigInteger(what) {\n    var it = 0,\n        g\n    for (var i = 0; i < 3; i++) {\n        var q = (nextRandomInt(128) & 15) + 17\n        var x = bigint(nextRandomInt(1000000000) + 1)\n        var y = x.clone()\n        var lim = 1 << (i + 18)\n\n        for (var j = 1; j < lim; j++) {\n            ++it\n            var a = x.clone()\n            var b = x.clone()\n            var c = bigint(q)\n\n            while (!b.equals(BigInteger.ZERO)) {\n                if (!b.and(BigInteger.ONE).equals(BigInteger.ZERO)) {\n                    c = c.add(a)\n                    if (c.compareTo(what) > 0) {\n                        c = c.subtract(what)\n                    }\n                }\n                a = a.add(a)\n                if (a.compareTo(what) > 0) {\n                    a = a.subtract(what)\n                }\n                b = b.shiftRight(1)\n            }\n\n            x = c.clone()\n            var z = x.compareTo(y) < 0 ? y.subtract(x) : x.subtract(y)\n            g = z.gcd(what)\n            if (!g.equals(BigInteger.ONE)) {\n                break\n            }\n            if ((j & (j - 1)) == 0) {\n                y = x.clone()\n            }\n        }\n        if (g.compareTo(BigInteger.ONE) > 0) {\n            break\n        }\n    }\n\n    var f = what.divide(g), P, Q\n\n    if (g.compareTo(f) > 0) {\n        P = f\n        Q = g\n    } else {\n        P = g\n        Q = f\n    }\n\n    return [bytesFromBigInt(P), bytesFromBigInt(Q), it]\n}\n\nexport function gcdLong(a, b) {\n    while (a.notEquals(goog.math.Long.ZERO) && b.notEquals(goog.math.Long.ZERO)) {\n        while (b.and(goog.math.Long.ONE).equals(goog.math.Long.ZERO)) {\n            b = b.shiftRight(1)\n        }\n        while (a.and(goog.math.Long.ONE).equals(goog.math.Long.ZERO)) {\n            a = a.shiftRight(1)\n        }\n        if (a.compare(b) > 0) {\n            a = a.subtract(b)\n        } else {\n            b = b.subtract(a)\n        }\n    }\n    return b.equals(goog.math.Long.ZERO) ? a : b\n}\n\nexport function pqPrimeLong(what) {\n    var it = 0,\n        g\n    for (var i = 0; i < 3; i++) {\n        var q = goog.math.Long.fromInt((nextRandomInt(128) & 15) + 17)\n        var x = goog.math.Long.fromInt(nextRandomInt(1000000000) + 1)\n        var y = x\n        var lim = 1 << (i + 18)\n\n        for (var j = 1; j < lim; j++) {\n            ++it\n            var a = x\n            var b = x\n            var c = q\n\n            while (b.notEquals(goog.math.Long.ZERO)) {\n                if (b.and(goog.math.Long.ONE).notEquals(goog.math.Long.ZERO)) {\n                    c = c.add(a)\n                    if (c.compare(what) > 0) {\n                        c = c.subtract(what)\n                    }\n                }\n                a = a.add(a)\n                if (a.compare(what) > 0) {\n                    a = a.subtract(what)\n                }\n                b = b.shiftRight(1)\n            }\n\n            x = c\n            var z = x.compare(y) < 0 ? y.subtract(x) : x.subtract(y)\n            g = gcdLong(z, what)\n            if (g.notEquals(goog.math.Long.ONE)) {\n                break\n            }\n            if ((j & (j - 1)) == 0) {\n                y = x\n            }\n        }\n        if (g.compare(goog.math.Long.ONE) > 0) {\n            break\n        }\n    }\n\n    var f = what.div(g), P, Q\n\n    if (g.compare(f) > 0) {\n        P = f\n        Q = g\n    } else {\n        P = g\n        Q = f\n    }\n\n    return [bytesFromHex(P.toString(16)), bytesFromHex(Q.toString(16)), it]\n}\n\nexport function pqPrimeLeemon(what) {\n    var minBits = 64\n    var minLen = Math.ceil(minBits / getBpe()) + 1\n    var it = 0\n    var i, q\n    var j, lim\n    var g, P\n    var Q\n    var a = new Array(minLen)\n    var b = new Array(minLen)\n    var c = new Array(minLen)\n    var g = new Array(minLen)\n    var z = new Array(minLen)\n    var x = new Array(minLen)\n    var y = new Array(minLen)\n\n    for (i = 0; i < 3; i++) {\n        q = (nextRandomInt(128) & 15) + 17\n        copyInt_(x, nextRandomInt(1000000000) + 1)\n        copy_(y, x)\n        lim = 1 << (i + 18)\n\n        for (j = 1; j < lim; j++) {\n            ++it\n            copy_(a, x)\n            copy_(b, x)\n            copyInt_(c, q)\n\n            while (!isZero(b)) {\n                if (b[0] & 1) {\n                    add_(c, a)\n                    if (greater(c, what)) {\n                        sub_(c, what)\n                    }\n                }\n                add_(a, a)\n                if (greater(a, what)) {\n                    sub_(a, what)\n                }\n                rightShift_(b, 1)\n            }\n\n            copy_(x, c)\n            if (greater(x, y)) {\n                copy_(z, x)\n                sub_(z, y)\n            } else {\n                copy_(z, y)\n                sub_(z, x)\n            }\n            eGCD_(z, what, g, a, b)\n            if (!equalsInt(g, 1)) {\n                break\n            }\n            if ((j & (j - 1)) == 0) {\n                copy_(y, x)\n            }\n        }\n        if (greater(g, getOne())) {\n            break\n        }\n    }\n\n    divide_(what, g, x, y)\n\n    if (greater(g, x)) {\n        P = x\n        Q = g\n    } else {\n        P = g\n        Q = x\n    }\n\n    return [bytesFromLeemonBigInt(P), bytesFromLeemonBigInt(Q), it]\n}\n\nexport function bytesModPow(x, y, m) {\n    try {\n        var xBigInt = str2bigInt(bytesToHex(x), 16)\n        var yBigInt = str2bigInt(bytesToHex(y), 16)\n        var mBigInt = str2bigInt(bytesToHex(m), 16)\n        var resBigInt = powMod(xBigInt, yBigInt, mBigInt)\n\n        return bytesFromHex(bigInt2str(resBigInt, 16))\n    } catch (e) {\n        // LogService.logError(`[utils] bytesModPow() ${new ErrorResponse(e)}`)\n    }\n\n    return bytesFromBigInt(new BigInteger(x).modPow(new BigInteger(y), new BigInteger(m)), 256)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Utils/utils.js","////////////////////////////////////////////////////////////////////////////////////////\n// Big Integer Library v. 5.5\n// Created 2000, last modified 2013\n// Leemon Baird\n// www.leemon.com\n//\n// Version history:\n// v 5.5  17 Mar 2013\n//   - two lines of a form like \"if (x<0) x+=n\" had the \"if\" changed to \"while\" to \n//     handle the case when x<-n. (Thanks to James Ansell for finding that bug)\n// v 5.4  3 Oct 2009\n//   - added \"var i\" to greaterShift() so i is not global. (Thanks to PŽter Szab— for finding that bug)\n//\n// v 5.3  21 Sep 2009\n//   - added randProbPrime(k) for probable primes\n//   - unrolled loop in mont_ (slightly faster)\n//   - millerRabin now takes a bigInt parameter rather than an int\n//\n// v 5.2  15 Sep 2009\n//   - fixed capitalization in call to int2bigInt in randBigInt\n//     (thanks to Emili Evripidou, Reinhold Behringer, and Samuel Macaleese for finding that bug)\n//\n// v 5.1  8 Oct 2007 \n//   - renamed inverseModInt_ to inverseModInt since it doesn't change its parameters\n//   - added functions GCD and randBigInt, which call GCD_ and randBigInt_\n//   - fixed a bug found by Rob Visser (see comment with his name below)\n//   - improved comments\n//\n// This file is public domain.   You can use it for any purpose without restriction.\n// I do not guarantee that it is correct, so use it at your own risk.  If you use \n// it for something interesting, I'd appreciate hearing about it.  If you find \n// any bugs or make any improvements, I'd appreciate hearing about those too.\n// It would also be nice if my name and URL were left in the comments.  But none \n// of that is required.\n//\n// This code defines a bigInt library for arbitrary-precision integers.\n// A bigInt is an array of integers storing the value in chunks of bpe bits, \n// little endian (buff[0] is the least significant word).\n// Negative bigInts are stored two's complement.  Almost all the functions treat\n// bigInts as nonnegative.  The few that view them as two's complement say so\n// in their comments.  Some functions assume their parameters have at least one \n// leading zero element. Functions with an underscore at the end of the name put\n// their answer into one of the arrays passed in, and have unpredictable behavior \n// in case of overflow, so the caller must make sure the arrays are big enough to \n// hold the answer.  But the average user should never have to call any of the \n// underscored functions.  Each important underscored export function has a wrapper export function \n// of the same name without the underscore that takes care of the details for you.  \n// For each underscored export function where a parameter is modified, that same variable \n// must not be used as another argument too.  So, you cannot square x by doing \n// multMod_(x,x,n).  You must use squareMod_(x,n) instead, or do y=dup(x); multMod_(x,y,n).\n// Or simply use the multMod(x,x,n) export function without the underscore, where\n// such issues never arise, because non-underscored functions never change\n// their parameters; they always allocate new memory for the answer that is returned.\n//\n// These functions are designed to avoid frequent dynamic memory allocation in the inner loop.\n// For most functions, if it needs a BigInt as a local variable it will actually use\n// a global, and will only allocate to it only when it's not the right size.  This ensures\n// that when a export function is called repeatedly with same-sized parameters, it only allocates\n// memory on the first call.\n//\n// Note that for cryptographic purposes, the calls to Math.random() must \n// be replaced with calls to a better pseudorandom number generator.\n//\n// In the following, \"bigInt\" means a bigInt with at least one leading zero element,\n// and \"integer\" means a nonnegative integer less than radix.  In some cases, integer \n// can be negative.  Negative bigInts are 2s complement.\n// \n// The following functions do not modify their inputs.\n// Those returning a bigInt, string, or Array will dynamically allocate memory for that value.\n// Those returning a boolean will return the integer 0 (false) or 1 (true).\n// Those returning boolean or int will not allocate memory except possibly on the first \n// time they're called with a given parameter size.\n// \n// bigInt  add(x,y)               //return (x+y) for bigInts x and y.  \n// bigInt  addInt(x,n)            //return (x+n) where x is a bigInt and n is an integer.\n// string  bigInt2str(x,base)     //return a string form of bigInt x in a given base, with 2 <= base <= 95\n// int     bitSize(x)             //return how many bits long the bigInt x is, not counting leading zeros\n// bigInt  dup(x)                 //return a copy of bigInt x\n// boolean equals(x,y)            //is the bigInt x equal to the bigint y?\n// boolean equalsInt(x,y)         //is bigint x equal to integer y?\n// bigInt  expand(x,n)            //return a copy of x with at least n elements, adding leading zeros if needed\n// Array   findPrimes(n)          //return array of all primes less than integer n\n// bigInt  GCD(x,y)               //return greatest common divisor of bigInts x and y (each with same number of elements).\n// boolean greater(x,y)           //is x>y?  (x and y are nonnegative bigInts)\n// boolean greaterShift(x,y,shift)//is (x <<(shift*bpe)) > y?\n// bigInt  int2bigInt(t,n,m)      //return a bigInt equal to integer t, with at least n bits and m array elements\n// bigInt  inverseMod(x,n)        //return (x**(-1) mod n) for bigInts x and n.  If no inverse exists, it returns null\n// int     inverseModInt(x,n)     //return x**(-1) mod n, for integers x and n.  Return 0 if there is no inverse\n// boolean isZero(x)              //is the bigInt x equal to zero?\n// boolean millerRabin(x,b)       //does one round of Miller-Rabin base integer b say that bigInt x is possibly prime? (b is bigInt, 1<b<x)\n// boolean millerRabinInt(x,b)    //does one round of Miller-Rabin base integer b say that bigInt x is possibly prime? (b is int,    1<b<x)\n// bigInt  mod(x,n)               //return a new bigInt equal to (x mod n) for bigInts x and n.\n// int     modInt(x,n)            //return x mod n for bigInt x and integer n.\n// bigInt  mult(x,y)              //return x*y for bigInts x and y. This is faster when y<x.\n// bigInt  multMod(x,y,n)         //return (x*y mod n) for bigInts x,y,n.  For greater speed, let y<x.\n// boolean negative(x)            //is bigInt x negative?\n// bigInt  powMod(x,y,n)          //return (x**y mod n) where x,y,n are bigInts and ** is exponentiation.  0**0=1. Faster for odd n.\n// bigInt  randBigInt(n,s)        //return an n-bit random BigInt (n>=1).  If s=1, then the most significant of those n bits is set to 1.\n// bigInt  randTruePrime(k)       //return a new, random, k-bit, true prime bigInt using Maurer's algorithm.\n// bigInt  randProbPrime(k)       //return a new, random, k-bit, probable prime bigInt (probability it's composite less than 2^-80).\n// bigInt  str2bigInt(s,b,n,m)    //return a bigInt for number represented in string s in base b with at least n bits and m array elements\n// bigInt  sub(x,y)               //return (x-y) for bigInts x and y.  Negative answers will be 2s complement\n// bigInt  trim(x,k)              //return a copy of x with exactly k leading zero elements\n//\n//\n// The following functions each have a non-underscored version, which most users should call instead.\n// These functions each write to a single parameter, and the caller is responsible for ensuring the array \n// passed in is large enough to hold the result. \n//\n// void    addInt_(x,n)          //do x=x+n where x is a bigInt and n is an integer\n// void    add_(x,y)             //do x=x+y for bigInts x and y\n// void    copy_(x,y)            //do x=y on bigInts x and y\n// void    copyInt_(x,n)         //do x=n on bigInt x and integer n\n// void    GCD_(x,y)             //set x to the greatest common divisor of bigInts x and y, (y is destroyed).  (This never overflows its array).\n// boolean inverseMod_(x,n)      //do x=x**(-1) mod n, for bigInts x and n. Returns 1 (0) if inverse does (doesn't) exist\n// void    mod_(x,n)             //do x=x mod n for bigInts x and n. (This never overflows its array).\n// void    mult_(x,y)            //do x=x*y for bigInts x and y.\n// void    multMod_(x,y,n)       //do x=x*y  mod n for bigInts x,y,n.\n// void    powMod_(x,y,n)        //do x=x**y mod n, where x,y,n are bigInts (n is odd) and ** is exponentiation.  0**0=1.\n// void    randBigInt_(b,n,s)    //do b = an n-bit random BigInt. if s=1, then nth bit (most significant bit) is set to 1. n>=1.\n// void    randTruePrime_(ans,k) //do ans = a random k-bit true random prime (not just probable prime) with 1 in the msb.\n// void    sub_(x,y)             //do x=x-y for bigInts x and y. Negative answers will be 2s complement.\n//\n// The following functions do NOT have a non-underscored version. \n// They each write a bigInt result to one or more parameters.  The caller is responsible for\n// ensuring the arrays passed in are large enough to hold the results. \n//\n// void addShift_(x,y,ys)       //do x=x+(y<<(ys*bpe))\n// void carry_(x)               //do carries and borrows so each element of the bigInt x fits in bpe bits.\n// void divide_(x,y,q,r)        //divide x by y giving quotient q and remainder r\n// int  divInt_(x,n)            //do x=floor(x/n) for bigInt x and integer n, and return the remainder. (This never overflows its array).\n// int  eGCD_(x,y,d,a,b)        //sets a,b,d to positive bigInts such that d = GCD_(x,y) = a*x-b*y\n// void halve_(x)               //do x=floor(|x|/2)*sgn(x) for bigInt x in 2's complement.  (This never overflows its array).\n// void leftShift_(x,n)         //left shift bigInt x by n bits.  n<bpe.\n// void linComb_(x,y,a,b)       //do x=a*x+b*y for bigInts x and y and integers a and b\n// void linCombShift_(x,y,b,ys) //do x=x+b*(y<<(ys*bpe)) for bigInts x and y, and integers b and ys\n// void mont_(x,y,n,np)         //Montgomery multiplication (see comments where the export function is defined)\n// void multInt_(x,n)           //do x=x*n where x is a bigInt and n is an integer.\n// void rightShift_(x,n)        //right shift bigInt x by n bits.  0 <= n < bpe. (This never overflows its array).\n// void squareMod_(x,n)         //do x=x*x  mod n for bigInts x,n\n// void subShift_(x,y,ys)       //do x=x-(y<<(ys*bpe)). Negative answers will be 2s complement.\n//\n// The following functions are based on algorithms from the _Handbook of Applied Cryptography_\n//    powMod_()           = algorithm 14.94, Montgomery exponentiation\n//    eGCD_,inverseMod_() = algorithm 14.61, Binary extended GCD_\n//    GCD_()              = algorothm 14.57, Lehmer's algorithm\n//    mont_()             = algorithm 14.36, Montgomery multiplication\n//    divide_()           = algorithm 14.20  Multiple-precision division\n//    squareMod_()        = algorithm 14.16  Multiple-precision squaring\n//    randTruePrime_()    = algorithm  4.62, Maurer's algorithm\n//    millerRabin()       = algorithm  4.24, Miller-Rabin algorithm\n//\n// Profiling shows:\n//     randTruePrime_() spends:\n//         10% of its time in calls to powMod_()\n//         85% of its time in calls to millerRabin()\n//     millerRabin() spends:\n//         99% of its time in calls to powMod_()   (always with a base of 2)\n//     powMod_() spends:\n//         94% of its time in calls to mont_()  (almost always with x==y)\n//\n// This suggests there are several ways to speed up this library slightly:\n//     - convert powMod_ to use a Montgomery form of k-ary window (or maybe a Montgomery form of sliding window)\n//         -- this should especially focus on being fast when raising 2 to a power mod n\n//     - convert randTruePrime_() to use a minimum r of 1/3 instead of 1/2 with the appropriate change to the test\n//     - tune the parameters in randTruePrime_(), including c, m, and recLimit\n//     - speed up the single loop in mont_() that takes 95% of the runtime, perhaps by reducing checking\n//       within the loop when all the parameters are the same length.\n//\n// There are several ideas that look like they wouldn't help much at all:\n//     - replacing trial division in randTruePrime_() with a sieve (that speeds up something taking almost no time anyway)\n//     - increase bpe from 15 to 30 (that would help if we had a 32*32->64 multiplier, but not with JavaScript's 32*32->32)\n//     - speeding up mont_(x,y,n,np) when x==y by doing a non-modular, non-Montgomery square\n//       followed by a Montgomery reduction.  The intermediate answer will be twice as long as x, so that\n//       method would be slower.  This is unfortunate because the code currently spends almost all of its time\n//       doing mont_(x,x,...), both for randTruePrime_() and powMod_().  A faster method for Montgomery squaring\n//       would have a large impact on the speed of randTruePrime_() and powMod_().  HAC has a couple of poorly-worded\n//       sentences that seem to imply it's faster to do a non-modular square followed by a single\n//       Montgomery reduction, but that's obviously wrong.\n////////////////////////////////////////////////////////////////////////////////////////\n\n//globals\nlet bpe = 0;         //bits stored per array element\nlet mask = 0;        //AND this with an array element to chop it down to bpe bits\nlet radix = mask + 1;  //equals 2^bpe.  A single 1 bit to the left of the last bit of mask.\n\n//the digits for converting to different bases\nlet digitsStr = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_=!@#$%^&*()[]{}|;:,.<>/?`~ \\\\\\'\\\"+-';\n\n//initialize the global variables\nfor (bpe = 0; (1 << (bpe + 1)) > (1 << bpe); bpe++);  //bpe=number of bits in the mantissa on this platform\nbpe >>= 1;                   //bpe=number of bits in one element of the array representing the bigInt\nmask = (1 << bpe) - 1;           //AND the mask with an integer to get its bpe least significant bits\nradix = mask + 1;              //2^bpe.  a single 1 bit to the left of the first bit of mask\nlet one = int2bigInt(1, 1, 1);     //constant used in powMod_()\n\n//the following global variables are scratchpad memory to \n//reduce dynamic memory allocation in the inner loop\nlet t = new Array(0);\nlet ss = t;       //used in mult_()\nlet s0 = t;       //used in multMod_(), squareMod_() \nlet s1 = t;       //used in powMod_(), multMod_(), squareMod_() \nlet s2 = t;       //used in powMod_(), multMod_()\nlet s3 = t;       //used in powMod_()\nlet s4 = t; \nlet s5 = t; //used in mod_()\nlet s6 = t;       //used in bigInt2str()\nlet s7 = t;       //used in powMod_()\nlet T = t;        //used in GCD_()\nlet sa = t;       //used in mont_()\nlet mr_x1 = t;\nlet mr_r = t;\nlet mr_a = t;                                      //used in millerRabin()\nlet eg_v = t;\nlet eg_u = t;\nlet eg_A = t;\nlet eg_B = t;\nlet eg_C = t;\nlet eg_D = t;               //used in eGCD_(), inverseMod_()\nlet md_q1 = t;\nlet md_q2 = t;\nlet md_q3 = t;\nlet md_r = t;\nlet md_r1 = t;\nlet md_r2 = t;\nlet md_tt = t; //used in mod_()\nlet primes = t;\nlet pows = t;\nlet s_i = t;\nlet s_i2 = t;\nlet s_R = t;\nlet s_rm = t;\nlet s_q = t;\nlet s_n1 = t;\nlet s_a = t;\nlet s_r2 = t;\nlet s_n = t;\nlet s_b = t;\nlet s_d = t;\nlet s_x1 = t;\nlet s_x2 = t, s_aa = t;\n//used in randTruePrime_()\nlet rpprb = t;\n//used in randProbPrimeRounds() (which also uses \"primes\")\n\n////////////////////////////////////////////////////////////////////////////////////////\n\nexport function getBpe() {\n    return bpe\n}\n\nexport function getOne() {\n    return one\n}\n\n//return array of all primes less than integer n\nexport function findPrimes(n) {\n    var i, s, p, ans;\n    s = new Array(n);\n    for (i = 0; i < n; i++)\n        s[i] = 0;\n    s[0] = 2;\n    p = 0;    //first p elements of s are primes, the rest are a sieve\n    for (; s[p] < n;) {                  //s[p] is the pth prime\n        for (i = s[p] * s[p]; i < n; i += s[p]) //mark multiples of s[p]\n            s[i] = 1;\n        p++;\n        s[p] = s[p - 1] + 1;\n        for (; s[p] < n && s[s[p]]; s[p]++); //find next prime (where s[p]==0)\n    }\n    ans = new Array(p);\n    for (i = 0; i < p; i++)\n        ans[i] = s[i];\n    return ans;\n}\n\n\n//does a single round of Miller-Rabin base b consider x to be a possible prime?\n//x is a bigInt, and b is an integer, with b<x\nexport function millerRabinInt(x, b) {\n    if (mr_x1.length != x.length) {\n        mr_x1 = dup(x);\n        mr_r = dup(x);\n        mr_a = dup(x);\n    }\n\n    copyInt_(mr_a, b);\n    return millerRabin(x, mr_a);\n}\n\n//does a single round of Miller-Rabin base b consider x to be a possible prime?\n//x and b are bigInts with b<x\nexport function millerRabin(x, b) {\n    var i, j, k, s;\n\n    if (mr_x1.length != x.length) {\n        mr_x1 = dup(x);\n        mr_r = dup(x);\n        mr_a = dup(x);\n    }\n\n    copy_(mr_a, b);\n    copy_(mr_r, x);\n    copy_(mr_x1, x);\n\n    addInt_(mr_r, -1);\n    addInt_(mr_x1, -1);\n\n    //s=the highest power of two that divides mr_r\n    k = 0;\n    for (i = 0; i < mr_r.length; i++)\n        for (j = 1; j < mask; j <<= 1)\n            if (x[i] & j) {\n                s = (k < mr_r.length + bpe ? k : 0);\n                i = mr_r.length;\n                j = mask;\n            } else\n                k++;\n\n    if (s)\n        rightShift_(mr_r, s);\n\n    powMod_(mr_a, mr_r, x);\n\n    if (!equalsInt(mr_a, 1) && !equals(mr_a, mr_x1)) {\n        j = 1;\n        while (j <= s - 1 && !equals(mr_a, mr_x1)) {\n            squareMod_(mr_a, x);\n            if (equalsInt(mr_a, 1)) {\n                return 0;\n            }\n            j++;\n        }\n        if (!equals(mr_a, mr_x1)) {\n            return 0;\n        }\n    }\n    return 1;\n}\n\n//returns how many bits long the bigInt is, not counting leading zeros.\nexport function bitSize(x) {\n    var j, z, w;\n    for (j = x.length - 1; (x[j] == 0) && (j > 0); j--);\n    for (z = 0, w = x[j]; w; (w >>= 1), z++);\n    z += bpe * j;\n    return z;\n}\n\n//return a copy of x with at least n elements, adding leading zeros if needed\nexport function expand(x, n) {\n    var ans = int2bigInt(0, (x.length > n ? x.length : n) * bpe, 0);\n    copy_(ans, x);\n    return ans;\n}\n\n//return a k-bit true random prime using Maurer's algorithm.\nexport function randTruePrime(k) {\n    var ans = int2bigInt(0, k, 0);\n    randTruePrime_(ans, k);\n    return trim(ans, 1);\n}\n\n//return a k-bit random probable prime with probability of error < 2^-80\nexport function randProbPrime(k) {\n    if (k >= 600) return randProbPrimeRounds(k, 2); //numbers from HAC table 4.3\n    if (k >= 550) return randProbPrimeRounds(k, 4);\n    if (k >= 500) return randProbPrimeRounds(k, 5);\n    if (k >= 400) return randProbPrimeRounds(k, 6);\n    if (k >= 350) return randProbPrimeRounds(k, 7);\n    if (k >= 300) return randProbPrimeRounds(k, 9);\n    if (k >= 250) return randProbPrimeRounds(k, 12); //numbers from HAC table 4.4\n    if (k >= 200) return randProbPrimeRounds(k, 15);\n    if (k >= 150) return randProbPrimeRounds(k, 18);\n    if (k >= 100) return randProbPrimeRounds(k, 27);\n    return randProbPrimeRounds(k, 40); //number from HAC remark 4.26 (only an estimate)\n}\n\n//return a k-bit probable random prime using n rounds of Miller Rabin (after trial division with small primes)\t\nexport function randProbPrimeRounds(k, n) {\n    var ans, i, divisible, B;\n    B = 30000;  //B is largest prime to use in trial division\n    ans = int2bigInt(0, k, 0);\n\n    //optimization: try larger and smaller B to find the best limit.\n\n    if (primes.length == 0)\n        primes = findPrimes(30000);  //check for divisibility by primes <=30000\n\n    if (rpprb.length != ans.length)\n        rpprb = dup(ans);\n\n    for (; ;) { //keep trying random values for ans until one appears to be prime\n        //optimization: pick a random number times L=2*3*5*...*p, plus a \n        //   random element of the list of all numbers in [0,L) not divisible by any prime up to p.\n        //   This can reduce the amount of random number generation.\n\n        randBigInt_(ans, k, 0); //ans = a random odd number to check\n        ans[0] |= 1;\n        divisible = 0;\n\n        //check ans for divisibility by small primes up to B\n        for (i = 0; (i < primes.length) && (primes[i] <= B); i++)\n            if (modInt(ans, primes[i]) == 0 && !equalsInt(ans, primes[i])) {\n                divisible = 1;\n                break;\n            }\n\n        //optimization: change millerRabin so the base can be bigger than the number being checked, then eliminate the while here.\n\n        //do n rounds of Miller Rabin, with random bases less than ans\n        for (i = 0; i < n && !divisible; i++) {\n            randBigInt_(rpprb, k, 0);\n            while (!greater(ans, rpprb)) //pick a random rpprb that's < ans\n                randBigInt_(rpprb, k, 0);\n            if (!millerRabin(ans, rpprb))\n                divisible = 1;\n        }\n\n        if (!divisible)\n            return ans;\n    }\n}\n\n//return a new bigInt equal to (x mod n) for bigInts x and n.\nexport function mod(x, n) {\n    var ans = dup(x);\n    mod_(ans, n);\n    return trim(ans, 1);\n}\n\n//return (x+n) where x is a bigInt and n is an integer.\nexport function addInt(x, n) {\n    var ans = expand(x, x.length + 1);\n    addInt_(ans, n);\n    return trim(ans, 1);\n}\n\n//return x*y for bigInts x and y. This is faster when y<x.\nexport function mult(x, y) {\n    var ans = expand(x, x.length + y.length);\n    mult_(ans, y);\n    return trim(ans, 1);\n}\n\n//return (x**y mod n) where x,y,n are bigInts and ** is exponentiation.  0**0=1. Faster for odd n.\nexport function powMod(x, y, n) {\n    var ans = expand(x, n.length);\n    powMod_(ans, trim(y, 2), trim(n, 2), 0);  //this should work without the trim, but doesn't\n    return trim(ans, 1);\n}\n\n//return (x-y) for bigInts x and y.  Negative answers will be 2s complement\nexport function sub(x, y) {\n    var ans = expand(x, (x.length > y.length ? x.length + 1 : y.length + 1));\n    sub_(ans, y);\n    return trim(ans, 1);\n}\n\n//return (x+y) for bigInts x and y.  \nexport function add(x, y) {\n    var ans = expand(x, (x.length > y.length ? x.length + 1 : y.length + 1));\n    add_(ans, y);\n    return trim(ans, 1);\n}\n\n//return (x**(-1) mod n) for bigInts x and n.  If no inverse exists, it returns null\nexport function inverseMod(x, n) {\n    var ans = expand(x, n.length);\n    var s;\n    s = inverseMod_(ans, n);\n    return s ? trim(ans, 1) : null;\n}\n\n//return (x*y mod n) for bigInts x,y,n.  For greater speed, let y<x.\nexport function multMod(x, y, n) {\n    var ans = expand(x, n.length);\n    multMod_(ans, y, n);\n    return trim(ans, 1);\n}\n\n//generate a k-bit true random prime using Maurer's algorithm,\n//and put it into ans.  The bigInt ans must be large enough to hold it.\nexport function randTruePrime_(ans, k) {\n    var c, m, pm, dd, j, r, B, divisible, z, zz, recSize;\n\n    if (primes.length == 0)\n        primes = findPrimes(30000);  //check for divisibility by primes <=30000\n\n    if (pows.length == 0) {\n        pows = new Array(512);\n        for (j = 0; j < 512; j++) {\n            pows[j] = Math.pow(2, j / 511. - 1.);\n        }\n    }\n\n    //c and m should be tuned for a particular machine and value of k, to maximize speed\n    c = 0.1;  //c=0.1 in HAC\n    m = 20;   //generate this k-bit number by first recursively generating a number that has between k/2 and k-m bits\n    recLimit = 20; //stop recursion when k <=recLimit.  Must have recLimit >= 2\n\n    if (s_i2.length != ans.length) {\n        s_i2 = dup(ans);\n        s_R = dup(ans);\n        s_n1 = dup(ans);\n        s_r2 = dup(ans);\n        s_d = dup(ans);\n        s_x1 = dup(ans);\n        s_x2 = dup(ans);\n        s_b = dup(ans);\n        s_n = dup(ans);\n        s_i = dup(ans);\n        s_rm = dup(ans);\n        s_q = dup(ans);\n        s_a = dup(ans);\n        s_aa = dup(ans);\n    }\n\n    if (k <= recLimit) {  //generate small random primes by trial division up to its square root\n        pm = (1 << ((k + 2) >> 1)) - 1; //pm is binary number with all ones, just over sqrt(2^k)\n        copyInt_(ans, 0);\n        for (dd = 1; dd;) {\n            dd = 0;\n            ans[0] = 1 | (1 << (k - 1)) | Math.floor(Math.random() * (1 << k));  //random, k-bit, odd integer, with msb 1\n            for (j = 1; (j < primes.length) && ((primes[j] & pm) == primes[j]); j++) { //trial division by all primes 3...sqrt(2^k)\n                if (0 == (ans[0] % primes[j])) {\n                    dd = 1;\n                    break;\n                }\n            }\n        }\n        carry_(ans);\n        return;\n    }\n\n    B = c * k * k;    //try small primes up to B (or all the primes[] array if the largest is less than B).\n    if (k > 2 * m)  //generate this k-bit number by first recursively generating a number that has between k/2 and k-m bits\n        for (r = 1; k - k * r <= m;)\n            r = pows[Math.floor(Math.random() * 512)];   //r=Math.pow(2,Math.random()-1);\n    else\n        r = .5;\n\n    //simulation suggests the more complex algorithm using r=.333 is only slightly faster.\n\n    recSize = Math.floor(r * k) + 1;\n\n    randTruePrime_(s_q, recSize);\n    copyInt_(s_i2, 0);\n    s_i2[Math.floor((k - 2) / bpe)] |= (1 << ((k - 2) % bpe));   //s_i2=2^(k-2)\n    divide_(s_i2, s_q, s_i, s_rm);                        //s_i=floor((2^(k-1))/(2q))\n\n    z = bitSize(s_i);\n\n    for (; ;) {\n        for (; ;) {  //generate z-bit numbers until one falls in the range [0,s_i-1]\n            randBigInt_(s_R, z, 0);\n            if (greater(s_i, s_R))\n                break;\n        }                //now s_R is in the range [0,s_i-1]\n        addInt_(s_R, 1);  //now s_R is in the range [1,s_i]\n        add_(s_R, s_i);   //now s_R is in the range [s_i+1,2*s_i]\n\n        copy_(s_n, s_q);\n        mult_(s_n, s_R);\n        multInt_(s_n, 2);\n        addInt_(s_n, 1);    //s_n=2*s_R*s_q+1\n\n        copy_(s_r2, s_R);\n        multInt_(s_r2, 2);  //s_r2=2*s_R\n\n        //check s_n for divisibility by small primes up to B\n        for (divisible = 0, j = 0; (j < primes.length) && (primes[j] < B); j++)\n            if (modInt(s_n, primes[j]) == 0 && !equalsInt(s_n, primes[j])) {\n                divisible = 1;\n                break;\n            }\n\n        if (!divisible)    //if it passes small primes check, then try a single Miller-Rabin base 2\n            if (!millerRabinInt(s_n, 2)) //this line represents 75% of the total runtime for randTruePrime_ \n                divisible = 1;\n\n        if (!divisible) {  //if it passes that test, continue checking s_n\n            addInt_(s_n, -3);\n            for (j = s_n.length - 1; (s_n[j] == 0) && (j > 0); j--);  //strip leading zeros\n            for (zz = 0, w = s_n[j]; w; (w >>= 1), zz++);\n            zz += bpe * j;                             //zz=number of bits in s_n, ignoring leading zeros\n            for (; ;) {  //generate z-bit numbers until one falls in the range [0,s_n-1]\n                randBigInt_(s_a, zz, 0);\n                if (greater(s_n, s_a))\n                    break;\n            }                //now s_a is in the range [0,s_n-1]\n            addInt_(s_n, 3);  //now s_a is in the range [0,s_n-4]\n            addInt_(s_a, 2);  //now s_a is in the range [2,s_n-2]\n            copy_(s_b, s_a);\n            copy_(s_n1, s_n);\n            addInt_(s_n1, -1);\n            powMod_(s_b, s_n1, s_n);   //s_b=s_a^(s_n-1) modulo s_n\n            addInt_(s_b, -1);\n            if (isZero(s_b)) {\n                copy_(s_b, s_a);\n                powMod_(s_b, s_r2, s_n);\n                addInt_(s_b, -1);\n                copy_(s_aa, s_n);\n                copy_(s_d, s_b);\n                GCD_(s_d, s_n);  //if s_b and s_n are relatively prime, then s_n is a prime\n                if (equalsInt(s_d, 1)) {\n                    copy_(ans, s_aa);\n                    return;     //if we've made it this far, then s_n is absolutely guaranteed to be prime\n                }\n            }\n        }\n    }\n}\n\n//Return an n-bit random BigInt (n>=1).  If s=1, then the most significant of those n bits is set to 1.\nexport function randBigInt(n, s) {\n    var a, b;\n    a = Math.floor((n - 1) / bpe) + 2; //# array elements to hold the BigInt with a leading 0 element\n    b = int2bigInt(0, 0, a);\n    randBigInt_(b, n, s);\n    return b;\n}\n\n//Set b to an n-bit random BigInt.  If s=1, then the most significant of those n bits is set to 1.\n//Array b must be big enough to hold the result. Must have n>=1\nexport function randBigInt_(b, n, s) {\n    var i, a;\n    for (i = 0; i < b.length; i++)\n        b[i] = 0;\n    a = Math.floor((n - 1) / bpe) + 1; //# array elements to hold the BigInt\n    for (i = 0; i < a; i++) {\n        b[i] = Math.floor(Math.random() * (1 << (bpe - 1)));\n    }\n    b[a - 1] &= (2 << ((n - 1) % bpe)) - 1;\n    if (s == 1)\n        b[a - 1] |= (1 << ((n - 1) % bpe));\n}\n\n//Return the greatest common divisor of bigInts x and y (each with same number of elements).\nexport function GCD(x, y) {\n    var xc, yc;\n    xc = dup(x);\n    yc = dup(y);\n    GCD_(xc, yc);\n    return xc;\n}\n\n//set x to the greatest common divisor of bigInts x and y (each with same number of elements).\n//y is destroyed.\nexport function GCD_(x, y) {\n    var i, xp, yp, A, B, C, D, q, sing;\n    if (T.length != x.length)\n        T = dup(x);\n\n    sing = 1;\n    while (sing) { //while y has nonzero elements other than y[0]\n        sing = 0;\n        for (i = 1; i < y.length; i++) //check if y has nonzero elements other than 0\n            if (y[i]) {\n                sing = 1;\n                break;\n            }\n        if (!sing) break; //quit when y all zero elements except possibly y[0]\n\n        for (i = x.length; !x[i] && i >= 0; i--);  //find most significant element of x\n        xp = x[i];\n        yp = y[i];\n        A = 1; B = 0; C = 0; D = 1;\n        while ((yp + C) && (yp + D)) {\n            q = Math.floor((xp + A) / (yp + C));\n            qp = Math.floor((xp + B) / (yp + D));\n            if (q != qp)\n                break;\n            t = A - q * C; A = C; C = t;    //  do (A,B,xp, C,D,yp) = (C,D,yp, A,B,xp) - q*(0,0,0, C,D,yp)      \n            t = B - q * D; B = D; D = t;\n            t = xp - q * yp; xp = yp; yp = t;\n        }\n        if (B) {\n            copy_(T, x);\n            linComb_(x, y, A, B); //x=A*x+B*y\n            linComb_(y, T, D, C); //y=D*y+C*T\n        } else {\n            mod_(x, y);\n            copy_(T, x);\n            copy_(x, y);\n            copy_(y, T);\n        }\n    }\n    if (y[0] == 0)\n        return;\n    t = modInt(x, y[0]);\n    copyInt_(x, y[0]);\n    y[0] = t;\n    while (y[0]) {\n        x[0] %= y[0];\n        t = x[0]; x[0] = y[0]; y[0] = t;\n    }\n}\n\n//do x=x**(-1) mod n, for bigInts x and n.\n//If no inverse exists, it sets x to zero and returns 0, else it returns 1.\n//The x array must be at least as large as the n array.\nexport function inverseMod_(x, n) {\n    var k = 1 + 2 * Math.max(x.length, n.length);\n\n    if (!(x[0] & 1) && !(n[0] & 1)) {  //if both inputs are even, then inverse doesn't exist\n        copyInt_(x, 0);\n        return 0;\n    }\n\n    if (eg_u.length != k) {\n        eg_u = new Array(k);\n        eg_v = new Array(k);\n        eg_A = new Array(k);\n        eg_B = new Array(k);\n        eg_C = new Array(k);\n        eg_D = new Array(k);\n    }\n\n    copy_(eg_u, x);\n    copy_(eg_v, n);\n    copyInt_(eg_A, 1);\n    copyInt_(eg_B, 0);\n    copyInt_(eg_C, 0);\n    copyInt_(eg_D, 1);\n    for (; ;) {\n        while (!(eg_u[0] & 1)) {  //while eg_u is even\n            halve_(eg_u);\n            if (!(eg_A[0] & 1) && !(eg_B[0] & 1)) { //if eg_A==eg_B==0 mod 2\n                halve_(eg_A);\n                halve_(eg_B);\n            } else {\n                add_(eg_A, n); halve_(eg_A);\n                sub_(eg_B, x); halve_(eg_B);\n            }\n        }\n\n        while (!(eg_v[0] & 1)) {  //while eg_v is even\n            halve_(eg_v);\n            if (!(eg_C[0] & 1) && !(eg_D[0] & 1)) { //if eg_C==eg_D==0 mod 2\n                halve_(eg_C);\n                halve_(eg_D);\n            } else {\n                add_(eg_C, n); halve_(eg_C);\n                sub_(eg_D, x); halve_(eg_D);\n            }\n        }\n\n        if (!greater(eg_v, eg_u)) { //eg_v <= eg_u\n            sub_(eg_u, eg_v);\n            sub_(eg_A, eg_C);\n            sub_(eg_B, eg_D);\n        } else {                   //eg_v > eg_u\n            sub_(eg_v, eg_u);\n            sub_(eg_C, eg_A);\n            sub_(eg_D, eg_B);\n        }\n\n        if (equalsInt(eg_u, 0)) {\n            while (negative(eg_C)) //make sure answer is nonnegative\n                add_(eg_C, n);\n            copy_(x, eg_C);\n\n            if (!equalsInt(eg_v, 1)) { //if GCD_(x,n)!=1, then there is no inverse\n                copyInt_(x, 0);\n                return 0;\n            }\n            return 1;\n        }\n    }\n}\n\n//return x**(-1) mod n, for integers x and n.  Return 0 if there is no inverse\nexport function inverseModInt(x, n) {\n    var a = 1, b = 0, t;\n    for (; ;) {\n        if (x == 1) return a;\n        if (x == 0) return 0;\n        b -= a * Math.floor(n / x);\n        n %= x;\n\n        if (n == 1) return b; //to avoid negatives, change this b to n-b, and each -= to +=\n        if (n == 0) return 0;\n        a -= b * Math.floor(x / n);\n        x %= n;\n    }\n}\n\n//this deprecated export function is for backward compatibility only. \nexport function inverseModInt_(x, n) {\n    return inverseModInt(x, n);\n}\n\n\n//Given positive bigInts x and y, change the bigints v, a, and b to positive bigInts such that:\n//     v = GCD_(x,y) = a*x-b*y\n//The bigInts v, a, b, must have exactly as many elements as the larger of x and y.\nexport function eGCD_(x, y, v, a, b) {\n    var g = 0;\n    var k = Math.max(x.length, y.length);\n    if (eg_u.length != k) {\n        eg_u = new Array(k);\n        eg_A = new Array(k);\n        eg_B = new Array(k);\n        eg_C = new Array(k);\n        eg_D = new Array(k);\n    }\n    while (!(x[0] & 1) && !(y[0] & 1)) {  //while x and y both even\n        halve_(x);\n        halve_(y);\n        g++;\n    }\n    copy_(eg_u, x);\n    copy_(v, y);\n    copyInt_(eg_A, 1);\n    copyInt_(eg_B, 0);\n    copyInt_(eg_C, 0);\n    copyInt_(eg_D, 1);\n    for (; ;) {\n        while (!(eg_u[0] & 1)) {  //while u is even\n            halve_(eg_u);\n            if (!(eg_A[0] & 1) && !(eg_B[0] & 1)) { //if A==B==0 mod 2\n                halve_(eg_A);\n                halve_(eg_B);\n            } else {\n                add_(eg_A, y); halve_(eg_A);\n                sub_(eg_B, x); halve_(eg_B);\n            }\n        }\n\n        while (!(v[0] & 1)) {  //while v is even\n            halve_(v);\n            if (!(eg_C[0] & 1) && !(eg_D[0] & 1)) { //if C==D==0 mod 2\n                halve_(eg_C);\n                halve_(eg_D);\n            } else {\n                add_(eg_C, y); halve_(eg_C);\n                sub_(eg_D, x); halve_(eg_D);\n            }\n        }\n\n        if (!greater(v, eg_u)) { //v<=u\n            sub_(eg_u, v);\n            sub_(eg_A, eg_C);\n            sub_(eg_B, eg_D);\n        } else {                //v>u\n            sub_(v, eg_u);\n            sub_(eg_C, eg_A);\n            sub_(eg_D, eg_B);\n        }\n        if (equalsInt(eg_u, 0)) {\n            while (negative(eg_C)) {   //make sure a (C) is nonnegative\n                add_(eg_C, y);\n                sub_(eg_D, x);\n            }\n            multInt_(eg_D, -1);  ///make sure b (D) is nonnegative\n            copy_(a, eg_C);\n            copy_(b, eg_D);\n            leftShift_(v, g);\n            return;\n        }\n    }\n}\n\n\n//is bigInt x negative?\nexport function negative(x) {\n    return ((x[x.length - 1] >> (bpe - 1)) & 1);\n}\n\n\n//is (x << (shift*bpe)) > y?\n//x and y are nonnegative bigInts\n//shift is a nonnegative integer\nexport function greaterShift(x, y, shift) {\n    var i, kx = x.length, ky = y.length;\n    let k = ((kx + shift) < ky) ? (kx + shift) : ky;\n    for (i = ky - 1 - shift; i < kx && i >= 0; i++)\n        if (x[i] > 0)\n            return 1; //if there are nonzeros in x to the left of the first column of y, then x is bigger\n    for (i = kx - 1 + shift; i < ky; i++)\n        if (y[i] > 0)\n            return 0; //if there are nonzeros in y to the left of the first column of x, then x is not bigger\n    for (i = k - 1; i >= shift; i--)\n        if (x[i - shift] > y[i]) return 1;\n        else if (x[i - shift] < y[i]) return 0;\n    return 0;\n}\n\n//is x > y? (x and y both nonnegative)\nexport function greater(x, y) {\n    var i;\n    var k = (x.length < y.length) ? x.length : y.length;\n\n    for (i = x.length; i < y.length; i++)\n        if (y[i])\n            return 0;  //y has more digits\n\n    for (i = y.length; i < x.length; i++)\n        if (x[i])\n            return 1;  //x has more digits\n\n    for (i = k - 1; i >= 0; i--)\n        if (x[i] > y[i])\n            return 1;\n        else if (x[i] < y[i])\n            return 0;\n    return 0;\n}\n\n//divide x by y giving quotient q and remainder r.  (q=floor(x/y),  r=x mod y).  All 4 are bigints.\n//x must have at least one leading zero element.\n//y must be nonzero.\n//q and r must be arrays that are exactly the same length as x. (Or q can have more).\n//Must have x.length >= y.length >= 2.\nexport function divide_(x, y, q, r) {\n    var kx, ky;\n    var i, j, y1, y2, c, a, b;\n    copy_(r, x);\n    for (ky = y.length; y[ky - 1] == 0; ky--); //ky is number of elements in y, not including leading zeros\n\n    //normalize: ensure the most significant element of y has its highest bit set  \n    b = y[ky - 1];\n    for (a = 0; b; a++)\n        b >>= 1;\n    a = bpe - a;  //a is how many bits to shift so that the high order bit of y is leftmost in its array element\n    leftShift_(y, a);  //multiply both by 1<<a now, then divide both by that at the end\n    leftShift_(r, a);\n\n    //Rob Visser discovered a bug: the following line was originally just before the normalization.\n    for (kx = r.length; r[kx - 1] == 0 && kx > ky; kx--); //kx is number of elements in normalized x, not including leading zeros\n\n    copyInt_(q, 0);                      // q=0\n    while (!greaterShift(y, r, kx - ky)) {  // while (leftShift_(y,kx-ky) <= r) {\n        subShift_(r, y, kx - ky);             //   r=r-leftShift_(y,kx-ky)\n        q[kx - ky]++;                       //   q[kx-ky]++;\n    }                                   // }\n\n    for (i = kx - 1; i >= ky; i--) {\n        if (r[i] == y[ky - 1])\n            q[i - ky] = mask;\n        else\n            q[i - ky] = Math.floor((r[i] * radix + r[i - 1]) / y[ky - 1]);\n\n        //The following for(;;) loop is equivalent to the commented while loop, \n        //except that the uncommented version avoids overflow.\n        //The commented loop comes from HAC, which assumes r[-1]==y[-1]==0\n        //  while (q[i-ky]*(y[ky-1]*radix+y[ky-2]) > r[i]*radix*radix+r[i-1]*radix+r[i-2])\n        //    q[i-ky]--;    \n        for (; ;) {\n            y2 = (ky > 1 ? y[ky - 2] : 0) * q[i - ky];\n            c = y2 >> bpe;\n            y2 = y2 & mask;\n            y1 = c + q[i - ky] * y[ky - 1];\n            c = y1 >> bpe;\n            y1 = y1 & mask;\n\n            if (c == r[i] ? y1 == r[i - 1] ? y2 > (i > 1 ? r[i - 2] : 0) : y1 > r[i - 1] : c > r[i])\n                q[i - ky]--;\n            else\n                break;\n        }\n\n        linCombShift_(r, y, -q[i - ky], i - ky);    //r=r-q[i-ky]*leftShift_(y,i-ky)\n        if (negative(r)) {\n            addShift_(r, y, i - ky);         //r=r+leftShift_(y,i-ky)\n            q[i - ky]--;\n        }\n    }\n\n    rightShift_(y, a);  //undo the normalization step\n    rightShift_(r, a);  //undo the normalization step\n}\n\n//do carries and borrows so each element of the bigInt x fits in bpe bits.\nexport function carry_(x) {\n    var i, k, c, b;\n    k = x.length;\n    c = 0;\n    for (i = 0; i < k; i++) {\n        c += x[i];\n        b = 0;\n        if (c < 0) {\n            b = -(c >> bpe);\n            c += b * radix;\n        }\n        x[i] = c & mask;\n        c = (c >> bpe) - b;\n    }\n}\n\n//return x mod n for bigInt x and integer n.\nexport function modInt(x, n) {\n    var i, c = 0;\n    for (i = x.length - 1; i >= 0; i--)\n        c = (c * radix + x[i]) % n;\n    return c;\n}\n\n//convert the integer t into a bigInt with at least the given number of bits.\n//the returned array stores the bigInt in bpe-bit chunks, little endian (buff[0] is least significant word)\n//Pad the array with leading zeros so that it has at least minSize elements.\n//There will always be at least one leading 0 element.\nexport function int2bigInt(t, bits, minSize) {\n    var i, k;\n    k = Math.ceil(bits / bpe) + 1;\n    k = minSize > k ? minSize : k;\n    let buff = new Array(k);\n    copyInt_(buff, t);\n    return buff;\n}\n\n//return the bigInt given a string representation in a given base.  \n//Pad the array with leading zeros so that it has at least minSize elements.\n//If base=-1, then it reads in a space-separated list of array elements in decimal.\n//The array will always have at least one leading zero, unless base=-1.\nexport function str2bigInt(s, base, minSize) {\n    var d, i, j, x, y, kk;\n    var k = s.length;\n    if (base == -1) { //comma-separated list of array elements in decimal\n        x = new Array(0);\n        for (; ;) {\n            y = new Array(x.length + 1);\n            for (i = 0; i < x.length; i++)\n                y[i + 1] = x[i];\n            y[0] = parseInt(s, 10);\n            x = y;\n            d = s.indexOf(',', 0);\n            if (d < 1)\n                break;\n            s = s.substring(d + 1);\n            if (s.length == 0)\n                break;\n        }\n        if (x.length < minSize) {\n            y = new Array(minSize);\n            copy_(y, x);\n            return y;\n        }\n        return x;\n    }\n\n    x = int2bigInt(0, base * k, 0);\n    for (i = 0; i < k; i++) {\n        d = digitsStr.indexOf(s.substring(i, i + 1), 0);\n        if (base <= 36 && d >= 36)  //convert lowercase to uppercase if base<=36\n            d -= 26;\n        if (d >= base || d < 0) {   //stop at first illegal character\n            break;\n        }\n        multInt_(x, base);\n        addInt_(x, d);\n    }\n\n    for (k = x.length; k > 0 && !x[k - 1]; k--); //strip off leading zeros\n    k = minSize > k + 1 ? minSize : k + 1;\n    y = new Array(k);\n    kk = k < x.length ? k : x.length;\n    for (i = 0; i < kk; i++)\n        y[i] = x[i];\n    for (; i < k; i++)\n        y[i] = 0;\n    return y;\n}\n\n//is bigint x equal to integer y?\n//y must have less than bpe bits\nexport function equalsInt(x, y) {\n    var i;\n    if (x[0] != y)\n        return 0;\n    for (i = 1; i < x.length; i++)\n        if (x[i])\n            return 0;\n    return 1;\n}\n\n//are bigints x and y equal?\n//this works even if x and y are different lengths and have arbitrarily many leading zeros\nexport function equals(x, y) {\n    var i;\n    var k = x.length < y.length ? x.length : y.length;\n    for (i = 0; i < k; i++)\n        if (x[i] != y[i])\n            return 0;\n    if (x.length > y.length) {\n        for (; i < x.length; i++)\n            if (x[i])\n                return 0;\n    } else {\n        for (; i < y.length; i++)\n            if (y[i])\n                return 0;\n    }\n    return 1;\n}\n\n//is the bigInt x equal to zero?\nexport function isZero(x) {\n    var i;\n    for (i = 0; i < x.length; i++)\n        if (x[i])\n            return 0;\n    return 1;\n}\n\n//convert a bigInt into a string in a given base, from base 2 up to base 95.\n//Base -1 prints the contents of the array representing the number.\nexport function bigInt2str(x, base) {\n    var i, t, s = \"\";\n\n    if (s6.length != x.length)\n        s6 = dup(x);\n    else\n        copy_(s6, x);\n\n    if (base == -1) { //return the list of array contents\n        for (i = x.length - 1; i > 0; i--)\n            s += x[i] + ',';\n        s += x[0];\n    }\n    else { //return it in the given base\n        while (!isZero(s6)) {\n            t = divInt_(s6, base);  //t=s6 % base; s6=floor(s6/base);\n            s = digitsStr.substring(t, t + 1) + s;\n        }\n    }\n    if (s.length == 0)\n        s = \"0\";\n    return s;\n}\n\n//returns a duplicate of bigInt x\nexport function dup(x) {\n    var i;\n    let buff = new Array(x.length);\n    copy_(buff, x);\n    return buff;\n}\n\n//do x=y on bigInts x and y.  x must be an array at least as big as y (not counting the leading zeros in y).\nexport function copy_(x, y) {\n    var i;\n    var k = x.length < y.length ? x.length : y.length;\n    for (i = 0; i < k; i++)\n        x[i] = y[i];\n    for (i = k; i < x.length; i++)\n        x[i] = 0;\n}\n\n//do x=y on bigInt x and integer y.  \nexport function copyInt_(x, n) {\n    var i, c;\n    for (c = n, i = 0; i < x.length; i++) {\n        x[i] = c & mask;\n        c >>= bpe;\n    }\n}\n\n//do x=x+n where x is a bigInt and n is an integer.\n//x must be large enough to hold the result.\nexport function addInt_(x, n) {\n    var i, k, c, b;\n    x[0] += n;\n    k = x.length;\n    c = 0;\n    for (i = 0; i < k; i++) {\n        c += x[i];\n        b = 0;\n        if (c < 0) {\n            b = -(c >> bpe);\n            c += b * radix;\n        }\n        x[i] = c & mask;\n        c = (c >> bpe) - b;\n        if (!c) return; //stop carrying as soon as the carry is zero\n    }\n}\n\n//right shift bigInt x by n bits.  0 <= n < bpe.\nexport function rightShift_(x, n) {\n    var i;\n    var k = Math.floor(n / bpe);\n    if (k) {\n        for (i = 0; i < x.length - k; i++) //right shift x by k elements\n            x[i] = x[i + k];\n        for (; i < x.length; i++)\n            x[i] = 0;\n        n %= bpe;\n    }\n    for (i = 0; i < x.length - 1; i++) {\n        x[i] = mask & ((x[i + 1] << (bpe - n)) | (x[i] >> n));\n    }\n    x[i] >>= n;\n}\n\n//do x=floor(|x|/2)*sgn(x) for bigInt x in 2's complement\nexport function halve_(x) {\n    var i;\n    for (i = 0; i < x.length - 1; i++) {\n        x[i] = mask & ((x[i + 1] << (bpe - 1)) | (x[i] >> 1));\n    }\n    x[i] = (x[i] >> 1) | (x[i] & (radix >> 1));  //most significant bit stays the same\n}\n\n//left shift bigInt x by n bits.\nexport function leftShift_(x, n) {\n    var i;\n    var k = Math.floor(n / bpe);\n    if (k) {\n        for (i = x.length; i >= k; i--) //left shift x by k elements\n            x[i] = x[i - k];\n        for (; i >= 0; i--)\n            x[i] = 0;\n        n %= bpe;\n    }\n    if (!n)\n        return;\n    for (i = x.length - 1; i > 0; i--) {\n        x[i] = mask & ((x[i] << n) | (x[i - 1] >> (bpe - n)));\n    }\n    x[i] = mask & (x[i] << n);\n}\n\n//do x=x*n where x is a bigInt and n is an integer.\n//x must be large enough to hold the result.\nexport function multInt_(x, n) {\n    var i, k, c, b;\n    if (!n)\n        return;\n    k = x.length;\n    c = 0;\n    for (i = 0; i < k; i++) {\n        c += x[i] * n;\n        b = 0;\n        if (c < 0) {\n            b = -(c >> bpe);\n            c += b * radix;\n        }\n        x[i] = c & mask;\n        c = (c >> bpe) - b;\n    }\n}\n\n//do x=floor(x/n) for bigInt x and integer n, and return the remainder\nexport function divInt_(x, n) {\n    var i, r = 0, s;\n    for (i = x.length - 1; i >= 0; i--) {\n        s = r * radix + x[i];\n        x[i] = Math.floor(s / n);\n        r = s % n;\n    }\n    return r;\n}\n\n//do the linear combination x=a*x+b*y for bigInts x and y, and integers a and b.\n//x must be large enough to hold the answer.\nexport function linComb_(x, y, a, b) {\n    var i, c, k, kk;\n    k = x.length < y.length ? x.length : y.length;\n    kk = x.length;\n    for (c = 0, i = 0; i < k; i++) {\n        c += a * x[i] + b * y[i];\n        x[i] = c & mask;\n        c >>= bpe;\n    }\n    for (i = k; i < kk; i++) {\n        c += a * x[i];\n        x[i] = c & mask;\n        c >>= bpe;\n    }\n}\n\n//do the linear combination x=a*x+b*(y<<(ys*bpe)) for bigInts x and y, and integers a, b and ys.\n//x must be large enough to hold the answer.\nexport function linCombShift_(x, y, b, ys) {\n    var i, c, k, kk;\n    k = x.length < ys + y.length ? x.length : ys + y.length;\n    kk = x.length;\n    for (c = 0, i = ys; i < k; i++) {\n        c += x[i] + b * y[i - ys];\n        x[i] = c & mask;\n        c >>= bpe;\n    }\n    for (i = k; c && i < kk; i++) {\n        c += x[i];\n        x[i] = c & mask;\n        c >>= bpe;\n    }\n}\n\n//do x=x+(y<<(ys*bpe)) for bigInts x and y, and integers a,b and ys.\n//x must be large enough to hold the answer.\nexport function addShift_(x, y, ys) {\n    var i, c, k, kk;\n    k = x.length < ys + y.length ? x.length : ys + y.length;\n    kk = x.length;\n    for (c = 0, i = ys; i < k; i++) {\n        c += x[i] + y[i - ys];\n        x[i] = c & mask;\n        c >>= bpe;\n    }\n    for (i = k; c && i < kk; i++) {\n        c += x[i];\n        x[i] = c & mask;\n        c >>= bpe;\n    }\n}\n\n//do x=x-(y<<(ys*bpe)) for bigInts x and y, and integers a,b and ys.\n//x must be large enough to hold the answer.\nexport function subShift_(x, y, ys) {\n    var i, c, k, kk;\n    k = x.length < ys + y.length ? x.length : ys + y.length;\n    kk = x.length;\n    for (c = 0, i = ys; i < k; i++) {\n        c += x[i] - y[i - ys];\n        x[i] = c & mask;\n        c >>= bpe;\n    }\n    for (i = k; c && i < kk; i++) {\n        c += x[i];\n        x[i] = c & mask;\n        c >>= bpe;\n    }\n}\n\n//do x=x-y for bigInts x and y.\n//x must be large enough to hold the answer.\n//negative answers will be 2s complement\nexport function sub_(x, y) {\n    var i, c, k, kk;\n    k = x.length < y.length ? x.length : y.length;\n    for (c = 0, i = 0; i < k; i++) {\n        c += x[i] - y[i];\n        x[i] = c & mask;\n        c >>= bpe;\n    }\n    for (i = k; c && i < x.length; i++) {\n        c += x[i];\n        x[i] = c & mask;\n        c >>= bpe;\n    }\n}\n\n//do x=x+y for bigInts x and y.\n//x must be large enough to hold the answer.\nexport function add_(x, y) {\n    var i, c, k, kk;\n    k = x.length < y.length ? x.length : y.length;\n    for (c = 0, i = 0; i < k; i++) {\n        c += x[i] + y[i];\n        x[i] = c & mask;\n        c >>= bpe;\n    }\n    for (i = k; c && i < x.length; i++) {\n        c += x[i];\n        x[i] = c & mask;\n        c >>= bpe;\n    }\n}\n\n//do x=x*y for bigInts x and y.  This is faster when y<x.\nexport function mult_(x, y) {\n    var i;\n    if (ss.length != 2 * x.length)\n        ss = new Array(2 * x.length);\n    copyInt_(ss, 0);\n    for (i = 0; i < y.length; i++)\n        if (y[i])\n            linCombShift_(ss, x, y[i], i);   //ss=1*ss+y[i]*(x<<(i*bpe))\n    copy_(x, ss);\n}\n\n//do x=x mod n for bigInts x and n.\nexport function mod_(x, n) {\n    if (s4.length != x.length)\n        s4 = dup(x);\n    else\n        copy_(s4, x);\n    if (s5.length != x.length)\n        s5 = dup(x);\n    divide_(s4, n, s5, x);  //x = remainder of s4 / n\n}\n\n//do x=x*y mod n for bigInts x,y,n.\n//for greater speed, let y<x.\nexport function multMod_(x, y, n) {\n    var i;\n    if (s0.length != 2 * x.length)\n        s0 = new Array(2 * x.length);\n    copyInt_(s0, 0);\n    for (i = 0; i < y.length; i++)\n        if (y[i])\n            linCombShift_(s0, x, y[i], i);   //s0=1*s0+y[i]*(x<<(i*bpe))\n    mod_(s0, n);\n    copy_(x, s0);\n}\n\n//do x=x*x mod n for bigInts x,n.\nexport function squareMod_(x, n) {\n    var i, j, d, c, kx, kn, k;\n    for (kx = x.length; kx > 0 && !x[kx - 1]; kx--);  //ignore leading zeros in x\n    k = kx > n.length ? 2 * kx : 2 * n.length; //k=# elements in the product, which is twice the elements in the larger of x and n\n    if (s0.length != k)\n        s0 = new Array(k);\n    copyInt_(s0, 0);\n    for (i = 0; i < kx; i++) {\n        c = s0[2 * i] + x[i] * x[i];\n        s0[2 * i] = c & mask;\n        c >>= bpe;\n        for (j = i + 1; j < kx; j++) {\n            c = s0[i + j] + 2 * x[i] * x[j] + c;\n            s0[i + j] = (c & mask);\n            c >>= bpe;\n        }\n        s0[i + kx] = c;\n    }\n    mod_(s0, n);\n    copy_(x, s0);\n}\n\n//return x with exactly k leading zero elements\nexport function trim(x, k) {\n    var i, y;\n    for (i = x.length; i > 0 && !x[i - 1]; i--);\n    y = new Array(i + k);\n    copy_(y, x);\n    return y;\n}\n\n//do x=x**y mod n, where x,y,n are bigInts and ** is exponentiation.  0**0=1.\n//this is faster when n is odd.  x usually needs to have as many elements as n.\nexport function powMod_(x, y, n) {\n    var k1, k2, kn, np;\n    if (s7.length != n.length)\n        s7 = dup(n);\n\n    //for even modulus, use a simple square-and-multiply algorithm,\n    //rather than using the more complex Montgomery algorithm.\n    if ((n[0] & 1) == 0) {\n        copy_(s7, x);\n        copyInt_(x, 1);\n        while (!equalsInt(y, 0)) {\n            if (y[0] & 1)\n                multMod_(x, s7, n);\n            divInt_(y, 2);\n            squareMod_(s7, n);\n        }\n        return;\n    }\n\n    //calculate np from n for the Montgomery multiplications\n    copyInt_(s7, 0);\n    for (kn = n.length; kn > 0 && !n[kn - 1]; kn--);\n    np = radix - inverseModInt(modInt(n, radix), radix);\n    s7[kn] = 1;\n    multMod_(x, s7, n);   // x = x * 2**(kn*bp) mod n\n\n    if (s3.length != x.length)\n        s3 = dup(x);\n    else\n        copy_(s3, x);\n\n    for (k1 = y.length - 1; k1 > 0 & !y[k1]; k1--);  //k1=first nonzero element of y\n    if (y[k1] == 0) {  //anything to the 0th power is 1\n        copyInt_(x, 1);\n        return;\n    }\n    for (k2 = 1 << (bpe - 1); k2 && !(y[k1] & k2); k2 >>= 1);  //k2=position of first 1 bit in y[k1]\n    for (; ;) {\n        if (!(k2 >>= 1)) {  //look at next bit of y\n            k1--;\n            if (k1 < 0) {\n                mont_(x, one, n, np);\n                return;\n            }\n            k2 = 1 << (bpe - 1);\n        }\n        mont_(x, x, n, np);\n\n        if (k2 & y[k1]) //if next bit is a 1\n            mont_(x, s3, n, np);\n    }\n}\n\n\n//do x=x*y*Ri mod n for bigInts x,y,n, \n//  where Ri = 2**(-kn*bpe) mod n, and kn is the \n//  number of elements in the n array, not \n//  counting leading zeros.  \n//x array must have at least as many elemnts as the n array\n//It's OK if x and y are the same variable.\n//must have:\n//  x,y < n\n//  n is odd\n//  np = -(n^(-1)) mod radix\nexport function mont_(x, y, n, np) {\n    var i, j, c, ui, t, ks;\n    var kn = n.length;\n    var ky = y.length;\n\n    if (sa.length != kn)\n        sa = new Array(kn);\n\n    copyInt_(sa, 0);\n\n    for (; kn > 0 && n[kn - 1] == 0; kn--); //ignore leading zeros of n\n    for (; ky > 0 && y[ky - 1] == 0; ky--); //ignore leading zeros of y\n    ks = sa.length - 1; //sa will never have more than this many nonzero elements.  \n\n    //the following loop consumes 95% of the runtime for randTruePrime_() and powMod_() for large numbers\n    for (i = 0; i < kn; i++) {\n        t = sa[0] + x[i] * y[0];\n        ui = ((t & mask) * np) & mask;  //the inner \"& mask\" was needed on Safari (but not MSIE) at one time\n        c = (t + ui * n[0]) >> bpe;\n        t = x[i];\n\n        //do sa=(sa+x[i]*y+ui*n)/b   where b=2**bpe.  Loop is unrolled 5-fold for speed\n        j = 1;\n        for (; j < ky - 4;) {\n            c += sa[j] + ui * n[j] + t * y[j]; sa[j - 1] = c & mask; c >>= bpe; j++;\n            c += sa[j] + ui * n[j] + t * y[j]; sa[j - 1] = c & mask; c >>= bpe; j++;\n            c += sa[j] + ui * n[j] + t * y[j]; sa[j - 1] = c & mask; c >>= bpe; j++;\n            c += sa[j] + ui * n[j] + t * y[j]; sa[j - 1] = c & mask; c >>= bpe; j++;\n            c += sa[j] + ui * n[j] + t * y[j]; sa[j - 1] = c & mask; c >>= bpe; j++;\n        }\n        for (; j < ky;) { c += sa[j] + ui * n[j] + t * y[j]; sa[j - 1] = c & mask; c >>= bpe; j++; }\n        for (; j < kn - 4;) {\n            c += sa[j] + ui * n[j]; sa[j - 1] = c & mask; c >>= bpe; j++;\n            c += sa[j] + ui * n[j]; sa[j - 1] = c & mask; c >>= bpe; j++;\n            c += sa[j] + ui * n[j]; sa[j - 1] = c & mask; c >>= bpe; j++;\n            c += sa[j] + ui * n[j]; sa[j - 1] = c & mask; c >>= bpe; j++;\n            c += sa[j] + ui * n[j]; sa[j - 1] = c & mask; c >>= bpe; j++;\n        }\n        for (; j < kn;) { c += sa[j] + ui * n[j]; sa[j - 1] = c & mask; c >>= bpe; j++; }\n        for (; j < ks;) { c += sa[j]; sa[j - 1] = c & mask; c >>= bpe; j++; }\n        sa[j - 1] = c & mask;\n    }\n\n    if (!greater(n, sa))\n        sub_(sa, n);\n    copy_(x, sa);\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/Utils/leemonBigInt.js","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pako/lib/zlib/messages.js\n// module id = 9\n// module chunks = 0","// import axios from 'axios'\n\n// export function toArrayBuffer(buf) {\n//     var ab = new ArrayBuffer(buf.length)\n//     var view = new Uint8Array(ab)\n//     for (var i = 0; i < buf.length; ++i) {\n//         view[i] = buf[i]\n//     }\n//     return ab\n// }\n\nimport { ModeOfOperationCTR } from 'Utils/aes';\n\nlet websockets = {};\n\nfunction WSocket(url, dcId) {\n    this._url = url;\n    this._dcId = dcId;\n\n    this.open();\n};\n\nWSocket.prototype.reconnect = function() {\n    if (this._gonnaClose) {\n        return false;\n    }\n\n    // this._socket.removeAllListeners();\n    clearTimeout(this._reconnTimeout);\n    this._reconnTimeout = setTimeout(()=>{\n        this.log('reconnecting...');\n        this.open();\n    }, 1000);\n};\n\nWSocket.prototype.close = function() {\n    if (this._socket) {\n        this._gonnaClose = true;\n        this._socket.close();\n    }\n};\n\nWSocket.prototype.open = function() {\n    this._networkCallback = null;\n\n    this._socket = new WebSocket(this._url, 'binary');\n    this._socket.binaryType = \"arraybuffer\";\n    this.log('Initialization');\n\n    this._incomePromiseResolvers = [];\n\n    this._socket.addEventListener('message', (event) => {\n        if(event.data instanceof ArrayBuffer) {\n            // this.log('Message from server ', event.data);\n            const resolver = this._incomePromiseResolvers.shift();\n\n            let dec = this._decryptor.decrypt(new Uint8Array(event.data));\n            // this.log('Decrypted', dec);\n            // this.log(bytesFromWords(data));\n            // let dec = this._decryptor.process(data);\n            // this.log(dec);\n            // dec = dec.concat(this._decryptor.finalize());\n            // this.log(dec);\n            // dec = new Uint8Array(bytesFromWords(dec));\n            /// remove length\n            if (dec[0] == 0x7f) {\n                dec = dec.slice(4);\n            } else {\n                dec = dec.slice(1);\n            }\n            // this.log(new Int32Array(dec.buffer));\n\n            if (resolver) {\n                resolver(dec.buffer);\n            } else {\n                if (this._networkCallback) {\n                    this._networkCallback({data: dec.buffer});\n                } else {\n                    console.error('Nobody waiting...');\n                }\n            }\n        }\n    });\n\n    this._openResolver = null;\n    this._openPromise = new Promise((res, rej)=>{\n        this._openResolver = res;\n    });\n\n    this._socket.onopen = (event)=>{\n        this.log('opened', event);\n        this.setupObfuscation();\n        this._openResolver();\n    };\n\n    this._socket.onclose = (event)=>{\n        this.log('closed', event);\n        this.reconnect(event);\n    };\n\n    this._socket.onerror = (event)=>{\n        this.log('error', event);\n        this.reconnect(event);\n    };\n\n    // setTimeout(()=>{\n    //     this._socket.close();\n    // }, 5000+Math.random()*5000);\n};\n\nWSocket.prototype.setupObfuscation = function() {\n    let random = new Uint8Array(64);\n    // new SecureRandom().nextBytes(random);\n\n    // protocol\n    random[56] = 0xef;\n    random[57] = 0xef;\n    random[58] = 0xef;\n    random[59] = 0xef;\n\n    let reversed = random.slice();\n    reversed = reversed.reverse();\n\n    let encrypt_key = random.slice(8,40);\n    let encrypt_iv = random.slice(40,56);\n    let decrypt_key = reversed.slice(8,40);\n    let decrypt_iv = reversed.slice(40,56);\n\n    this._encryptor = new ModeOfOperationCTR(encrypt_key, encrypt_iv); // aesEncryptor(encrypt_key, encrypt_iv);\n    this._decryptor = new ModeOfOperationCTR(decrypt_key, decrypt_iv);\n\n    let enc = this._encryptor.encrypt(random);\n\n    random[56] = enc[56];\n    random[57] = enc[57];\n    random[58] = enc[58];\n    random[59] = enc[59];\n\n    this._socket.send(random);\n}\n\nWSocket.prototype.log = function(str, e) {\n    console.warn('ws ('+this._dcId+'): ', str, e);\n};\n\nWSocket.prototype.setCallback = function(networkCallback) {\n    this._networkCallback = networkCallback;\n}\n\nWSocket.prototype.send = function(data) {\n    return new Promise((resolve, reject)=>{\n        this._openPromise\n            .then(()=>{\n                const incomePromise = new Promise((res, rej)=>{\n                    this._incomePromiseResolvers.push(res);\n                });\n                let mData = new Uint8Array(data.buffer);\n                let length = mData.length / 4;\n\n                let lenA = null; new Uint8Array(mData.length + 1);\n                if (length < 0x7e) {\n                    lenA = new Uint8Array(mData.length + 1);\n                    lenA.set(mData, 1);\n                    lenA[0] = length;\n                } else {\n                    lenA = new Uint8Array(mData.length + 4);\n                    lenA.set(mData, 4);\n                    lenA[0] = 0x7f;\n                    lenA[1] = length & 0xFF;\n                    lenA[2] = (length >> 8) & 0xFF;\n                    lenA[3] = (length >> 16) & 0xFF;\n                }\n\n                let enc = this._encryptor.encrypt(lenA);\n\n                try {\n                    this._socket.send(enc);\n                } catch (e){\n                    this._socket.emit('error',e);\n                }\n\n                return incomePromise;\n            })\n            .then((data)=>{\n                resolve(data);\n            });\n    });\n};\n\n// class WSocket {\n//     constructor(url) {\n//     }\n\n//     log(str, e) {\n//     }\n\n//     async send(data) {\n//         await this._openPromise;\n\n//         const incomePromise = new Promise((res, rej)=>{\n//             this._incomePromiseResolvers.push(res);\n//         });\n\n//         this._socket.send(data);\n//         const res = await incomePromise;\n//     }\n// };\n\nexport const flushSockets = (url, dcId) => {\n    console.error('Flush sockets');\n    if (!url) {\n        for (let u in websockets) {\n            websockets[u].close();\n        }\n        websockets = {};\n    } else {\n        // if (websockets[url]) {\n        //     websockets[url].close();\n        // }\n        websockets[url+dcId] = undefined;\n    }\n};\n\nexport const networkRequest = (url, dcId, requestData, networkCallback) => {\n    try {\n    // determine if url is for websocket\n    if (url.indexOf('apiws') != -1 || url.indexOf('apis') != -1) {\n        // going to use websocket\n        if (websockets[url+dcId]) {\n            // already have websocket for this url\n        } else {\n            console.log('Connecting to ', url, 'dcId', dcId);\n            const socket = new WSocket(url, dcId);\n            websockets[url+dcId] = socket;\n        }\n\n        return new Promise((resolve, reject)=>{\n            if (networkCallback) {\n                websockets[url+dcId].setCallback(networkCallback);\n            }\n            websockets[url+dcId].send(requestData)\n                .then((data)=>{\n                    resolve({data: data});\n                });\n        });\n\n    } else {\n        // going to use http/https queries\n        //\n        return new Promise((resolve, reject)=>{\n            var oReq = new XMLHttpRequest;\n            oReq.responseType = \"arraybuffer\";\n            oReq.open(\"POST\", url);\n\n            oReq.onload = function (oEvent) {\n              var arrayBuffer = oReq.response; // Note: not oReq.responseText\n              oReq.abort();\n              if (arrayBuffer) {\n                var byteArray = new Uint8Array(arrayBuffer);\n                resolve({data: byteArray.buffer});\n              }\n            };\n\n            oReq.send(requestData);\n        });\n    }\n    } catch(e) {\n        console.log(e);\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/network.js","// Copyright (c) 2005  Tom Wu\n// All Rights Reserved.\n// See \"LICENSE\" for details.\n\n// Basic JavaScript BN library - subset useful for RSA encryption.\n\nconst navigator = {}\n\n// Bits per digit\nvar dbits;\n\n// JavaScript engine analysis\nvar canary = 0xdeadbeefcafe;\nvar j_lm = ((canary&0xffffff)==0xefcafe);\n\n// (public) Constructor\nexport function BigInteger(a,b,c) {\n  if(a != null)\n    if(\"number\" == typeof a) this.fromNumber(a,b,c);\n    else if(b == null && \"string\" != typeof a) this.fromString(a,256);\n    else this.fromString(a,b);\n}\n\n// return new, unset BigInteger\nfunction nbi() { return new BigInteger(null); }\n\n// am: Compute w_j += (x*this_i), propagate carries,\n// c is initial carry, returns final carry.\n// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n// We need to select the fastest one that works in this environment.\n\n// am1: use a single mult and divide to get the high bits,\n// max digit bits should be 26 because\n// max internal value = 2*dvalue^2-2*dvalue (< 2^53)\nfunction am1(i,x,w,j,c,n) {\n  while(--n >= 0) {\n    var v = x*this[i++]+w[j]+c;\n    c = Math.floor(v/0x4000000);\n    w[j++] = v&0x3ffffff;\n  }\n  return c;\n}\n// am2 avoids a big mult-and-extract completely.\n// Max digit bits should be <= 30 because we do bitwise ops\n// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\nfunction am2(i,x,w,j,c,n) {\n  var xl = x&0x7fff, xh = x>>15;\n  while(--n >= 0) {\n    var l = this[i]&0x7fff;\n    var h = this[i++]>>15;\n    var m = xh*l+h*xl;\n    l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);\n    c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);\n    w[j++] = l&0x3fffffff;\n  }\n  return c;\n}\n// Alternately, set max digit bits to 28 since some\n// browsers slow down when dealing with 32-bit numbers.\nfunction am3(i,x,w,j,c,n) {\n  var xl = x&0x3fff, xh = x>>14;\n  while(--n >= 0) {\n    var l = this[i]&0x3fff;\n    var h = this[i++]>>14;\n    var m = xh*l+h*xl;\n    l = xl*l+((m&0x3fff)<<14)+w[j]+c;\n    c = (l>>28)+(m>>14)+xh*h;\n    w[j++] = l&0xfffffff;\n  }\n  return c;\n}\n\nif(j_lm && (navigator.appName == \"Microsoft Internet Explorer\")) {\n  BigInteger.prototype.am = am2;\n  dbits = 30;\n}\nelse if(j_lm && (navigator.appName != \"Netscape\")) {\n  BigInteger.prototype.am = am1;\n  dbits = 26;\n}\nelse { // Mozilla/Netscape seems to prefer am3\n  BigInteger.prototype.am = am3;\n  dbits = 28;\n}\n\nBigInteger.prototype.DB = dbits;\nBigInteger.prototype.DM = ((1<<dbits)-1);\nBigInteger.prototype.DV = (1<<dbits);\n\nvar BI_FP = 52;\nBigInteger.prototype.FV = Math.pow(2,BI_FP);\nBigInteger.prototype.F1 = BI_FP-dbits;\nBigInteger.prototype.F2 = 2*dbits-BI_FP;\n\n// Digit conversions\nvar BI_RM = \"0123456789abcdefghijklmnopqrstuvwxyz\";\nvar BI_RC = new Array();\nvar rr,vv;\nrr = \"0\".charCodeAt(0);\nfor(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;\nrr = \"a\".charCodeAt(0);\nfor(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\nrr = \"A\".charCodeAt(0);\nfor(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\n\nfunction int2char(n) { return BI_RM.charAt(n); }\nfunction intAt(s,i) {\n  var c = BI_RC[s.charCodeAt(i)];\n  return (c==null)?-1:c;\n}\n\n// (protected) copy this to r\nfunction bnpCopyTo(r) {\n  for(var i = this.t-1; i >= 0; --i) r[i] = this[i];\n  r.t = this.t;\n  r.s = this.s;\n}\n\n// (protected) set from integer value x, -DV <= x < DV\nfunction bnpFromInt(x) {\n  this.t = 1;\n  this.s = (x<0)?-1:0;\n  if(x > 0) this[0] = x;\n  else if(x < -1) this[0] = x+this.DV;\n  else this.t = 0;\n}\n\n// return bigint initialized to value\nfunction nbv(i) { var r = nbi(); r.fromInt(i); return r; }\n\n// (protected) set from string and radix\nfunction bnpFromString(s,b,signed) {\n  var k;\n  if(b == 16) k = 4;\n  else if(b == 8) k = 3;\n  else if(b == 256) k = 8; // byte array\n  else if(b == 2) k = 1;\n  else if(b == 32) k = 5;\n  else if(b == 4) k = 2;\n  else { this.fromRadix(s,b); return; }\n  this.t = 0;\n  this.s = 0;\n  var i = s.length, mi = false, sh = 0;\n  while(--i >= 0) {\n    var x = (k==8)?s[i]&0xff:intAt(s,i);\n    if(x < 0) {\n      if(s.charAt(i) == \"-\") mi = true;\n      continue;\n    }\n    mi = false;\n    if(sh == 0)\n      this[this.t++] = x;\n    else if(sh+k > this.DB) {\n      this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;\n      this[this.t++] = (x>>(this.DB-sh));\n    }\n    else\n      this[this.t-1] |= x<<sh;\n    sh += k;\n    if(sh >= this.DB) sh -= this.DB;\n  }\n  // Disabled due to '-' prefix in toString\n  if(k == 8 && (s[0]&0x80) != 0 && signed) {\n    this.s = -1;\n    if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;\n  }\n  this.clamp();\n  if(mi) BigInteger.ZERO.subTo(this,this);\n}\n\n// (protected) clamp off excess high words\nfunction bnpClamp() {\n  var c = this.s&this.DM;\n  while(this.t > 0 && this[this.t-1] == c) --this.t;\n}\n\n// (public) return string representation in given radix\nfunction bnToString(b) {\n  if(this.s < 0) return \"-\"+this.negate().toString(b);\n  var k;\n  if(b == 16) k = 4;\n  else if(b == 8) k = 3;\n  else if(b == 2) k = 1;\n  else if(b == 32) k = 5;\n  else if(b == 4) k = 2;\n  else return this.toRadix(b);\n  var km = (1<<k)-1, d, m = false, r = \"\", i = this.t;\n  var p = this.DB-(i*this.DB)%k;\n  if(i-- > 0) {\n    if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }\n    while(i >= 0) {\n      if(p < k) {\n        d = (this[i]&((1<<p)-1))<<(k-p);\n        d |= this[--i]>>(p+=this.DB-k);\n      }\n      else {\n        d = (this[i]>>(p-=k))&km;\n        if(p <= 0) { p += this.DB; --i; }\n      }\n      if(d > 0) m = true;\n      if(m) r += int2char(d);\n    }\n  }\n  return m?r:\"0\";\n}\n\n// (public) -this\nfunction bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }\n\n// (public) |this|\nfunction bnAbs() { return (this.s<0)?this.negate():this; }\n\n// (public) return + if this > a, - if this < a, 0 if equal\nfunction bnCompareTo(a) {\n  var r = this.s-a.s;\n  if(r != 0) return r;\n  var i = this.t;\n  r = i-a.t;\n  if(r != 0) return (this.s<0)?-r:r;\n  while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;\n  return 0;\n}\n\n// returns bit length of the integer x\nfunction nbits(x) {\n  var r = 1, t;\n  if((t=x>>>16) != 0) { x = t; r += 16; }\n  if((t=x>>8) != 0) { x = t; r += 8; }\n  if((t=x>>4) != 0) { x = t; r += 4; }\n  if((t=x>>2) != 0) { x = t; r += 2; }\n  if((t=x>>1) != 0) { x = t; r += 1; }\n  return r;\n}\n\n// (public) return the number of bits in \"this\"\nfunction bnBitLength() {\n  if(this.t <= 0) return 0;\n  return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));\n}\n\n// (protected) r = this << n*DB\nfunction bnpDLShiftTo(n,r) {\n  var i;\n  for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];\n  for(i = n-1; i >= 0; --i) r[i] = 0;\n  r.t = this.t+n;\n  r.s = this.s;\n}\n\n// (protected) r = this >> n*DB\nfunction bnpDRShiftTo(n,r) {\n  for(var i = n; i < this.t; ++i) r[i-n] = this[i];\n  r.t = Math.max(this.t-n,0);\n  r.s = this.s;\n}\n\n// (protected) r = this << n\nfunction bnpLShiftTo(n,r) {\n  var bs = n%this.DB;\n  var cbs = this.DB-bs;\n  var bm = (1<<cbs)-1;\n  var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;\n  for(i = this.t-1; i >= 0; --i) {\n    r[i+ds+1] = (this[i]>>cbs)|c;\n    c = (this[i]&bm)<<bs;\n  }\n  for(i = ds-1; i >= 0; --i) r[i] = 0;\n  r[ds] = c;\n  r.t = this.t+ds+1;\n  r.s = this.s;\n  r.clamp();\n}\n\n// (protected) r = this >> n\nfunction bnpRShiftTo(n,r) {\n  r.s = this.s;\n  var ds = Math.floor(n/this.DB);\n  if(ds >= this.t) { r.t = 0; return; }\n  var bs = n%this.DB;\n  var cbs = this.DB-bs;\n  var bm = (1<<bs)-1;\n  r[0] = this[ds]>>bs;\n  for(var i = ds+1; i < this.t; ++i) {\n    r[i-ds-1] |= (this[i]&bm)<<cbs;\n    r[i-ds] = this[i]>>bs;\n  }\n  if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;\n  r.t = this.t-ds;\n  r.clamp();\n}\n\n// (protected) r = this - a\nfunction bnpSubTo(a,r) {\n  var i = 0, c = 0, m = Math.min(a.t,this.t);\n  while(i < m) {\n    c += this[i]-a[i];\n    r[i++] = c&this.DM;\n    c >>= this.DB;\n  }\n  if(a.t < this.t) {\n    c -= a.s;\n    while(i < this.t) {\n      c += this[i];\n      r[i++] = c&this.DM;\n      c >>= this.DB;\n    }\n    c += this.s;\n  }\n  else {\n    c += this.s;\n    while(i < a.t) {\n      c -= a[i];\n      r[i++] = c&this.DM;\n      c >>= this.DB;\n    }\n    c -= a.s;\n  }\n  r.s = (c<0)?-1:0;\n  if(c < -1) r[i++] = this.DV+c;\n  else if(c > 0) r[i++] = c;\n  r.t = i;\n  r.clamp();\n}\n\n// (protected) r = this * a, r != this,a (HAC 14.12)\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyTo(a,r) {\n  var x = this.abs(), y = a.abs();\n  var i = x.t;\n  r.t = i+y.t;\n  while(--i >= 0) r[i] = 0;\n  for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);\n  r.s = 0;\n  r.clamp();\n  if(this.s != a.s) BigInteger.ZERO.subTo(r,r);\n}\n\n// (protected) r = this^2, r != this (HAC 14.16)\nfunction bnpSquareTo(r) {\n  var x = this.abs();\n  var i = r.t = 2*x.t;\n  while(--i >= 0) r[i] = 0;\n  for(i = 0; i < x.t-1; ++i) {\n    var c = x.am(i,x[i],r,2*i,0,1);\n    if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {\n      r[i+x.t] -= x.DV;\n      r[i+x.t+1] = 1;\n    }\n  }\n  if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);\n  r.s = 0;\n  r.clamp();\n}\n\n// (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n// r != q, this != m.  q or r may be null.\nfunction bnpDivRemTo(m,q,r) {\n  var pm = m.abs();\n  if(pm.t <= 0) return;\n  var pt = this.abs();\n  if(pt.t < pm.t) {\n    if(q != null) q.fromInt(0);\n    if(r != null) this.copyTo(r);\n    return;\n  }\n  if(r == null) r = nbi();\n  var y = nbi(), ts = this.s, ms = m.s;\n  var nsh = this.DB-nbits(pm[pm.t-1]);  // normalize modulus\n  if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }\n  else { pm.copyTo(y); pt.copyTo(r); }\n  var ys = y.t;\n  var y0 = y[ys-1];\n  if(y0 == 0) return;\n  var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);\n  var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;\n  var i = r.t, j = i-ys, t = (q==null)?nbi():q;\n  y.dlShiftTo(j,t);\n  if(r.compareTo(t) >= 0) {\n    r[r.t++] = 1;\n    r.subTo(t,r);\n  }\n  BigInteger.ONE.dlShiftTo(ys,t);\n  t.subTo(y,y); // \"negative\" y so we can replace sub with am later\n  while(y.t < ys) y[y.t++] = 0;\n  while(--j >= 0) {\n    // Estimate quotient digit\n    var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);\n    if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {  // Try it out\n      y.dlShiftTo(j,t);\n      r.subTo(t,r);\n      while(r[i] < --qd) r.subTo(t,r);\n    }\n  }\n  if(q != null) {\n    r.drShiftTo(ys,q);\n    if(ts != ms) BigInteger.ZERO.subTo(q,q);\n  }\n  r.t = ys;\n  r.clamp();\n  if(nsh > 0) r.rShiftTo(nsh,r);  // Denormalize remainder\n  if(ts < 0) BigInteger.ZERO.subTo(r,r);\n}\n\n// (public) this mod a\nfunction bnMod(a) {\n  var r = nbi();\n  this.abs().divRemTo(a,null,r);\n  if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);\n  return r;\n}\n\n// Modular reduction using \"classic\" algorithm\nfunction Classic(m) { this.m = m; }\nfunction cConvert(x) {\n  if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);\n  else return x;\n}\nfunction cRevert(x) { return x; }\nfunction cReduce(x) { x.divRemTo(this.m,null,x); }\nfunction cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\nfunction cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\nClassic.prototype.convert = cConvert;\nClassic.prototype.revert = cRevert;\nClassic.prototype.reduce = cReduce;\nClassic.prototype.mulTo = cMulTo;\nClassic.prototype.sqrTo = cSqrTo;\n\n// (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n// justification:\n//         xy == 1 (mod m)\n//         xy =  1+km\n//   xy(2-xy) = (1+km)(1-km)\n// x[y(2-xy)] = 1-k^2m^2\n// x[y(2-xy)] == 1 (mod m^2)\n// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n// JS multiply \"overflows\" differently from C/C++, so care is needed here.\nfunction bnpInvDigit() {\n  if(this.t < 1) return 0;\n  var x = this[0];\n  if((x&1) == 0) return 0;\n  var y = x&3;    // y == 1/x mod 2^2\n  y = (y*(2-(x&0xf)*y))&0xf;  // y == 1/x mod 2^4\n  y = (y*(2-(x&0xff)*y))&0xff;  // y == 1/x mod 2^8\n  y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff; // y == 1/x mod 2^16\n  // last step - calculate inverse mod DV directly;\n  // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n  y = (y*(2-x*y%this.DV))%this.DV;    // y == 1/x mod 2^dbits\n  // we really want the negative inverse, and -DV < y < DV\n  return (y>0)?this.DV-y:-y;\n}\n\n// Montgomery reduction\nfunction Montgomery(m) {\n  this.m = m;\n  this.mp = m.invDigit();\n  this.mpl = this.mp&0x7fff;\n  this.mph = this.mp>>15;\n  this.um = (1<<(m.DB-15))-1;\n  this.mt2 = 2*m.t;\n}\n\n// xR mod m\nfunction montConvert(x) {\n  var r = nbi();\n  x.abs().dlShiftTo(this.m.t,r);\n  r.divRemTo(this.m,null,r);\n  if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);\n  return r;\n}\n\n// x/R mod m\nfunction montRevert(x) {\n  var r = nbi();\n  x.copyTo(r);\n  this.reduce(r);\n  return r;\n}\n\n// x = x/R mod m (HAC 14.32)\nfunction montReduce(x) {\n  while(x.t <= this.mt2)  // pad x so am has enough room later\n    x[x.t++] = 0;\n  for(var i = 0; i < this.m.t; ++i) {\n    // faster way of calculating u0 = x[i]*mp mod DV\n    var j = x[i]&0x7fff;\n    var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;\n    // use am to combine the multiply-shift-add into one call\n    j = i+this.m.t;\n    x[j] += this.m.am(0,u0,x,i,0,this.m.t);\n    // propagate carry\n    while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }\n  }\n  x.clamp();\n  x.drShiftTo(this.m.t,x);\n  if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n}\n\n// r = \"x^2/R mod m\"; x != r\nfunction montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n// r = \"xy/R mod m\"; x,y != r\nfunction montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\nMontgomery.prototype.convert = montConvert;\nMontgomery.prototype.revert = montRevert;\nMontgomery.prototype.reduce = montReduce;\nMontgomery.prototype.mulTo = montMulTo;\nMontgomery.prototype.sqrTo = montSqrTo;\n\n// (protected) true iff this is even\nfunction bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }\n\n// (protected) this^e, e < 2^32, doing sqr and mul with \"r\" (HAC 14.79)\nfunction bnpExp(e,z) {\n  if(e > 0xffffffff || e < 1) return BigInteger.ONE;\n  var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;\n  g.copyTo(r);\n  while(--i >= 0) {\n    z.sqrTo(r,r2);\n    if((e&(1<<i)) > 0) z.mulTo(r2,g,r);\n    else { var t = r; r = r2; r2 = t; }\n  }\n  return z.revert(r);\n}\n\n// (public) this^e % m, 0 <= e < 2^32\nfunction bnModPowInt(e,m) {\n  var z;\n  if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);\n  return this.exp(e,z);\n}\n\n// protected\nBigInteger.prototype.copyTo = bnpCopyTo;\nBigInteger.prototype.fromInt = bnpFromInt;\nBigInteger.prototype.fromString = bnpFromString;\nBigInteger.prototype.clamp = bnpClamp;\nBigInteger.prototype.dlShiftTo = bnpDLShiftTo;\nBigInteger.prototype.drShiftTo = bnpDRShiftTo;\nBigInteger.prototype.lShiftTo = bnpLShiftTo;\nBigInteger.prototype.rShiftTo = bnpRShiftTo;\nBigInteger.prototype.subTo = bnpSubTo;\nBigInteger.prototype.multiplyTo = bnpMultiplyTo;\nBigInteger.prototype.squareTo = bnpSquareTo;\nBigInteger.prototype.divRemTo = bnpDivRemTo;\nBigInteger.prototype.invDigit = bnpInvDigit;\nBigInteger.prototype.isEven = bnpIsEven;\nBigInteger.prototype.exp = bnpExp;\n\n// public\nBigInteger.prototype.toString = bnToString;\nBigInteger.prototype.negate = bnNegate;\nBigInteger.prototype.abs = bnAbs;\nBigInteger.prototype.compareTo = bnCompareTo;\nBigInteger.prototype.bitLength = bnBitLength;\nBigInteger.prototype.mod = bnMod;\nBigInteger.prototype.modPowInt = bnModPowInt;\n\n// \"constants\"\nBigInteger.ZERO = nbv(0);\nBigInteger.ONE = nbv(1);\n\n\n\n// Copyright (c) 2005-2009  Tom Wu\n// All Rights Reserved.\n// See \"LICENSE\" for details.\n\n// Extended JavaScript BN functions, required for RSA private ops.\n\n// Version 1.1: new BigInteger(\"0\", 10) returns \"proper\" zero\n// Version 1.2: square() API, isProbablePrime fix\n\n// (public)\nfunction bnClone() { var r = nbi(); this.copyTo(r); return r; }\n\n// (public) return value as integer\nfunction bnIntValue() {\n  if(this.s < 0) {\n    if(this.t == 1) return this[0]-this.DV;\n    else if(this.t == 0) return -1;\n  }\n  else if(this.t == 1) return this[0];\n  else if(this.t == 0) return 0;\n  // assumes 16 < DB < 32\n  return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];\n}\n\n// (public) return value as byte\nfunction bnByteValue() { return (this.t==0)?this.s:(this[0]<<24)>>24; }\n\n// (public) return value as short (assumes DB>=16)\nfunction bnShortValue() { return (this.t==0)?this.s:(this[0]<<16)>>16; }\n\n// (protected) return x s.t. r^x < DV\nfunction bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }\n\n// (public) 0 if this == 0, 1 if this > 0\nfunction bnSigNum() {\n  if(this.s < 0) return -1;\n  else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;\n  else return 1;\n}\n\n// (protected) convert to radix string\nfunction bnpToRadix(b) {\n  if(b == null) b = 10;\n  if(this.signum() == 0 || b < 2 || b > 36) return \"0\";\n  var cs = this.chunkSize(b);\n  var a = Math.pow(b,cs);\n  var d = nbv(a), y = nbi(), z = nbi(), r = \"\";\n  this.divRemTo(d,y,z);\n  while(y.signum() > 0) {\n    r = (a+z.intValue()).toString(b).substr(1) + r;\n    y.divRemTo(d,y,z);\n  }\n  return z.intValue().toString(b) + r;\n}\n\n// (protected) convert from radix string\nfunction bnpFromRadix(s,b) {\n  this.fromInt(0);\n  if(b == null) b = 10;\n  var cs = this.chunkSize(b);\n  var d = Math.pow(b,cs), mi = false, j = 0, w = 0;\n  for(var i = 0; i < s.length; ++i) {\n    var x = intAt(s,i);\n    if(x < 0) {\n      if(s.charAt(i) == \"-\" && this.signum() == 0) mi = true;\n      continue;\n    }\n    w = b*w+x;\n    if(++j >= cs) {\n      this.dMultiply(d);\n      this.dAddOffset(w,0);\n      j = 0;\n      w = 0;\n    }\n  }\n  if(j > 0) {\n    this.dMultiply(Math.pow(b,j));\n    this.dAddOffset(w,0);\n  }\n  if(mi) BigInteger.ZERO.subTo(this,this);\n}\n\n// (protected) alternate constructor\nfunction bnpFromNumber(a,b,c) {\n  if(\"number\" == typeof b) {\n    // new BigInteger(int,int,RNG)\n    if(a < 2) this.fromInt(1);\n    else {\n      this.fromNumber(a,c);\n      if(!this.testBit(a-1))  // force MSB set\n        this.bitwiseTo(BigInteger.ONE.shiftLeft(a-1),op_or,this);\n      if(this.isEven()) this.dAddOffset(1,0); // force odd\n      while(!this.isProbablePrime(b)) {\n        this.dAddOffset(2,0);\n        if(this.bitLength() > a) this.subTo(BigInteger.ONE.shiftLeft(a-1),this);\n      }\n    }\n  }\n  else {\n    // new BigInteger(int,RNG)\n    var x = new Array(), t = a&7;\n    x.length = (a>>3)+1;\n    b.nextBytes(x);\n    if(t > 0) x[0] &= ((1<<t)-1); else x[0] = 0;\n    this.fromString(x,256);\n  }\n}\n\n// (public) convert to bigendian byte array\nfunction bnToByteArray(signed) {\n  var i = this.t, r = new Array();\n  r[0] = this.s;\n  var p = this.DB-(i*this.DB)%8, d, k = 0;\n  if(i-- > 0) {\n    if(p < this.DB && (d = this[i]>>p) != (this.s&this.DM)>>p)\n      r[k++] = d|(this.s<<(this.DB-p));\n    while(i >= 0) {\n      if(p < 8) {\n        d = (this[i]&((1<<p)-1))<<(8-p);\n        d |= this[--i]>>(p+=this.DB-8);\n      }\n      else {\n        d = (this[i]>>(p-=8))&0xff;\n        if(p <= 0) { p += this.DB; --i; }\n      }\n      if(signed && (d&0x80) != 0) d |= -256;\n      if(k == 0 && (this.s&0x80) != (d&0x80)) ++k;\n      if(k > 0 || d != this.s) r[k++] = d;\n    }\n  }\n  return r;\n}\n\nfunction bnEquals(a) { return(this.compareTo(a)==0); }\nfunction bnMin(a) { return(this.compareTo(a)<0)?this:a; }\nfunction bnMax(a) { return(this.compareTo(a)>0)?this:a; }\n\n// (protected) r = this op a (bitwise)\nfunction bnpBitwiseTo(a,op,r) {\n  var i, f, m = Math.min(a.t,this.t);\n  for(i = 0; i < m; ++i) r[i] = op(this[i],a[i]);\n  if(a.t < this.t) {\n    f = a.s&this.DM;\n    for(i = m; i < this.t; ++i) r[i] = op(this[i],f);\n    r.t = this.t;\n  }\n  else {\n    f = this.s&this.DM;\n    for(i = m; i < a.t; ++i) r[i] = op(f,a[i]);\n    r.t = a.t;\n  }\n  r.s = op(this.s,a.s);\n  r.clamp();\n}\n\n// (public) this & a\nfunction op_and(x,y) { return x&y; }\nfunction bnAnd(a) { var r = nbi(); this.bitwiseTo(a,op_and,r); return r; }\n\n// (public) this | a\nfunction op_or(x,y) { return x|y; }\nfunction bnOr(a) { var r = nbi(); this.bitwiseTo(a,op_or,r); return r; }\n\n// (public) this ^ a\nfunction op_xor(x,y) { return x^y; }\nfunction bnXor(a) { var r = nbi(); this.bitwiseTo(a,op_xor,r); return r; }\n\n// (public) this & ~a\nfunction op_andnot(x,y) { return x&~y; }\nfunction bnAndNot(a) { var r = nbi(); this.bitwiseTo(a,op_andnot,r); return r; }\n\n// (public) ~this\nfunction bnNot() {\n  var r = nbi();\n  for(var i = 0; i < this.t; ++i) r[i] = this.DM&~this[i];\n  r.t = this.t;\n  r.s = ~this.s;\n  return r;\n}\n\n// (public) this << n\nfunction bnShiftLeft(n) {\n  var r = nbi();\n  if(n < 0) this.rShiftTo(-n,r); else this.lShiftTo(n,r);\n  return r;\n}\n\n// (public) this >> n\nfunction bnShiftRight(n) {\n  var r = nbi();\n  if(n < 0) this.lShiftTo(-n,r); else this.rShiftTo(n,r);\n  return r;\n}\n\n// return index of lowest 1-bit in x, x < 2^31\nfunction lbit(x) {\n  if(x == 0) return -1;\n  var r = 0;\n  if((x&0xffff) == 0) { x >>= 16; r += 16; }\n  if((x&0xff) == 0) { x >>= 8; r += 8; }\n  if((x&0xf) == 0) { x >>= 4; r += 4; }\n  if((x&3) == 0) { x >>= 2; r += 2; }\n  if((x&1) == 0) ++r;\n  return r;\n}\n\n// (public) returns index of lowest 1-bit (or -1 if none)\nfunction bnGetLowestSetBit() {\n  for(var i = 0; i < this.t; ++i)\n    if(this[i] != 0) return i*this.DB+lbit(this[i]);\n  if(this.s < 0) return this.t*this.DB;\n  return -1;\n}\n\n// return number of 1 bits in x\nfunction cbit(x) {\n  var r = 0;\n  while(x != 0) { x &= x-1; ++r; }\n  return r;\n}\n\n// (public) return number of set bits\nfunction bnBitCount() {\n  var r = 0, x = this.s&this.DM;\n  for(var i = 0; i < this.t; ++i) r += cbit(this[i]^x);\n  return r;\n}\n\n// (public) true iff nth bit is set\nfunction bnTestBit(n) {\n  var j = Math.floor(n/this.DB);\n  if(j >= this.t) return(this.s!=0);\n  return((this[j]&(1<<(n%this.DB)))!=0);\n}\n\n// (protected) this op (1<<n)\nfunction bnpChangeBit(n,op) {\n  var r = BigInteger.ONE.shiftLeft(n);\n  this.bitwiseTo(r,op,r);\n  return r;\n}\n\n// (public) this | (1<<n)\nfunction bnSetBit(n) { return this.changeBit(n,op_or); }\n\n// (public) this & ~(1<<n)\nfunction bnClearBit(n) { return this.changeBit(n,op_andnot); }\n\n// (public) this ^ (1<<n)\nfunction bnFlipBit(n) { return this.changeBit(n,op_xor); }\n\n// (protected) r = this + a\nfunction bnpAddTo(a,r) {\n  var i = 0, c = 0, m = Math.min(a.t,this.t);\n  while(i < m) {\n    c += this[i]+a[i];\n    r[i++] = c&this.DM;\n    c >>= this.DB;\n  }\n  if(a.t < this.t) {\n    c += a.s;\n    while(i < this.t) {\n      c += this[i];\n      r[i++] = c&this.DM;\n      c >>= this.DB;\n    }\n    c += this.s;\n  }\n  else {\n    c += this.s;\n    while(i < a.t) {\n      c += a[i];\n      r[i++] = c&this.DM;\n      c >>= this.DB;\n    }\n    c += a.s;\n  }\n  r.s = (c<0)?-1:0;\n  if(c > 0) r[i++] = c;\n  else if(c < -1) r[i++] = this.DV+c;\n  r.t = i;\n  r.clamp();\n}\n\n// (public) this + a\nfunction bnAdd(a) { var r = nbi(); this.addTo(a,r); return r; }\n\n// (public) this - a\nfunction bnSubtract(a) { var r = nbi(); this.subTo(a,r); return r; }\n\n// (public) this * a\nfunction bnMultiply(a) { var r = nbi(); this.multiplyTo(a,r); return r; }\n\n// (public) this^2\nfunction bnSquare() { var r = nbi(); this.squareTo(r); return r; }\n\n// (public) this / a\nfunction bnDivide(a) { var r = nbi(); this.divRemTo(a,r,null); return r; }\n\n// (public) this % a\nfunction bnRemainder(a) { var r = nbi(); this.divRemTo(a,null,r); return r; }\n\n// (public) [this/a,this%a]\nfunction bnDivideAndRemainder(a) {\n  var q = nbi(), r = nbi();\n  this.divRemTo(a,q,r);\n  return new Array(q,r);\n}\n\n// (protected) this *= n, this >= 0, 1 < n < DV\nfunction bnpDMultiply(n) {\n  this[this.t] = this.am(0,n-1,this,0,0,this.t);\n  ++this.t;\n  this.clamp();\n}\n\n// (protected) this += n << w words, this >= 0\nfunction bnpDAddOffset(n,w) {\n  if(n == 0) return;\n  while(this.t <= w) this[this.t++] = 0;\n  this[w] += n;\n  while(this[w] >= this.DV) {\n    this[w] -= this.DV;\n    if(++w >= this.t) this[this.t++] = 0;\n    ++this[w];\n  }\n}\n\n// A \"null\" reducer\nfunction NullExp() {}\nfunction nNop(x) { return x; }\nfunction nMulTo(x,y,r) { x.multiplyTo(y,r); }\nfunction nSqrTo(x,r) { x.squareTo(r); }\n\nNullExp.prototype.convert = nNop;\nNullExp.prototype.revert = nNop;\nNullExp.prototype.mulTo = nMulTo;\nNullExp.prototype.sqrTo = nSqrTo;\n\n// (public) this^e\nfunction bnPow(e) { return this.exp(e,new NullExp()); }\n\n// (protected) r = lower n words of \"this * a\", a.t <= n\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyLowerTo(a,n,r) {\n  var i = Math.min(this.t+a.t,n);\n  r.s = 0; // assumes a,this >= 0\n  r.t = i;\n  while(i > 0) r[--i] = 0;\n  var j;\n  for(j = r.t-this.t; i < j; ++i) r[i+this.t] = this.am(0,a[i],r,i,0,this.t);\n  for(j = Math.min(a.t,n); i < j; ++i) this.am(0,a[i],r,i,0,n-i);\n  r.clamp();\n}\n\n// (protected) r = \"this * a\" without lower n words, n > 0\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyUpperTo(a,n,r) {\n  --n;\n  var i = r.t = this.t+a.t-n;\n  r.s = 0; // assumes a,this >= 0\n  while(--i >= 0) r[i] = 0;\n  for(i = Math.max(n-this.t,0); i < a.t; ++i)\n    r[this.t+i-n] = this.am(n-i,a[i],r,0,0,this.t+i-n);\n  r.clamp();\n  r.drShiftTo(1,r);\n}\n\n// Barrett modular reduction\nfunction Barrett(m) {\n  // setup Barrett\n  this.r2 = nbi();\n  this.q3 = nbi();\n  BigInteger.ONE.dlShiftTo(2*m.t,this.r2);\n  this.mu = this.r2.divide(m);\n  this.m = m;\n}\n\nfunction barrettConvert(x) {\n  if(x.s < 0 || x.t > 2*this.m.t) return x.mod(this.m);\n  else if(x.compareTo(this.m) < 0) return x;\n  else { var r = nbi(); x.copyTo(r); this.reduce(r); return r; }\n}\n\nfunction barrettRevert(x) { return x; }\n\n// x = x mod m (HAC 14.42)\nfunction barrettReduce(x) {\n  x.drShiftTo(this.m.t-1,this.r2);\n  if(x.t > this.m.t+1) { x.t = this.m.t+1; x.clamp(); }\n  this.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3);\n  this.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);\n  while(x.compareTo(this.r2) < 0) x.dAddOffset(1,this.m.t+1);\n  x.subTo(this.r2,x);\n  while(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n}\n\n// r = x^2 mod m; x != r\nfunction barrettSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n// r = x*y mod m; x,y != r\nfunction barrettMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\nBarrett.prototype.convert = barrettConvert;\nBarrett.prototype.revert = barrettRevert;\nBarrett.prototype.reduce = barrettReduce;\nBarrett.prototype.mulTo = barrettMulTo;\nBarrett.prototype.sqrTo = barrettSqrTo;\n\n// (public) this^e % m (HAC 14.85)\nfunction bnModPow(e,m) {\n  var i = e.bitLength(), k, r = nbv(1), z;\n  if(i <= 0) return r;\n  else if(i < 18) k = 1;\n  else if(i < 48) k = 3;\n  else if(i < 144) k = 4;\n  else if(i < 768) k = 5;\n  else k = 6;\n  if(i < 8)\n    z = new Classic(m);\n  else if(m.isEven())\n    z = new Barrett(m);\n  else\n    z = new Montgomery(m);\n\n  // precomputation\n  var g = new Array(), n = 3, k1 = k-1, km = (1<<k)-1;\n  g[1] = z.convert(this);\n  if(k > 1) {\n    var g2 = nbi();\n    z.sqrTo(g[1],g2);\n    while(n <= km) {\n      g[n] = nbi();\n      z.mulTo(g2,g[n-2],g[n]);\n      n += 2;\n    }\n  }\n\n  var j = e.t-1, w, is1 = true, r2 = nbi(), t;\n  i = nbits(e[j])-1;\n  while(j >= 0) {\n    if(i >= k1) w = (e[j]>>(i-k1))&km;\n    else {\n      w = (e[j]&((1<<(i+1))-1))<<(k1-i);\n      if(j > 0) w |= e[j-1]>>(this.DB+i-k1);\n    }\n\n    n = k;\n    while((w&1) == 0) { w >>= 1; --n; }\n    if((i -= n) < 0) { i += this.DB; --j; }\n    if(is1) { // ret == 1, don't bother squaring or multiplying it\n      g[w].copyTo(r);\n      is1 = false;\n    }\n    else {\n      while(n > 1) { z.sqrTo(r,r2); z.sqrTo(r2,r); n -= 2; }\n      if(n > 0) z.sqrTo(r,r2); else { t = r; r = r2; r2 = t; }\n      z.mulTo(r2,g[w],r);\n    }\n\n    while(j >= 0 && (e[j]&(1<<i)) == 0) {\n      z.sqrTo(r,r2); t = r; r = r2; r2 = t;\n      if(--i < 0) { i = this.DB-1; --j; }\n    }\n  }\n  return z.revert(r);\n}\n\n// (public) gcd(this,a) (HAC 14.54)\nfunction bnGCD(a) {\n  var x = (this.s<0)?this.negate():this.clone();\n  var y = (a.s<0)?a.negate():a.clone();\n  if(x.compareTo(y) < 0) { var t = x; x = y; y = t; }\n  var i = x.getLowestSetBit(), g = y.getLowestSetBit();\n  if(g < 0) return x;\n  if(i < g) g = i;\n  if(g > 0) {\n    x.rShiftTo(g,x);\n    y.rShiftTo(g,y);\n  }\n  while(x.signum() > 0) {\n    if((i = x.getLowestSetBit()) > 0) x.rShiftTo(i,x);\n    if((i = y.getLowestSetBit()) > 0) y.rShiftTo(i,y);\n    if(x.compareTo(y) >= 0) {\n      x.subTo(y,x);\n      x.rShiftTo(1,x);\n    }\n    else {\n      y.subTo(x,y);\n      y.rShiftTo(1,y);\n    }\n  }\n  if(g > 0) y.lShiftTo(g,y);\n  return y;\n}\n\n// (protected) this % n, n < 2^26\nfunction bnpModInt(n) {\n  if(n <= 0) return 0;\n  var d = this.DV%n, r = (this.s<0)?n-1:0;\n  if(this.t > 0)\n    if(d == 0) r = this[0]%n;\n    else for(var i = this.t-1; i >= 0; --i) r = (d*r+this[i])%n;\n  return r;\n}\n\n// (public) 1/this % m (HAC 14.61)\nfunction bnModInverse(m) {\n  var ac = m.isEven();\n  if((this.isEven() && ac) || m.signum() == 0) return BigInteger.ZERO;\n  var u = m.clone(), v = this.clone();\n  var a = nbv(1), b = nbv(0), c = nbv(0), d = nbv(1);\n  while(u.signum() != 0) {\n    while(u.isEven()) {\n      u.rShiftTo(1,u);\n      if(ac) {\n        if(!a.isEven() || !b.isEven()) { a.addTo(this,a); b.subTo(m,b); }\n        a.rShiftTo(1,a);\n      }\n      else if(!b.isEven()) b.subTo(m,b);\n      b.rShiftTo(1,b);\n    }\n    while(v.isEven()) {\n      v.rShiftTo(1,v);\n      if(ac) {\n        if(!c.isEven() || !d.isEven()) { c.addTo(this,c); d.subTo(m,d); }\n        c.rShiftTo(1,c);\n      }\n      else if(!d.isEven()) d.subTo(m,d);\n      d.rShiftTo(1,d);\n    }\n    if(u.compareTo(v) >= 0) {\n      u.subTo(v,u);\n      if(ac) a.subTo(c,a);\n      b.subTo(d,b);\n    }\n    else {\n      v.subTo(u,v);\n      if(ac) c.subTo(a,c);\n      d.subTo(b,d);\n    }\n  }\n  if(v.compareTo(BigInteger.ONE) != 0) return BigInteger.ZERO;\n  if(d.compareTo(m) >= 0) return d.subtract(m);\n  if(d.signum() < 0) d.addTo(m,d); else return d;\n  if(d.signum() < 0) return d.add(m); else return d;\n}\n\nvar lowprimes = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997];\nvar lplim = (1<<26)/lowprimes[lowprimes.length-1];\n\n// (public) test primality with certainty >= 1-.5^t\nfunction bnIsProbablePrime(t) {\n  var i, x = this.abs();\n  if(x.t == 1 && x[0] <= lowprimes[lowprimes.length-1]) {\n    for(i = 0; i < lowprimes.length; ++i)\n      if(x[0] == lowprimes[i]) return true;\n    return false;\n  }\n  if(x.isEven()) return false;\n  i = 1;\n  while(i < lowprimes.length) {\n    var m = lowprimes[i], j = i+1;\n    while(j < lowprimes.length && m < lplim) m *= lowprimes[j++];\n    m = x.modInt(m);\n    while(i < j) if(m%lowprimes[i++] == 0) return false;\n  }\n  return x.millerRabin(t);\n}\n\n// (protected) true if probably prime (HAC 4.24, Miller-Rabin)\nfunction bnpMillerRabin(t) {\n  var n1 = this.subtract(BigInteger.ONE);\n  var k = n1.getLowestSetBit();\n  if(k <= 0) return false;\n  var r = n1.shiftRight(k);\n  t = (t+1)>>1;\n  if(t > lowprimes.length) t = lowprimes.length;\n  var a = nbi();\n  for(var i = 0; i < t; ++i) {\n    //Pick bases at random, instead of starting at 2\n    a.fromInt(lowprimes[Math.floor(Math.random()*lowprimes.length)]);\n    var y = a.modPow(r,this);\n    if(y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {\n      var j = 1;\n      while(j++ < k && y.compareTo(n1) != 0) {\n        y = y.modPowInt(2,this);\n        if(y.compareTo(BigInteger.ONE) == 0) return false;\n      }\n      if(y.compareTo(n1) != 0) return false;\n    }\n  }\n  return true;\n}\n\n// protected\nBigInteger.prototype.chunkSize = bnpChunkSize;\nBigInteger.prototype.toRadix = bnpToRadix;\nBigInteger.prototype.fromRadix = bnpFromRadix;\nBigInteger.prototype.fromNumber = bnpFromNumber;\nBigInteger.prototype.bitwiseTo = bnpBitwiseTo;\nBigInteger.prototype.changeBit = bnpChangeBit;\nBigInteger.prototype.addTo = bnpAddTo;\nBigInteger.prototype.dMultiply = bnpDMultiply;\nBigInteger.prototype.dAddOffset = bnpDAddOffset;\nBigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;\nBigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;\nBigInteger.prototype.modInt = bnpModInt;\nBigInteger.prototype.millerRabin = bnpMillerRabin;\n\n// public\nBigInteger.prototype.clone = bnClone;\nBigInteger.prototype.intValue = bnIntValue;\nBigInteger.prototype.byteValue = bnByteValue;\nBigInteger.prototype.shortValue = bnShortValue;\nBigInteger.prototype.signum = bnSigNum;\nBigInteger.prototype.toByteArray = bnToByteArray;\nBigInteger.prototype.equals = bnEquals;\nBigInteger.prototype.min = bnMin;\nBigInteger.prototype.max = bnMax;\nBigInteger.prototype.and = bnAnd;\nBigInteger.prototype.or = bnOr;\nBigInteger.prototype.xor = bnXor;\nBigInteger.prototype.andNot = bnAndNot;\nBigInteger.prototype.not = bnNot;\nBigInteger.prototype.shiftLeft = bnShiftLeft;\nBigInteger.prototype.shiftRight = bnShiftRight;\nBigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;\nBigInteger.prototype.bitCount = bnBitCount;\nBigInteger.prototype.testBit = bnTestBit;\nBigInteger.prototype.setBit = bnSetBit;\nBigInteger.prototype.clearBit = bnClearBit;\nBigInteger.prototype.flipBit = bnFlipBit;\nBigInteger.prototype.add = bnAdd;\nBigInteger.prototype.subtract = bnSubtract;\nBigInteger.prototype.multiply = bnMultiply;\nBigInteger.prototype.divide = bnDivide;\nBigInteger.prototype.remainder = bnRemainder;\nBigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;\nBigInteger.prototype.modPow = bnModPow;\nBigInteger.prototype.modInverse = bnModInverse;\nBigInteger.prototype.pow = bnPow;\nBigInteger.prototype.gcd = bnGCD;\nBigInteger.prototype.isProbablePrime = bnIsProbablePrime;\n\n// JSBN-specific extension\nBigInteger.prototype.square = bnSquare;\n\n// BigInteger interfaces not implemented in jsbn:\n\n// BigInteger(int signum, byte[] magnitude)\n// double doubleValue()\n// float floatValue()\n// int hashCode()\n// long longValue()\n// static BigInteger valueOf(long val)\n\n\n\n\n\n// Random number generator - requires a PRNG backend, e.g. prng4.js\n\n// For best results, put code like\n// <body onClick='rng_seed_time();' onKeyPress='rng_seed_time();'>\n// in your main HTML document.\n\nvar rng_state;\nvar rng_pool;\nvar rng_pptr;\n\n// Mix in a 32-bit integer into the pool\nfunction rng_seed_int(x) {\n  rng_pool[rng_pptr++] ^= x & 255;\n  rng_pool[rng_pptr++] ^= (x >> 8) & 255;\n  rng_pool[rng_pptr++] ^= (x >> 16) & 255;\n  rng_pool[rng_pptr++] ^= (x >> 24) & 255;\n  if(rng_pptr >= rng_psize) rng_pptr -= rng_psize;\n}\n\n// Mix in the current time (w/milliseconds) into the pool\nfunction rng_seed_time() {\n  rng_seed_int(new Date().getTime());\n}\n\n// Initialize the pool with junk if needed.\nif(rng_pool == null) {\n  rng_pool = new Array();\n  rng_pptr = 0;\n  var global = typeof window !== 'undefined' ? window : this;\n  var t;\n  if (global && global.crypto && global.crypto.getRandomValues) {\n    // Use webcrypto if available\n    var ua = new Uint8Array(32);\n    global.crypto.getRandomValues(ua);\n    for(t = 0; t < 32; ++t)\n      rng_pool[rng_pptr++] = ua[t];\n  }\n  if(navigator.appName == \"Netscape\" && navigator.appVersion < \"5\" && global && global.crypto) {\n    // Extract entropy (256 bits) from NS4 RNG if available\n    var z = global.crypto.random(32);\n    for(t = 0; t < z.length; ++t)\n      rng_pool[rng_pptr++] = z.charCodeAt(t) & 255;\n  }\n  while(rng_pptr < rng_psize) {  // extract some randomness from Math.random()\n    t = Math.floor(65536 * Math.random());\n    rng_pool[rng_pptr++] = t >>> 8;\n    rng_pool[rng_pptr++] = t & 255;\n  }\n  rng_pptr = 0;\n  rng_seed_time();\n  //rng_seed_int(window.screenX);\n  //rng_seed_int(window.screenY);\n}\n\nfunction rng_get_byte() {\n  if(rng_state == null) {\n    rng_seed_time();\n    rng_state = prng_newstate();\n    rng_state.init(rng_pool);\n    for(rng_pptr = 0; rng_pptr < rng_pool.length; ++rng_pptr)\n      rng_pool[rng_pptr] = 0;\n    rng_pptr = 0;\n    //rng_pool = null;\n  }\n  // TODO: allow reseeding after first request\n  return rng_state.next();\n}\n\nfunction rng_get_bytes(ba) {\n  var i;\n  for(i = 0; i < ba.length; ++i) ba[i] = rng_get_byte();\n}\n\nexport function SecureRandom() {}\n\nSecureRandom.prototype.nextBytes = rng_get_bytes;\n\n// prng4.js - uses Arcfour as a PRNG\n\nfunction Arcfour() {\n  this.i = 0;\n  this.j = 0;\n  this.S = new Array();\n}\n\n// Initialize arcfour context from key, an array of ints, each from [0..255]\nfunction ARC4init(key) {\n  var i, j, t;\n  for(i = 0; i < 256; ++i)\n    this.S[i] = i;\n  j = 0;\n  for(i = 0; i < 256; ++i) {\n    j = (j + this.S[i] + key[i % key.length]) & 255;\n    t = this.S[i];\n    this.S[i] = this.S[j];\n    this.S[j] = t;\n  }\n  this.i = 0;\n  this.j = 0;\n}\n\nfunction ARC4next() {\n  var t;\n  this.i = (this.i + 1) & 255;\n  this.j = (this.j + this.S[this.i]) & 255;\n  t = this.S[this.i];\n  this.S[this.i] = this.S[this.j];\n  this.S[this.j] = t;\n  return this.S[(t + this.S[this.i]) & 255];\n}\n\nArcfour.prototype.init = ARC4init;\nArcfour.prototype.next = ARC4next;\n\n// Plug in your RNG constructor here\nfunction prng_newstate() {\n  return new Arcfour();\n}\n\n// Pool size must be a multiple of 4 and greater than 32.\n// An array of bytes the size of the pool will be passed to init()\nvar rng_psize = 256;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Utils/bigNumbers.js","module.exports = __WEBPACK_EXTERNAL_MODULE_12__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"crypto-js\"\n// module id = 12\n// module chunks = 0","'use strict';\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction adler32(adler, buf, len, pos) {\n  var s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n}\n\n\nmodule.exports = adler32;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pako/lib/zlib/adler32.js\n// module id = 13\n// module chunks = 0","'use strict';\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nfunction makeTable() {\n  var c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n}\n\n// Create table on load. Just 255 signed longs. Not a problem.\nvar crcTable = makeTable();\n\n\nfunction crc32(crc, buf, len, pos) {\n  var t = crcTable,\n      end = pos + len;\n\n  crc ^= -1;\n\n  for (var i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n}\n\n\nmodule.exports = crc32;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pako/lib/zlib/crc32.js\n// module id = 14\n// module chunks = 0","// String encode/decode helpers\n'use strict';\n\n\nvar utils = require('./common');\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nvar STR_APPLY_OK = true;\nvar STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, [ 0 ]); } catch (__) { STR_APPLY_OK = false; }\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nvar _utf8len = new utils.Buf8(256);\nfor (var q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nexports.string2buf = function (str) {\n  var buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new utils.Buf8(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper (used in 2 places)\nfunction buf2binstring(buf, len) {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if ((buf.subarray && STR_APPLY_UIA_OK) || (!buf.subarray && STR_APPLY_OK)) {\n      return String.fromCharCode.apply(null, utils.shrinkBuf(buf, len));\n    }\n  }\n\n  var result = '';\n  for (var i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n}\n\n\n// Convert byte array to binary string\nexports.buf2binstring = function (buf) {\n  return buf2binstring(buf, buf.length);\n};\n\n\n// Convert binary string (typed, when possible)\nexports.binstring2buf = function (str) {\n  var buf = new utils.Buf8(str.length);\n  for (var i = 0, len = buf.length; i < len; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n};\n\n\n// convert array to string\nexports.buf2string = function (buf, max) {\n  var i, out, c, c_len;\n  var len = max || buf.length;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  var utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nexports.utf8border = function (buf, max) {\n  var pos;\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pako/lib/utils/strings.js\n// module id = 15\n// module chunks = 0","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nmodule.exports = ZStream;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pako/lib/zlib/zstream.js\n// module id = 16\n// module chunks = 0","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  //Z_MEM_ERROR:     -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pako/lib/zlib/constants.js\n// module id = 17\n// module chunks = 0","//import requestLib from 'request-promise-native'\nimport { TLSerialization, TLDeserialization } from '../TL'\nimport { MtpTimeManager, MtpDcConfigurator, MtpRsaKeysManager } from '../Mtp'\nimport {\n    BigInteger, nextRandomInt, dT, bytesToHex, bytesCmp,  pqPrimeFactorization, SecureRandom, sha1BytesSync, rsaEncrypt,\n    tsNow, aesDecryptSync, aesEncryptSync, bytesToArrayBuffer, bytesFromHex, bytesModPow, bytesXor\n} from '../Utils'\nimport { ErrorResponse } from '../Services'\nimport { networkRequest, flushSockets } from '../network'\n\nconst mtpSendPlainRequest = (dcID, requestBuffer) => new Promise((resolve, reject) => {\n    var requestLength = requestBuffer.byteLength,\n        requestArray = new Int32Array(requestBuffer)\n\n    var header = new TLSerialization()\n    header.storeLongP(0, 0, 'auth_key_id') // Auth key\n    header.storeLong(MtpTimeManager.generateID(), 'msg_id') // Msg_id\n    header.storeInt(requestLength, 'request_length')\n\n    var headerBuffer = header.getBuffer(),\n        headerArray = new Int32Array(headerBuffer)\n    var headerLength = headerBuffer.byteLength\n\n    var resultBuffer = new ArrayBuffer(headerLength + requestLength),\n        resultArray = new Int32Array(resultBuffer)\n\n    resultArray.set(headerArray)\n    resultArray.set(requestArray, headerArray.length)\n\n    var requestData = resultArray\n    var url = MtpDcConfigurator.chooseServer(dcID)\n    var baseError = { code: 406, type: 'NETWORK_BAD_RESPONSE', url: url }\n\n    networkRequest(url, dcID, resultArray).then((result) => {\n        if (!result.data || !result.data.byteLength) {\n            reject(baseError)\n        }\n\n        const deserializer = new TLDeserialization(result.data, { mtproto: true })\n        const auth_key_id = deserializer.fetchLong('auth_key_id')\n        const msg_id = deserializer.fetchLong('msg_id')\n        const msg_len = deserializer.fetchInt('msg_len')\n\n        resolve(deserializer)\n    })\n        .catch(err => { reject({ ...baseError, originalError: err }) });\n})\n\nfunction mtpSendReqPQ(auth) {\n    var deferred = auth.deferred\n\n    var request = new TLSerialization({ mtproto: true })\n\n    request.storeMethod('req_pq', { nonce: auth.nonce })\n\n    //LogService.logVerbose(`[MtpAuthorizer] mtpSendReqPQ() Send req_pq ${bytesToHex(auth.nonce)}`)\n\n    mtpSendPlainRequest(auth.dcID, request.getBuffer())\n        .then((deserializer) => {\n\n            var response = deserializer.fetchObject('ResPQ')\n\n            if (response._ != 'resPQ') {\n                throw new Error('[MT] resPQ response invalid: ' + response._)\n            }\n\n            if (!bytesCmp(auth.nonce, response.nonce)) {\n                throw new Error('[MT] resPQ nonce mismatch')\n            }\n\n            auth.serverNonce = response.server_nonce\n            auth.pq = response.pq\n            auth.fingerprints = response.server_public_key_fingerprints\n\n            //LogService.logVerbose(`[MtpAuthorizer] mtpSendReqPQ() Got ResPQ ${bytesToHex(auth.serverNonce)} ${bytesToHex(auth.pq)} ${auth.fingerprints}`)\n\n            auth.publicKey = MtpRsaKeysManager.select(auth.fingerprints)\n\n            if (!auth.publicKey) {\n                throw new Error('[MT] No public key found')\n            }\n\n            //LogService.logVerbose(`[MtpAuthorizer] mtpSendReqPQ() 'PQ factorization start ${auth.pq}`)\n\n            const pAndQ = pqPrimeFactorization(auth.pq)\n\n            if (!pAndQ) {\n                throw new Error('Error factorizing p and q')\n            }\n\n            auth.p = pAndQ[0]\n            auth.q = pAndQ[1]\n\n            //LogService.logVerbose(`[MtpAuthorizer] mtpSendReqPQ() 'PQ factorization done ${pAndQ[2]}`)\n\n            mtpSendReqDhParams(auth)\n        })\n        .catch(err => {\n            //LogService.logError(`[MtpAuthorizer] mtpSendReqPQ() ${new ErrorResponse(err)}`)\n            deferred.reject(err)\n        })\n\n    MtpRsaKeysManager.prepare()\n}\n\nfunction mtpSendReqDhParams(auth) {\n    var deferred = auth.deferred\n\n    auth.newNonce = new Array(32)\n    new SecureRandom().nextBytes(auth.newNonce)\n\n    var data = new TLSerialization({ mtproto: true })\n    data.storeObject({\n        _: 'p_q_inner_data',\n        pq: auth.pq,\n        p: auth.p,\n        q: auth.q,\n        nonce: auth.nonce,\n        server_nonce: auth.serverNonce,\n        new_nonce: auth.newNonce\n    }, 'P_Q_inner_data', 'DECRYPTED_DATA')\n\n    var dataWithHash = sha1BytesSync(data.getBuffer()).concat(data.getBytes())\n\n    var request = new TLSerialization({ mtproto: true })\n    request.storeMethod('req_DH_params', {\n        nonce: auth.nonce,\n        server_nonce: auth.serverNonce,\n        p: auth.p,\n        q: auth.q,\n        public_key_fingerprint: auth.publicKey.fingerprint,\n        encrypted_data: rsaEncrypt(auth.publicKey, dataWithHash)\n    })\n\n    //LogService.logVerbose(`[MtpAuthorizer] mtpSendReqDhParams()`)\n\n    mtpSendPlainRequest(auth.dcID, request.getBuffer()).then(function (deserializer) {\n        var response = deserializer.fetchObject('Server_DH_Params', 'RESPONSE')\n\n        if (response._ != 'server_DH_params_fail' && response._ != 'server_DH_params_ok') {\n            deferred.reject(new Error('[MT] Server_DH_Params response invalid: ' + response._))\n            return false\n        }\n\n        if (!bytesCmp(auth.nonce, response.nonce)) {\n            deferred.reject(new Error('[MT] Server_DH_Params nonce mismatch'))\n            return false\n        }\n\n        if (!bytesCmp(auth.serverNonce, response.server_nonce)) {\n            deferred.reject(new Error('[MT] Server_DH_Params server_nonce mismatch'))\n            return false\n        }\n\n        if (response._ == 'server_DH_params_fail') {\n            var newNonceHash = sha1BytesSync(auth.newNonce).slice(-16)\n            if (!bytesCmp(newNonceHash, response.new_nonce_hash)) {\n                deferred.reject(new Error('[MT] server_DH_params_fail new_nonce_hash mismatch'))\n                return false\n            }\n            deferred.reject(new Error('[MT] server_DH_params_fail'))\n            return false\n        }\n\n        try {\n            mtpDecryptServerDhDataAnswer(auth, response.encrypted_answer)\n        } catch (e) {\n            deferred.reject(e)\n            return false\n        }\n\n        mtpSendSetClientDhParams(auth)\n    }, function (error) {\n        deferred.reject(error)\n    })\n}\n\nfunction mtpDecryptServerDhDataAnswer(auth, encryptedAnswer) {\n    auth.localTime = tsNow()\n\n    auth.tmpAesKey = sha1BytesSync(auth.newNonce.concat(auth.serverNonce)).concat(sha1BytesSync(auth.serverNonce.concat(auth.newNonce)).slice(0, 12))\n    auth.tmpAesIv = sha1BytesSync(auth.serverNonce.concat(auth.newNonce)).slice(12).concat(sha1BytesSync([].concat(auth.newNonce, auth.newNonce)), auth.newNonce.slice(0, 4))\n\n    var answerWithHash = aesDecryptSync(encryptedAnswer, auth.tmpAesKey, auth.tmpAesIv)\n\n    var hash = answerWithHash.slice(0, 20)\n    var answerWithPadding = answerWithHash.slice(20)\n    var buffer = bytesToArrayBuffer(answerWithPadding)\n\n    var deserializer = new TLDeserialization(buffer, { mtproto: true })\n    var response = deserializer.fetchObject('Server_DH_inner_data')\n\n    if (response._ != 'server_DH_inner_data') {\n        throw new Error('[MT] server_DH_inner_data response invalid: ' + constructor)\n    }\n\n    if (!bytesCmp(auth.nonce, response.nonce)) {\n        throw new Error('[MT] server_DH_inner_data nonce mismatch')\n    }\n\n    if (!bytesCmp(auth.serverNonce, response.server_nonce)) {\n        throw new Error('[MT] server_DH_inner_data serverNonce mismatch')\n    }\n\n    //LogService.logVerbose(`[MtpAuthorizer] mtpDecryptServerDhDataAnswer() Done decrypting answer`)\n\n    auth.g = response.g\n    auth.dhPrime = response.dh_prime\n    auth.gA = response.g_a\n    auth.serverTime = response.server_time\n    auth.retry = 0\n\n    mtpVerifyDhParams(auth.g, auth.dhPrime, auth.gA)\n\n    var offset = deserializer.getOffset()\n\n    if (!bytesCmp(hash, sha1BytesSync(answerWithPadding.slice(0, offset)))) {\n        throw new Error('[MT] server_DH_inner_data SHA1-hash mismatch')\n    }\n\n\n    MtpTimeManager.applyServerTime(auth.serverTime, auth.localTime)\n}\n\nfunction mtpVerifyDhParams(g, dhPrime, gA) {\n    //LogService.logVerbose(`[MtpAuthorizer] mtpVerifyDhParams() Verifying DH params`)\n\n    var dhPrimeHex = bytesToHex(dhPrime)\n    if (g != 3 ||\n        dhPrimeHex !== 'c71caeb9c6b1c9048e6c522f70f13f73980d40238e3e21c14934d037563d930f48198a0aa7c14058229493d22530f4dbfa336f6e0ac925139543aed44cce7c3720fd51f69458705ac68cd4fe6b6b13abdc9746512969328454f18faf8c595f642477fe96bb2a941d5bcd1d4ac8cc49880708fa9b378e3c4f3a9060bee67cf9a4a4a695811051907e162753b56b0f6b410dba74d8a84b2a14b3144e0ef1284754fd17ed950d5965b4b9dd46582db1178d169c6bc465b0d6ff9ca3928fef5b9ae4e418fc15e83ebea0f87fa9ff5eed70050ded2849f47bf959d956850ce929851f0d8115f635b105ee2e4e15d04b2454bf6f4fadf034b10403119cd8e3b92fcc5b') {\n        // The verified value is from https://core.telegram.org/mtproto/security_guidelines\n        throw new Error('[MT] DH params are not verified: unknown dhPrime')\n    }\n\n    //LogService.logVerbose(`[MtpAuthorizer] mtpVerifyDhParams() dhPrime cmp OK`)\n\n    var gABigInt = new BigInteger(bytesToHex(gA), 16)\n    var dhPrimeBigInt = new BigInteger(dhPrimeHex, 16)\n\n    if (gABigInt.compareTo(BigInteger.ONE) <= 0) {\n        throw new Error('[MT] DH params are not verified: gA <= 1')\n    }\n\n    if (gABigInt.compareTo(dhPrimeBigInt.subtract(BigInteger.ONE)) >= 0) {\n        throw new Error('[MT] DH params are not verified: gA >= dhPrime - 1')\n    }\n\n    //LogService.logVerbose(`[MtpAuthorizer] mtpVerifyDhParams() 1 < gA < dhPrime-1 OK`)\n\n    var two = new BigInteger(null)\n    two.fromInt(2)\n    var twoPow = two.pow(2048 - 64)\n\n    if (gABigInt.compareTo(twoPow) < 0) {\n        throw new Error('[MT] DH params are not verified: gA < 2^{2048-64}')\n    }\n    if (gABigInt.compareTo(dhPrimeBigInt.subtract(twoPow)) >= 0) {\n        throw new Error('[MT] DH params are not verified: gA > dhPrime - 2^{2048-64}')\n    }\n\n    //LogService.logVerbose(`[MtpAuthorizer] mtpVerifyDhParams() 2^{2048-64} < gA < dhPrime-2^{2048-64} OK`)\n\n    return true\n}\n\nfunction mtpSendSetClientDhParams(auth) {\n    var deferred = auth.deferred\n    var gBytes = bytesFromHex(auth.g.toString(16))\n\n    auth.b = new Array(256)\n    new SecureRandom().nextBytes(auth.b)\n\n    let gB = bytesModPow(gBytes, auth.b, auth.dhPrime)\n    var data = new TLSerialization({ mtproto: true })\n    data.storeObject({\n        _: 'client_DH_inner_data',\n        nonce: auth.nonce,\n        server_nonce: auth.serverNonce,\n        retry_id: [0, auth.retry++],\n        g_b: gB\n    }, 'Client_DH_Inner_Data')\n\n    var dataWithHash = sha1BytesSync(data.getBuffer()).concat(data.getBytes())\n\n    var encryptedData = aesEncryptSync(dataWithHash, auth.tmpAesKey, auth.tmpAesIv)\n\n    var request = new TLSerialization({ mtproto: true })\n    request.storeMethod('set_client_DH_params', {\n        nonce: auth.nonce,\n        server_nonce: auth.serverNonce,\n        encrypted_data: encryptedData\n    })\n\n    //LogService.logVerbose(`[MtpAuthorizer] mtpSendSetClientDhParams() Send set_client_DH_params`)\n\n    mtpSendPlainRequest(auth.dcID, request.getBuffer()).then(function (deserializer) {\n        var response = deserializer.fetchObject('Set_client_DH_params_answer')\n\n        if (response._ != 'dh_gen_ok' && response._ != 'dh_gen_retry' && response._ != 'dh_gen_fail') {\n            deferred.reject(new Error('[MT] Set_client_DH_params_answer response invalid: ' + response._))\n            return false\n        }\n\n        if (!bytesCmp(auth.nonce, response.nonce)) {\n            deferred.reject(new Error('[MT] Set_client_DH_params_answer nonce mismatch'))\n            return false\n        }\n\n        if (!bytesCmp(auth.serverNonce, response.server_nonce)) {\n            deferred.reject(new Error('[MT] Set_client_DH_params_answer server_nonce mismatch'))\n            return false\n        }\n\n        let authKey = bytesModPow(auth.gA, auth.b, auth.dhPrime)\n        var authKeyHash = sha1BytesSync(authKey),\n            authKeyAux = authKeyHash.slice(0, 8),\n            authKeyID = authKeyHash.slice(-8)\n\n        //LogService.logVerbose(`[MtpAuthorizer] mtpSendSetClientDhParams() Got Set_client_DH_params_answer ${response._}`)\n\n        switch (response._) {\n            case 'dh_gen_ok':\n                var newNonceHash1 = sha1BytesSync(auth.newNonce.concat([1], authKeyAux)).slice(-16)\n\n                if (!bytesCmp(newNonceHash1, response.new_nonce_hash1)) {\n                    deferred.reject(new Error('[MT] Set_client_DH_params_answer new_nonce_hash1 mismatch'))\n                    return false\n                }\n\n                var serverSalt = bytesXor(auth.newNonce.slice(0, 8), auth.serverNonce.slice(0, 8))\n\n                auth.authKeyID = authKeyID\n                auth.authKey = authKey\n                auth.serverSalt = serverSalt\n\n                deferred.resolve(auth)\n                break\n\n            case 'dh_gen_retry':\n                var newNonceHash2 = sha1BytesSync(auth.newNonce.concat([2], authKeyAux)).slice(-16)\n                if (!bytesCmp(newNonceHash2, response.new_nonce_hash2)) {\n                    deferred.reject(new Error('[MT] Set_client_DH_params_answer new_nonce_hash2 mismatch'))\n                    return false\n                }\n\n                return mtpSendSetClientDhParams(auth)\n\n            case 'dh_gen_fail':\n                var newNonceHash3 = sha1BytesSync(auth.newNonce.concat([3], authKeyAux)).slice(-16)\n                if (!bytesCmp(newNonceHash3, response.new_nonce_hash3)) {\n                    deferred.reject(new Error('[MT] Set_client_DH_params_answer new_nonce_hash3 mismatch'))\n                    return false\n                }\n\n                deferred.reject(new Error('[MT] Set_client_DH_params_answer fail'))\n                return false\n        }\n    }, function (error) {\n        deferred.reject(error)\n    })\n}\n\nlet cached = {};\n\nexport const flushCachedNetworkers = () => {\n    cached = {};\n    flushSockets();\n};\n\nconst mtpAuth = (dcID, noCache) => new Promise((resolve, reject) => {\n\n    // if (cached[dcID] !== undefined) {\n    //     return cached[dcID]\n    // }\n\n    var nonce = []\n    for (var i = 0; i < 16; i++) {\n        nonce.push(nextRandomInt(0xFF))\n    }\n\n    if (!MtpDcConfigurator.chooseServer(dcID)) {\n        throw new Error('[MT] No server found for dc ' + dcID)\n    }\n\n\n    var url = MtpDcConfigurator.chooseServer(dcID);\n    flushSockets(url, dcID);\n\n    var auth = {\n        dcID: dcID,\n        nonce: nonce,\n        deferred: {\n            resolve: (obj) => resolve(obj), reject: (err) => { reject(err); }\n        }\n    }\n\n\n    mtpSendReqPQ(auth);\n})\n\n\nexport const auth = mtpAuth\n\n\n// WEBPACK FOOTER //\n// ./src/Mtp/MtpAuthorizer.js","import Config from '../config.js'\nimport { MtpTimeManager, MtpDcConfigurator, MtpRsaKeysManager } from '../Mtp'\nimport {\n    SecureRandom, convertToUint8Array, convertToArrayBuffer,\n    sha1BytesSync, dT, tsNow, nextRandomInt, bufferConcat, sha256HashSync, aesEncryptSync,\n    bytesCmp, aesDecryptSync, bytesToArrayBuffer, bytesToHex, longToBytes, uintToInt,\n    bigStringInt\n} from '../Utils'\nimport { TLSerialization, TLDeserialization } from '../TL'\nimport { networkRequest } from '../network'\nimport { setState, getState } from '../state'\nimport { ErrorResponse } from '../Services'\n\nvar updatesProcessor = (message)=>{\n    // console.log('MM:');\n    console.log(message);\n};\n\nvar iii = 0,\n    offline\nvar offlineInited = false\nvar akStopped = false\n\nfunction MtpNetworker(dcID, authKey, serverSalt, options) {\n    options = options || {}\n\n    this.signedIn = false\n\n    this.dcID = dcID\n    this.iii = iii++\n\n    this.authKey = authKey\n    this.authKeyUint8 = convertToUint8Array(authKey)\n    this.authKeyBuffer = convertToArrayBuffer(authKey)\n    this.authKeyID = sha1BytesSync(authKey).slice(-8)\n\n    this.serverSalt = serverSalt\n\n    this.upload = options.fileUpload || options.fileDownload || false\n\n    this.updateSessionId()\n\n    this.lastServerMessages = []\n\n    this.currentRequests = 0\n    this.checkConnectionPeriod = 0\n\n    // console.warn('this.sentMessages = {}')\n    this.sentMessages = {}\n    this.clientMessages = []\n\n    this.pendingMessages = {}\n    this.pendingAcks = []\n    this.pendingResends = []\n    this.connectionInited = false\n\n    this.pendingTimeouts = []\n\n    //this.longPollInt = $interval(this.checkLongPoll.bind(this), 10000)\n    /*\n    this.checkLongPoll()\n\n    if (!offlineInited) {\n        offlineInited = true\n        $rootScope.offline = true\n        $rootScope.offlineConnecting = true\n    }\n\n    if (Config.Navigator.mobile) {\n        this.setupMobileSleep()\n    }\n    */\n}\n\nMtpNetworker.prototype.getDcId = function () { return this.dcID }\n\nMtpNetworker.prototype.updateSessionId = function () {\n    this.seqNo = 0\n    this.prevSessionID = this.sessionID\n    this.sessionID = new Array(8)\n    new SecureRandom().nextBytes(this.sessionID)\n}\n\nMtpNetworker.prototype.setupMobileSleep = function () {\n    var self = this\n    /*\n    $rootScope.$watch('idle.isIDLE', function (isIDLE) {\n        if (isIDLE) {\n            self.sleepAfter = tsNow() + 30000\n        } else {\n            delete self.sleepAfter\n            self.checkLongPoll()\n        }\n    })\n\n    $rootScope.$on('push_received', function () {\n        LogService.logVerbose(`[MtpNetworker] setupMobileSleep() push_received`)\n        if (self.sleepAfter) {\n            self.sleepAfter = tsNow() + 30000\n            self.checkLongPoll()\n        }\n    })\n    */\n}\n\nMtpNetworker.prototype.updateSentMessage = function (sentMessageID) {\n    var sentMessage = this.sentMessages[sentMessageID]\n    if (!sentMessage) {\n        return false\n    }\n    var self = this\n    if (sentMessage.container) {\n        var newInner = []\n        sentMessage.inner.forEach(function (innerSentMessageID) {\n            var innerSentMessage = self.updateSentMessage(innerSentMessageID)\n            if (innerSentMessage) {\n                newInner.push(innerSentMessage.msg_id)\n            }\n        })\n        sentMessage.inner = newInner\n    }\n\n    sentMessage.msg_id = MtpTimeManager.generateID()\n    sentMessage.seq_no = this.generateSeqNo(\n        sentMessage.notContentRelated ||\n        sentMessage.container\n    )\n    this.sentMessages[sentMessage.msg_id] = sentMessage\n    delete self.sentMessages[sentMessageID]\n\n    return sentMessage\n}\n\nMtpNetworker.prototype.generateSeqNo = function (notContentRelated) {\n    var seqNo = this.seqNo * 2\n\n    if (!notContentRelated) {\n        seqNo++\n        this.seqNo++\n    }\n\n    return seqNo\n}\n\nMtpNetworker.prototype.wrapMtpCall = function (method, params, options) {\n    var serializer = new TLSerialization({ mtproto: true })\n\n    serializer.storeMethod(method, params)\n\n    var messageID = MtpTimeManager.generateID()\n    var seqNo = this.generateSeqNo()\n    var message = {\n        msg_id: messageID,\n        seq_no: seqNo,\n        body: serializer.getBytes()\n    }\n\n    //LogService.logVerbose(`[MtpNetworker] wrapMtpCall() ${method} ${JSON.stringify(params, 0, 2)}`)\n\n    return this.pushMessage(message, options)\n}\n\nMtpNetworker.prototype.wrapMtpMessage = function (object, options) {\n    options = options || {}\n\n    var serializer = new TLSerialization({ mtproto: true })\n    serializer.storeObject(object, 'Object')\n\n    const messageID = MtpTimeManager.generateID()\n    const seqNo = this.generateSeqNo(options.notContentRelated)\n    const message = {\n        msg_id: messageID,\n        seq_no: seqNo,\n        body: serializer.getBytes()\n    }\n\n\n    //LogService.logVerbose(`[MtpNetworker] wrapMtpMessage ${JSON.stringify(object, 0, 2)} ${messageID} ${seqNo}`)\n\n    return this.pushMessage(message, options)\n}\n\nMtpNetworker.prototype.wrapApiCall = function (method, params, options) {\n\n    return new Promise((resolve, reject) => {\n        const serializer = new TLSerialization(options)\n\n        if (!this.connectionInited) {\n            serializer.storeInt(0xda9b0d0d, 'invokeWithLayer')\n            serializer.storeInt(Config.Schema.API.layer, 'layer')\n\n            serializer.storeInt(0x69796de9, 'initConnection')\n            serializer.storeInt(Config.App.id, 'api_id')\n            serializer.storeString('Unknown UserAgent', 'device_model')\n            serializer.storeString('Unknown Platform', 'system_version')\n            serializer.storeString(Config.App.version, 'app_version')\n            serializer.storeString('en', 'lang_code')\n        }\n\n        if (options.afterMessageID) {\n            serializer.storeInt(0xcb9f372d, 'invokeAfterMsg')\n            serializer.storeLong(options.afterMessageID, 'msg_id')\n        }\n\n        options.resultType = serializer.storeMethod(method, params)\n\n        const messageID = MtpTimeManager.generateID()\n        const seqNo = this.generateSeqNo()\n        const message = {\n            msg_id: messageID,\n            seq_no: seqNo,\n            body: serializer.getBytes(true),\n            isAPI: true\n        }\n\n        //LogService.logVerbose(`[MtpNetworker] wrapApiCall() ${method} ${JSON.stringify(params, 0, 2)} ${messageID} ${seqNo} ${JSON.stringify(options, 0, 2)}`)\n\n\n        this.pushMessage(message, options)\n            .then(res => {\n                if (res) {\n                    if (res._ == 'userFull' || res.user) {\n                        this.signedIn = true;\n                    }\n                }\n\n                resolve(res);\n            })\n            .catch(err => reject(err))\n    })\n}\n\nMtpNetworker.prototype.checkLongPoll = function (force) {\n    var isClean = this.cleanupSent()\n    if (this.longPollPending && tsNow() < this.longPollPending ||\n        this.offline ||\n        akStopped) {\n        return false\n    }\n    var self = this\n    Storage.get('dc').then(function (baseDcID) {\n        if (isClean && (\n            baseDcID != self.dcID ||\n            self.upload ||\n            self.sleepAfter && tsNow() > self.sleepAfter\n        )) {\n            return\n        }\n        self.sendLongPoll()\n    })\n}\n\nMtpNetworker.prototype.sendLongPoll = function (cb) {\n    var maxWait = 25000\n    var self = this\n\n    this.longPollPending = tsNow() + maxWait\n\n    this.wrapMtpCall('http_wait', {\n        max_delay: 500,\n        wait_after: 150,\n        max_wait: maxWait\n    }, {\n            noResponse: true,\n            longPoll: true\n        }).then(function () {\n            delete self.longPollPending\n            cb();\n            // self.checkLongPoll.bind(self)()\n        }, function (error) {\n            //LogService.logError(`[MtpNetworker] sendLongPoll() ${new ErrorResponse(error)}`)\n            cb();\n        })\n}\n\nMtpNetworker.prototype.pushMessage = function (message, options = {}) {\n    return new Promise((resolve, reject) => {\n        this.sentMessages[message.msg_id] = { ...message, ...options, deferred: { resolve, reject } }\n        this.pendingMessages[message.msg_id] = 0\n\n        if (!options || !options.noShedule) {\n            this.sheduleRequest()\n        }\n        if (typeof options === 'object') {\n            options.messageID = message.msg_id\n        }\n    })\n}\n\nMtpNetworker.prototype.pushResend = function (messageID, delay) {\n    var value = delay ? tsNow() + delay : 0\n    var sentMessage = this.sentMessages[messageID]\n    if (sentMessage.container) {\n        for (var i = 0; i < sentMessage.inner.length; i++) {\n            this.pendingMessages[sentMessage.inner[i]] = value\n        }\n    } else {\n        this.pendingMessages[messageID] = value\n    }\n\n    this.sheduleRequest(delay)\n}\n\nMtpNetworker.prototype.getMsgKey = function (dataWithPadding, isOut) {\n    var authKey = this.authKeyUint8\n    var x = isOut ? 0 : 8\n    var msgKeyLargePlain = bufferConcat(authKey.subarray(88 + x, 88 + x + 32), dataWithPadding)\n    const msgKeyLarge = sha256HashSync(msgKeyLargePlain)\n    var msgKey = new Uint8Array(msgKeyLarge).subarray(8, 24)\n    return msgKey\n}\n\nMtpNetworker.prototype.getAesKeyIv = function (msgKey, isOut) {\n    var authKey = this.authKeyUint8\n    var x = isOut ? 0 : 8\n    var sha2aText = new Uint8Array(52)\n    var sha2bText = new Uint8Array(52)\n    var promises = {}\n\n    sha2aText.set(msgKey, 0)\n    sha2aText.set(authKey.subarray(x, x + 36), 16)\n    let result_sha2a = sha256HashSync(sha2aText)\n\n    sha2bText.set(authKey.subarray(40 + x, 40 + x + 36), 0)\n    sha2bText.set(msgKey, 36)\n    let result_sha2b = sha256HashSync(sha2bText)\n\n    var aesKey = new Uint8Array(32)\n    var aesIv = new Uint8Array(32)\n    var sha2a = new Uint8Array(result_sha2a)\n    var sha2b = new Uint8Array(result_sha2b)\n\n    aesKey.set(sha2a.subarray(0, 8))\n    aesKey.set(sha2b.subarray(8, 24), 8)\n    aesKey.set(sha2a.subarray(24, 32), 24)\n\n    aesIv.set(sha2b.subarray(0, 8))\n    aesIv.set(sha2a.subarray(8, 24), 8)\n    aesIv.set(sha2b.subarray(24, 32), 24)\n\n    return [aesKey, aesIv]\n}\n\nMtpNetworker.prototype.checkConnection = function (event) {\n    // $rootScope.offlineConnecting = true\n\n    // LogService.logVerbose(`[MtpNetworker] checkConnection()`)\n    //$timeout.cancel(this.checkConnectionPromise)\n\n    var serializer = new TLSerialization({ mtproto: true })\n    var pingID = [nextRandomInt(0xFFFFFFFF), nextRandomInt(0xFFFFFFFF)]\n\n    serializer.storeMethod('ping', { ping_id: pingID })\n\n    var pingMessage = {\n        msg_id: MtpTimeManager.generateID(),\n        seq_no: this.generateSeqNo(true),\n        body: serializer.getBytes()\n    }\n\n    var self = this\n    this.sendEncryptedRequest(pingMessage, { timeout: 15000 })\n        .then(function (result) {\n            /*delete $rootScope.offlineConnecting\n            self.toggleOffline(false)\n            */\n        })\n        .catch(function () {\n            // LogService.logVerbose(`[MtpNetworker] checkConnection() Delay ${self.checkConnectionPeriod * 1000}`)\n            //self.checkConnectionPromise = $timeout(self.checkConnection.bind(self), parseInt(self.checkConnectionPeriod * 1000))\n            self.checkConnectionPeriod = Math.min(60, self.checkConnectionPeriod * 1.5)\n            /*\n            $timeout(function () {\n                delete $rootScope.offlineConnecting\n            }, 1000)\n            */\n        })\n}\n\nMtpNetworker.prototype.toggleOffline = function (enabled) {\n    // LogService.logVerbose(`[MtpNetworker] toggleOffline() ${enabled}`)\n\n    if (this.offline !== undefined && this.offline == enabled) {\n        return false\n    }\n\n    this.offline = enabled\n    //$rootScope.offline = enabled\n    //$rootScope.offlineConnecting = false\n\n    /*\n\n    if (this.offline) {\n        $timeout.cancel(this.nextReqPromise)\n        delete this.nextReq\n\n        if (this.checkConnectionPeriod < 1.5) {\n            this.checkConnectionPeriod = 0\n        }\n\n        this.checkConnectionPromise = $timeout(this.checkConnection.bind(this), parseInt(this.checkConnectionPeriod * 1000))\n        this.checkConnectionPeriod = Math.min(30, (1 + this.checkConnectionPeriod) * 1.5)\n\n        this.onOnlineCb = this.checkConnection.bind(this)\n    } else {\n        delete this.longPollPending\n        this.checkLongPoll()\n        this.sheduleRequest()\n\n        $timeout.cancel(this.checkConnectionPromise)\n    }\n    */\n}\n\nMtpNetworker.prototype.performSheduledRequest = function () {\n    //LogService.logVerbose(`[MtpNetworker] performSheduledRequest()`)\n\n    if (this.offline || akStopped) {\n        //LogService.logVerbose(`[MtpNetworker] performSheduledRequest() Cancel sheduled`)\n        return false\n    }\n\n    delete this.nextReq\n\n    if (this.pendingAcks.length) {\n        var ackMsgIDs = []\n        for (var i = 0; i < this.pendingAcks.length; i++) {\n            ackMsgIDs.push(this.pendingAcks[i])\n        }\n        this.wrapMtpMessage({ _: 'msgs_ack', msg_ids: ackMsgIDs }, { notContentRelated: true, noShedule: true })\n    }\n\n    if (this.pendingResends.length) {\n        var resendMsgIDs = []\n        var resendOpts = { noShedule: true, notContentRelated: true }\n        for (var i = 0; i < this.pendingResends.length; i++) {\n            resendMsgIDs.push(this.pendingResends[i])\n        }\n        this.wrapMtpMessage({ _: 'msg_resend_req', msg_ids: resendMsgIDs }, resendOpts)\n        this.lastResendReq = { req_msg_id: resendOpts.messageID, resend_msg_ids: resendMsgIDs }\n    }\n\n    let messages = []\n    let message\n    let messagesByteLen = 0\n    let currentTime = tsNow()\n    let hasApiCall = false\n    let hasHttpWait = false\n    let lengthOverflow = false\n    let singlesCount = 0\n    let self = this\n\n    Object.keys(this.pendingMessages).forEach((messageID) => {\n        const value = this.pendingMessages[messageID]\n\n        if (!value || value >= currentTime) {\n            if (message = self.sentMessages[messageID]) {\n                var messageByteLength = (message.body.byteLength || message.body.length) + 32\n                if (!message.notContentRelated &&\n                    lengthOverflow) {\n                    return\n                }\n                if (!message.notContentRelated &&\n                    messagesByteLen &&\n                    messagesByteLen + messageByteLength > 655360) { // 640 Kb\n                    lengthOverflow = true\n                    return\n                }\n                if (message.singleInRequest) {\n                    singlesCount++\n                    if (singlesCount > 1) {\n                        return\n                    }\n                }\n                messages.push(message)\n                messagesByteLen += messageByteLength\n                if (message.isAPI) {\n                    hasApiCall = true\n                }\n                else if (message.longPoll) {\n                    hasHttpWait = true\n                }\n            }\n            delete self.pendingMessages[messageID]\n        }\n    })\n\n    if (hasApiCall && !hasHttpWait) {\n        // var serializer = new TLSerialization({ mtproto: true })\n        // serializer.storeMethod('http_wait', {\n        //     max_delay: 500,\n        //     wait_after: 150,\n        //     max_wait: 3000\n        // })\n        // messages.push({\n        //     msg_id: MtpTimeManager.generateID(),\n        //     seq_no: this.generateSeqNo(),\n        //     body: serializer.getBytes()\n        // })\n    }\n\n    if (!messages.length) {\n        return\n    }\n\n    var noResponseMsgs = []\n\n    if (messages.length > 1) {\n        var container = new TLSerialization({ mtproto: true, startMaxLength: messagesByteLen + 64 })\n        container.storeInt(0x73f1f8dc, 'CONTAINER[id]')\n        container.storeInt(messages.length, 'CONTAINER[count]')\n        var onloads = []\n        var innerMessages = []\n        for (var i = 0; i < messages.length; i++) {\n            container.storeLong(messages[i].msg_id, 'CONTAINER[' + i + '][msg_id]')\n            innerMessages.push(messages[i].msg_id)\n            container.storeInt(messages[i].seq_no, 'CONTAINER[' + i + '][seq_no]')\n            container.storeInt(messages[i].body.length, 'CONTAINER[' + i + '][bytes]')\n            container.storeRawBytes(messages[i].body, 'CONTAINER[' + i + '][body]')\n            if (messages[i].noResponse) {\n                noResponseMsgs.push(messages[i].msg_id)\n            }\n        }\n\n        var containerSentMessage = {\n            msg_id: MtpTimeManager.generateID(),\n            seq_no: this.generateSeqNo(true),\n            container: true,\n            inner: innerMessages\n        }\n\n        message = { body: container.getBytes(true), ...containerSentMessage }\n\n        this.sentMessages[message.msg_id] = containerSentMessage\n\n        //LogService.logVerbose(`[MtpNetworker] performSheduledRequest() Container ${JSON.stringify(innerMessages, 0, 2)} ${message.msg_id} ${message.seq_no}`)\n    } else {\n        if (message.noResponse) {\n            noResponseMsgs.push(message.msg_id)\n        }\n        this.sentMessages[message.msg_id] = message\n    }\n\n\n    this.pendingAcks = []\n\n    //LogService.logVerbose(`[MtpNetworker] performSheduledRequest() sendEncryptedRequest(${JSON.stringify(message, 0, 2)})`)\n\n\n    this.sendEncryptedRequest(message).then(function (result) {\n        self.toggleOffline(false)\n\n        const response = self.parseResponse(result.data)\n        MtpTimeManager.setLastID(response.messageID);\n\n        //LogService.logVerbose(`[MtpNetworker] performSheduledRequest() sendEncryptedRequest() Server response ${self.dcID} ${JSON.stringify(response, 0, 2)}`)\n\n        self.processMessage(response.response, response.messageID, response.sessionID)\n\n        noResponseMsgs.forEach(function (msgID) {\n            if (self.sentMessages[msgID]) {\n                var deferred = self.sentMessages[msgID].deferred\n                delete self.sentMessages[msgID]\n                deferred.resolve()\n            }\n        })\n\n        //self.checkLongPoll()\n\n        self.checkConnectionPeriod = Math.max(1.1, Math.sqrt(self.checkConnectionPeriod))\n\n    })\n        .catch(error => {\n\n            if (message.container) {\n                message.inner.forEach(function (msgID) {\n                    self.pendingMessages[msgID] = 0\n                })\n                delete self.sentMessages[message.msg_id]\n            } else {\n                self.pendingMessages[message.msg_id] = 0\n            }\n\n            noResponseMsgs.forEach(function (msgID) {\n                if (self.sentMessages[msgID]) {\n                    var deferred = self.sentMessages[msgID].deferred\n                    delete self.sentMessages[msgID]\n                    delete self.pendingMessages[msgID]\n                    deferred.reject()\n                }\n            })\n\n            self.toggleOffline(true)\n        })\n\n    /*\n    if (lengthOverflow || singlesCount > 1) {\n        this.sheduleRequest()\n    }\n    */\n}\n\nMtpNetworker.prototype.networkCallback = function (result) {\n\n    try {\n        this.toggleOffline(false);\n        const response = this.parseResponse(result.data)\n        MtpTimeManager.setLastID(response.messageID);\n        this.processMessage(response.response, response.messageID, response.sessionID);\n    } catch(e) {\n        console.error(e);\n    }\n}\n\nMtpNetworker.prototype.getEncryptedMessage = function (dataWithPadding) {\n    var self = this\n    const msgKey = self.getMsgKey(dataWithPadding, true)\n    const keyIv = self.getAesKeyIv(msgKey, true)\n    const encryptedBytes = aesEncryptSync(dataWithPadding, keyIv[0], keyIv[1])\n    return {\n        bytes: encryptedBytes,\n        msgKey: msgKey\n    }\n}\n\nMtpNetworker.prototype.getDecryptedMessage = function (msgKey, encryptedData) {\n    const keyIv = this.getAesKeyIv(msgKey, false)\n    return aesDecryptSync(encryptedData, keyIv[0], keyIv[1])\n}\n\nMtpNetworker.prototype.sendEncryptedRequest = function (message, options = {}) {\n\n    return new Promise((resolve, reject) => {\n        var self = this\n        options = options || {}\n        var data = new TLSerialization({ startMaxLength: message.body.length + 2048 })\n\n        data.storeIntBytes(this.serverSalt, 64, 'salt')\n        data.storeIntBytes(this.sessionID, 64, 'session_id')\n\n        data.storeLong(message.msg_id, 'message_id')\n        data.storeInt(message.seq_no, 'seq_no')\n\n        data.storeInt(message.body.length, 'message_data_length')\n        data.storeRawBytes(message.body, 'message_data')\n\n        var dataBuffer = data.getBuffer()\n\n        var paddingLength = (16 - (data.offset % 16)) + 16 * (1 + nextRandomInt(5))\n        var padding = new Array(paddingLength)\n        new SecureRandom().nextBytes(padding)\n\n        var dataWithPadding = bufferConcat(dataBuffer, padding)\n\n        const encryptedResult = this.getEncryptedMessage(dataWithPadding)\n\n        var request = new TLSerialization({ startMaxLength: encryptedResult.bytes.byteLength + 256 })\n        request.storeIntBytes(self.authKeyID, 64, 'auth_key_id')\n        request.storeIntBytes(encryptedResult.msgKey, 128, 'msg_key')\n        request.storeRawBytes(encryptedResult.bytes, 'encrypted_data')\n\n        var requestData = request.getArray()\n\n        var requestPromise\n        var url = MtpDcConfigurator.chooseServer(self.dcID)\n        var baseError = { code: 406, type: 'NETWORK_BAD_RESPONSE', url: url }\n\n        var networkCallback = (data) => {\n            this.networkCallback(data);\n        };\n\n        networkRequest(url, self.dcID, requestData, networkCallback).then(\n            function (result) {\n                if (!result.data || !result.data.byteLength) {\n                    reject(baseError)\n                }\n                resolve(result)\n            })\n            .catch(error => {\n                console.error(error);\n                if (!error.message && !error.type) {\n                    error = { ...baseError, type: 'NETWORK_BAD_REQUEST', originalError: error }\n                }\n                //LogService.logError(`[MtpNetworker] sendEncryptedRequest() ${error.message}`)\n                reject(error)\n            })\n    })\n}\n\nexport function toArrayBuffer(arr) {\n    var ab = new ArrayBuffer(arr.length)\n    var view = new Uint8Array(ab)\n    for (var i = 0; i < arr.length; ++i) {\n        view[i] = arr[i]\n    }\n    return ab\n}\n\nMtpNetworker.prototype.parseResponse = function (responseBuffer) {\n    var self = this\n    var deserializer = new TLDeserialization(responseBuffer)\n\n    var authKeyID = deserializer.fetchIntBytes(64, false, 'auth_key_id')\n\n\n    var msgKey = deserializer.fetchIntBytes(128, true, 'msg_key')\n    var encryptedData = deserializer.fetchRawBytes(responseBuffer.byteLength - deserializer.getOffset(), true, 'encrypted_data')\n\n    const dataWithPadding = toArrayBuffer(self.getDecryptedMessage(msgKey, encryptedData))\n    const calcMsgKey = self.getMsgKey(dataWithPadding, false)\n    if (!bytesCmp(msgKey, calcMsgKey)) {\n        //LogService.logError(`[MtpNetworker] parseResponse() server msgKey mismatch: ${bytesFromArrayBuffer(calcMsgKey)}`)\n        throw new Error('[MT] server msgKey mismatch')\n    }\n    // if (!bytesCmp(authKeyID, this.authKeyID)) {\n    //     throw new Error('[MT] Invalid server auth_key_id: ' + bytesToHex(authKeyID))\n    // }\n    var deserializer = new TLDeserialization(dataWithPadding, { mtproto: true })\n\n    var salt = deserializer.fetchIntBytes(64, false, 'salt')\n    var sessionID = deserializer.fetchIntBytes(64, false, 'session_id')\n    var messageID = deserializer.fetchLong('message_id')\n\n    if (!bytesCmp(sessionID, self.sessionID) &&\n        (!self.prevSessionID || !bytesCmp(sessionID, self.prevSessionID))) {\n        //LogService.logError(`[MtpNetworker] parseResponse() Invalid server session_id: ${bytesToHex(sessionID)}`)\n        // throw new Error('[MT] Invalid server session_id: ' + bytesToHex(sessionID))\n    }\n\n    var seqNo = deserializer.fetchInt('seq_no')\n    var totalLength = dataWithPadding.bytesLength\n\n    var messageBodyLength = deserializer.fetchInt('message_data[length]')\n    var offset = deserializer.getOffset()\n\n    if ((messageBodyLength % 4 !== 0) || (messageBodyLength > totalLength - offset)) {\n        throw new Error('[MT] Invalid body length: ' + messageBodyLength)\n    }\n    var messageBody = deserializer.fetchRawBytes(messageBodyLength, true, 'message_data')\n\n    var offset = deserializer.getOffset()\n    var paddingLength = totalLength - offset\n    if (paddingLength < 12 || paddingLength > 1024) {\n        throw new Error('[MT] Invalid padding length: ' + paddingLength)\n    }\n\n    var buffer = bytesToArrayBuffer(messageBody)\n    var deserializerOptions = {\n        mtproto: true,\n        override: {\n            mt_message: function (result, field) {\n                result.msg_id = this.fetchLong(field + '[msg_id]')\n                result.seqno = this.fetchInt(field + '[seqno]')\n                result.bytes = this.fetchInt(field + '[bytes]')\n\n                var offset = this.getOffset()\n\n                try {\n                    result.body = this.fetchObject('Object', field + '[body]')\n                } catch (e) {\n                    //LogService.logError(`[MtpNetworker] parseResponse() parse error: ${new ErrorResponse(e)}`)\n                    result.body = { _: 'parse_error', error: e }\n                }\n                if (this.offset != offset + result.bytes) {\n                    this.offset = offset + result.bytes\n                }\n            },\n            mt_rpc_result: function (result, field) {\n                result.req_msg_id = this.fetchLong(field + '[req_msg_id]')\n\n                var sentMessage = self.sentMessages[result.req_msg_id]\n                var type = sentMessage && sentMessage.resultType || 'Object'\n\n                if (result.req_msg_id && !sentMessage) {\n\n                    return\n                }\n                result.result = this.fetchObject(type, field + '[result]')\n            }\n        }\n    }\n    var deserializer = new TLDeserialization(buffer, deserializerOptions)\n    var response = deserializer.fetchObject('', 'INPUT')\n\n\n    return {\n        response: response,\n        messageID: messageID,\n        sessionID: sessionID,\n        seqNo: seqNo\n    }\n}\n\nMtpNetworker.prototype.applyServerSalt = function (newServerSalt) {\n    var serverSalt = longToBytes(newServerSalt)\n\n    const newNetworkers = getState().networkers\n    let networker = newNetworkers.find(nw => nw.id == this.dcID)\n    if (!networker) {\n        throw new Error(`Networker with dcID = ${this.dcID} not found in the state`)\n    }\n\n    networker.auth.serverSalt = serverSalt\n    setState({ networkers: newNetworkers })\n    this.serverSalt = serverSalt\n    return true\n}\n\nMtpNetworker.prototype.sheduleRequest = function (delay) {\n    if (this.offline) {\n        this.checkConnection('forced shedule')\n    }\n    var nextReq = tsNow() + delay\n\n    if (delay && this.nextReq && this.nextReq <= nextReq) {\n        return false\n    }\n\n    /*\n    $timeout.cancel(this.nextReqPromise)\n    if (delay > 0) {\n        this.nextReqPromise = $timeout(this.performSheduledRequest.bind(this), delay || 0)\n    } else {\n        setZeroTimeout(this.performSheduledRequest.bind(this))\n    }\n    */\n\n    this.performSheduledRequest.bind(this)()\n    this.nextReq = nextReq\n}\n\nMtpNetworker.prototype.ackMessage = function (msgID) {\n    //LogService.logVerbose(`[MtpNetworker] ackMessage() ${msgID}`)\n    this.pendingAcks.push(msgID)\n    this.sheduleRequest(30000)\n}\n\nMtpNetworker.prototype.reqResendMessage = function (msgID) {\n    //LogService.logVerbose(`[MtpNetworker] reqResendMessage() ${msgID}`)\n    this.pendingResends.push(msgID)\n    this.sheduleRequest(100)\n}\n\nMtpNetworker.prototype.cleanupSent = function () {\n    var self = this\n    var notEmpty = false\n\n    Object.keys(this.sentMessages).forEach(function (msgID) {\n        const message = self.sentMessages[msgID]\n        if (message.notContentRelated && self.pendingMessages[msgID] === undefined) {\n            delete self.sentMessages[msgID]\n        }\n        else if (message.container) {\n            for (var i = 0; i < message.inner.length; i++) {\n                if (self.sentMessages[message.inner[i]] !== undefined) {\n                    notEmpty = true\n                    return\n                }\n            }\n            delete self.sentMessages[msgID]\n        } else {\n            notEmpty = true\n        }\n    })\n\n    return !notEmpty\n}\n\nMtpNetworker.prototype.processMessageAck = function (messageID) {\n    var sentMessage = this.sentMessages[messageID]\n    if (sentMessage && !sentMessage.acked) {\n        delete sentMessage.body\n        sentMessage.acked = true\n\n        return true\n    }\n\n    return false\n}\n\nMtpNetworker.prototype.processError = function (rawError) {\n    var matches = (rawError.error_message || '').match(/^([A-Z_0-9]+\\b)(: (.+))?/) || []\n    rawError.error_code = uintToInt(rawError.error_code)\n\n    return {\n        code: !rawError.error_code || rawError.error_code <= 0 ? 500 : rawError.error_code,\n        type: matches[1] || 'UNKNOWN',\n        description: matches[3] || ('CODE#' + rawError.error_code + ' ' + rawError.error_message),\n        originalError: rawError\n    }\n}\n\nMtpNetworker.prototype.processMessage = function (message, messageID, sessionID) {\n\n    var msgidInt = parseInt(messageID.toString(10).substr(0, -10), 10)\n    if (msgidInt % 2) {\n        console.error('Server even message ID');\n        //LogService.logInfo(`[MtpNetworker] processMessage() Server even message id ${messageID}`)\n        return\n    }\n    switch (message._) {\n        case 'msg_container':\n            var len = message.messages.length\n            for (var i = 0; i < len; i++) {\n                this.processMessage(message.messages[i], message.messages[i].msg_id, sessionID)\n            }\n            break\n\n        case 'bad_server_salt':\n            //LogService.logInfo(`[MtpNetworker] processMessage() Bad server salt ${JSON.stringify(message, 0, 2)}`)\n            var sentMessage = this.sentMessages[message.bad_msg_id]\n            if (!sentMessage || sentMessage.seq_no != message.bad_msg_seqno) {\n                //LogService.logInfo(`[MtpNetworker] processMessage() Bad server salt for invalid message ${JSON.stringify(message, 0, 2)}`)\n                throw new Error('[MT] Bad server salt for invalid message')\n            }\n\n            this.applyServerSalt(message.new_server_salt)\n            this.pushResend(message.bad_msg_id)\n            this.ackMessage(messageID)\n            break\n\n        case 'bad_msg_notification':\n            //LogService.logInfo(`[MtpNetworker] processMessage() Bad msg notification ${JSON.stringify(message, 0, 2)}`)\n            var sentMessage = this.sentMessages[message.bad_msg_id]\n            if (!sentMessage || sentMessage.seq_no != message.bad_msg_seqno) {\n                throw new Error('[MT] Bad msg notification for invalid message')\n            }\n\n            if (message.error_code == 16 || message.error_code == 17 || message.error_code == 32 || message.error_code == 33) {\n                if (MtpTimeManager.applyServerTime(\n                    bigStringInt(messageID).shiftRight(32).toString(10)\n                )) {\n                    //LogService.logInfo(`[MtpNetworker] processMessage() Update session`)\n                    this.updateSessionId()\n                }\n                var badMessage = this.updateSentMessage(message.bad_msg_id)\n                this.pushResend(badMessage.msg_id)\n                this.ackMessage(messageID)\n            }\n            break\n\n        case 'message':\n            if (this.lastServerMessages.indexOf(messageID) != -1) {\n                this.ackMessage(messageID)\n                return\n            }\n            this.lastServerMessages.push(messageID)\n            if (this.lastServerMessages.length > 100) {\n                this.lastServerMessages.shift()\n            }\n            this.processMessage(message.body, message.msg_id, sessionID)\n            break\n\n        case 'new_session_created':\n\n            console.info('new session created');\n            // this.updateSentMessage(message.first_msg_id)\n            this.ackMessage(messageID)\n            // this.updateSentMessage(message.first_msg_id)\n\n            this.processMessageAck(message.first_msg_id)\n            this.applyServerSalt(message.server_salt)\n\n            // this.seqNo = 0;\n            // this.prevSessionID = this.sessionID;\n            // this.sessionID = sessionID;\n            if (MtpTimeManager.applyServerTime(\n                bigStringInt(messageID).shiftRight(32).toString(10)\n            )) {\n                    //LogService.logInfo(`[MtpNetworker] processMessage() Update session`)\n                this.updateSessionId()\n            }\n\n            var self = this\n\n            const currentDcId = getState().current_dc_id\n\n            if (currentDcId == self.dcID && !self.upload && updatesProcessor) {\n                updatesProcessor(message, true)\n            }\n\n            break\n\n        case 'msgs_ack':\n            for (var i = 0; i < message.msg_ids.length; i++) {\n                this.processMessageAck(message.msg_ids[i])\n            }\n            break\n\n        case 'msg_detailed_info':\n            if (!this.sentMessages[message.msg_id]) {\n                this.ackMessage(message.answer_msg_id)\n                break\n            }\n        case 'msg_new_detailed_info':\n            if (this.pendingAcks.indexOf(message.answer_msg_id)) {\n                break\n            }\n            this.reqResendMessage(message.answer_msg_id)\n            break\n\n        case 'msgs_state_info':\n            this.ackMessage(message.answer_msg_id)\n            if (this.lastResendReq && this.lastResendReq.req_msg_id == message.req_msg_id && this.pendingResends.length) {\n                var i, badMsgID, pos\n                for (i = 0; i < this.lastResendReq.resend_msg_ids.length; i++) {\n                    badMsgID = this.lastResendReq.resend_msg_ids[i]\n                    pos = this.pendingResends.indexOf(badMsgID)\n                    if (pos != -1) {\n                        this.pendingResends.splice(pos, 1)\n                    }\n                }\n            }\n            break\n\n        case 'rpc_result':\n            this.ackMessage(messageID)\n\n            var sentMessageID = message.req_msg_id\n            var sentMessage = this.sentMessages[sentMessageID]\n\n            this.processMessageAck(sentMessageID)\n            if (sentMessage) {\n                var deferred = sentMessage.deferred\n                if (message.result._ == 'rpc_error') {\n                    var error = this.processError(message.result)\n                    //LogService.logError(`[MtpNetworker] processMessageAck() Rpc error ${new ErrorResponse(error)}`)\n                    if (deferred) {\n                        deferred.reject(error)\n                    }\n                } else {\n                    if (deferred) {\n                        //LogService.logVerbose(`[MtpNetworker] processMessageAck() Rpc response ${JSON.stringify(message.result, 0, 2)}`)\n                        sentMessage.deferred.resolve(message.result)\n                    }\n                    if (sentMessage.isAPI) {\n                        this.connectionInited = true\n                    }\n                }\n\n                delete this.sentMessages[sentMessageID]\n            }\n            break\n\n        default:\n            this.ackMessage(messageID)\n\n            if (updatesProcessor) {\n                updatesProcessor(message, true)\n            }\n            break\n\n    }\n}\n\nexport function startAll() {\n    if (akStopped) {\n        akStopped = false\n        updatesProcessor({ _: 'new_session_created' }, true)\n    }\n}\n\nexport function stopAll() {\n    akStopped = true\n}\n\nexport const getNetworker = function (dcID, authKey, serverSalt, options) {\n    return new MtpNetworker(dcID, authKey, serverSalt, options)\n}\n\nexport const setUpdatesProcessor = function (callback) {\n    updatesProcessor = callback\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Mtp/MtpNetworker.js","import { MtpProxy } from './Mtp/index'\n\nexport default MtpProxy\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import Config from '../config.js'\nimport { getState } from '../state.js'\n\nexport function chooseServer(dcId) {\n  dcId = dcId % 1000; // mod by 1000\n\n  let dcConfig = getState().dc_options\n\n  // Excluding ipV6\n  dcConfig = dcConfig.filter(dc => !dc.pFlags.ipv6)\n\n  const dcOption = dcConfig.find(dc => dc.id == dcId)\n\n  if (!dcOption) {\n    throw new Error(`Could not find dc with id = ${dcId}`)\n  }\n\n  // console.log('Config.Modes', Config.Modes);\n\n  let domain = '';\n  if (Config.Modes.ssl) {\n  \tlet dcs = ['pluto','venus','aurora','vesta','flora'];\n    if (Config.Modes.websockets) {\n      domain = 'wss://'+dcs[dcId-1]+'-1.web.telegram.org:443';\n    } else {\n      domain = 'https://'+dcs[dcId-1]+'-1.web.telegram.org:443';\n    }\n  } else {\n    if (Config.Modes.websockets) {\n      domain = 'ws://'+dcOption.ip_address+':'+dcOption.port;\n    } else {\n      domain = 'http://'+dcOption.ip_address+':'+dcOption.port;\n    }\n  }\n\n  let path = 'apiw';\n  if (Config.Modes.websockets) {\n    path+= 's';\n  }\n  if (Config.Modes.test) {\n    path+='_test';\n  }\n\n  path+='1'; /// @todo: need this? Is this documented?\n\n  return domain+'/'+path;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Mtp/MtpDcConfigurator.js","module.exports = {\"constructors\":[{\"id\":\"-1132882121\",\"predicate\":\"boolFalse\",\"params\":[],\"type\":\"Bool\"},{\"id\":\"-1720552011\",\"predicate\":\"boolTrue\",\"params\":[],\"type\":\"Bool\"},{\"id\":\"1072550713\",\"predicate\":\"true\",\"params\":[],\"type\":\"True\"},{\"id\":\"481674261\",\"predicate\":\"vector\",\"params\":[],\"type\":\"Vector t\"},{\"id\":\"-994444869\",\"predicate\":\"error\",\"params\":[{\"name\":\"code\",\"type\":\"int\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"Error\"},{\"id\":\"1450380236\",\"predicate\":\"null\",\"params\":[],\"type\":\"Null\"},{\"id\":\"2134579434\",\"predicate\":\"inputPeerEmpty\",\"params\":[],\"type\":\"InputPeer\"},{\"id\":\"2107670217\",\"predicate\":\"inputPeerSelf\",\"params\":[],\"type\":\"InputPeer\"},{\"id\":\"396093539\",\"predicate\":\"inputPeerChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"}],\"type\":\"InputPeer\"},{\"id\":\"-1182234929\",\"predicate\":\"inputUserEmpty\",\"params\":[],\"type\":\"InputUser\"},{\"id\":\"-138301121\",\"predicate\":\"inputUserSelf\",\"params\":[],\"type\":\"InputUser\"},{\"id\":\"-208488460\",\"predicate\":\"inputPhoneContact\",\"params\":[{\"name\":\"client_id\",\"type\":\"long\"},{\"name\":\"phone\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"}],\"type\":\"InputContact\"},{\"id\":\"-181407105\",\"predicate\":\"inputFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"md5_checksum\",\"type\":\"string\"}],\"type\":\"InputFile\"},{\"id\":\"-1771768449\",\"predicate\":\"inputMediaEmpty\",\"params\":[],\"type\":\"InputMedia\"},{\"id\":\"505969924\",\"predicate\":\"inputMediaUploadedPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"stickers\",\"type\":\"flags.0?Vector<InputDocument>\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.1?int\"}],\"type\":\"InputMedia\"},{\"id\":\"-1279654347\",\"predicate\":\"inputMediaPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"InputPhoto\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.0?int\"}],\"type\":\"InputMedia\"},{\"id\":\"-104578748\",\"predicate\":\"inputMediaGeoPoint\",\"params\":[{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"}],\"type\":\"InputMedia\"},{\"id\":\"-122978821\",\"predicate\":\"inputMediaContact\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"vcard\",\"type\":\"string\"}],\"type\":\"InputMedia\"},{\"id\":\"480546647\",\"predicate\":\"inputChatPhotoEmpty\",\"params\":[],\"type\":\"InputChatPhoto\"},{\"id\":\"-1837345356\",\"predicate\":\"inputChatUploadedPhoto\",\"params\":[{\"name\":\"file\",\"type\":\"InputFile\"}],\"type\":\"InputChatPhoto\"},{\"id\":\"-1991004873\",\"predicate\":\"inputChatPhoto\",\"params\":[{\"name\":\"id\",\"type\":\"InputPhoto\"}],\"type\":\"InputChatPhoto\"},{\"id\":\"-457104426\",\"predicate\":\"inputGeoPointEmpty\",\"params\":[],\"type\":\"InputGeoPoint\"},{\"id\":\"-206066487\",\"predicate\":\"inputGeoPoint\",\"params\":[{\"name\":\"lat\",\"type\":\"double\"},{\"name\":\"long\",\"type\":\"double\"}],\"type\":\"InputGeoPoint\"},{\"id\":\"483901197\",\"predicate\":\"inputPhotoEmpty\",\"params\":[],\"type\":\"InputPhoto\"},{\"id\":\"1001634122\",\"predicate\":\"inputPhoto\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"}],\"type\":\"InputPhoto\"},{\"id\":\"-539317279\",\"predicate\":\"inputFileLocation\",\"params\":[{\"name\":\"volume_id\",\"type\":\"long\"},{\"name\":\"local_id\",\"type\":\"int\"},{\"name\":\"secret\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"}],\"type\":\"InputFileLocation\"},{\"id\":\"-1649296275\",\"predicate\":\"peerUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"int\"}],\"type\":\"Peer\"},{\"id\":\"-1160714821\",\"predicate\":\"peerChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"}],\"type\":\"Peer\"},{\"id\":\"-1432995067\",\"predicate\":\"storage.fileUnknown\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":\"1086091090\",\"predicate\":\"storage.filePartial\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":\"8322574\",\"predicate\":\"storage.fileJpeg\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":\"-891180321\",\"predicate\":\"storage.fileGif\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":\"172975040\",\"predicate\":\"storage.filePng\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":\"-1373745011\",\"predicate\":\"storage.filePdf\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":\"1384777335\",\"predicate\":\"storage.fileMp3\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":\"1258941372\",\"predicate\":\"storage.fileMov\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":\"-1278304028\",\"predicate\":\"storage.fileMp4\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":\"276907596\",\"predicate\":\"storage.fileWebp\",\"params\":[],\"type\":\"storage.FileType\"},{\"id\":\"537022650\",\"predicate\":\"userEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"User\"},{\"id\":\"1326562017\",\"predicate\":\"userProfilePhotoEmpty\",\"params\":[],\"type\":\"UserProfilePhoto\"},{\"id\":\"-321430132\",\"predicate\":\"userProfilePhoto\",\"params\":[{\"name\":\"photo_id\",\"type\":\"long\"},{\"name\":\"photo_small\",\"type\":\"FileLocation\"},{\"name\":\"photo_big\",\"type\":\"FileLocation\"},{\"name\":\"dc_id\",\"type\":\"int\"}],\"type\":\"UserProfilePhoto\"},{\"id\":\"164646985\",\"predicate\":\"userStatusEmpty\",\"params\":[],\"type\":\"UserStatus\"},{\"id\":\"-306628279\",\"predicate\":\"userStatusOnline\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"UserStatus\"},{\"id\":\"9203775\",\"predicate\":\"userStatusOffline\",\"params\":[{\"name\":\"was_online\",\"type\":\"int\"}],\"type\":\"UserStatus\"},{\"id\":\"-1683826688\",\"predicate\":\"chatEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"Chat\"},{\"id\":\"1004149726\",\"predicate\":\"chat\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"kicked\",\"type\":\"flags.1?true\"},{\"name\":\"left\",\"type\":\"flags.2?true\"},{\"name\":\"deactivated\",\"type\":\"flags.5?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"ChatPhoto\"},{\"name\":\"participants_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"migrated_to\",\"type\":\"flags.6?InputChannel\"},{\"name\":\"admin_rights\",\"type\":\"flags.14?ChatAdminRights\"},{\"name\":\"default_banned_rights\",\"type\":\"flags.18?ChatBannedRights\"}],\"type\":\"Chat\"},{\"id\":\"120753115\",\"predicate\":\"chatForbidden\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Chat\"},{\"id\":\"461151667\",\"predicate\":\"chatFull\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_set_username\",\"type\":\"flags.7?true\"},{\"name\":\"has_scheduled\",\"type\":\"flags.8?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"participants\",\"type\":\"ChatParticipants\"},{\"name\":\"chat_photo\",\"type\":\"flags.2?Photo\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"exported_invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"bot_info\",\"type\":\"flags.3?Vector<BotInfo>\"},{\"name\":\"pinned_msg_id\",\"type\":\"flags.6?int\"},{\"name\":\"folder_id\",\"type\":\"flags.11?int\"}],\"type\":\"ChatFull\"},{\"id\":\"-925415106\",\"predicate\":\"chatParticipant\",\"params\":[{\"name\":\"user_id\",\"type\":\"int\"},{\"name\":\"inviter_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ChatParticipant\"},{\"id\":\"-57668565\",\"predicate\":\"chatParticipantsForbidden\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"self_participant\",\"type\":\"flags.0?ChatParticipant\"}],\"type\":\"ChatParticipants\"},{\"id\":\"1061556205\",\"predicate\":\"chatParticipants\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"participants\",\"type\":\"Vector<ChatParticipant>\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"ChatParticipants\"},{\"id\":\"935395612\",\"predicate\":\"chatPhotoEmpty\",\"params\":[],\"type\":\"ChatPhoto\"},{\"id\":\"1197267925\",\"predicate\":\"chatPhoto\",\"params\":[{\"name\":\"photo_small\",\"type\":\"FileLocation\"},{\"name\":\"photo_big\",\"type\":\"FileLocation\"},{\"name\":\"dc_id\",\"type\":\"int\"}],\"type\":\"ChatPhoto\"},{\"id\":\"-2082087340\",\"predicate\":\"messageEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"Message\"},{\"id\":\"1160515173\",\"predicate\":\"message\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"mentioned\",\"type\":\"flags.4?true\"},{\"name\":\"media_unread\",\"type\":\"flags.5?true\"},{\"name\":\"silent\",\"type\":\"flags.13?true\"},{\"name\":\"post\",\"type\":\"flags.14?true\"},{\"name\":\"from_scheduled\",\"type\":\"flags.18?true\"},{\"name\":\"legacy\",\"type\":\"flags.19?true\"},{\"name\":\"edit_hide\",\"type\":\"flags.21?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"from_id\",\"type\":\"flags.8?int\"},{\"name\":\"to_id\",\"type\":\"Peer\"},{\"name\":\"fwd_from\",\"type\":\"flags.2?MessageFwdHeader\"},{\"name\":\"via_bot_id\",\"type\":\"flags.11?int\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.3?int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"media\",\"type\":\"flags.9?MessageMedia\"},{\"name\":\"reply_markup\",\"type\":\"flags.6?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.7?Vector<MessageEntity>\"},{\"name\":\"views\",\"type\":\"flags.10?int\"},{\"name\":\"edit_date\",\"type\":\"flags.15?int\"},{\"name\":\"post_author\",\"type\":\"flags.16?string\"},{\"name\":\"grouped_id\",\"type\":\"flags.17?long\"},{\"name\":\"restriction_reason\",\"type\":\"flags.22?Vector<RestrictionReason>\"}],\"type\":\"Message\"},{\"id\":\"-1642487306\",\"predicate\":\"messageService\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"mentioned\",\"type\":\"flags.4?true\"},{\"name\":\"media_unread\",\"type\":\"flags.5?true\"},{\"name\":\"silent\",\"type\":\"flags.13?true\"},{\"name\":\"post\",\"type\":\"flags.14?true\"},{\"name\":\"legacy\",\"type\":\"flags.19?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"from_id\",\"type\":\"flags.8?int\"},{\"name\":\"to_id\",\"type\":\"Peer\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.3?int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"action\",\"type\":\"MessageAction\"}],\"type\":\"Message\"},{\"id\":\"1038967584\",\"predicate\":\"messageMediaEmpty\",\"params\":[],\"type\":\"MessageMedia\"},{\"id\":\"1766936791\",\"predicate\":\"messageMediaPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"photo\",\"type\":\"flags.0?Photo\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.2?int\"}],\"type\":\"MessageMedia\"},{\"id\":\"1457575028\",\"predicate\":\"messageMediaGeo\",\"params\":[{\"name\":\"geo\",\"type\":\"GeoPoint\"}],\"type\":\"MessageMedia\"},{\"id\":\"-873313984\",\"predicate\":\"messageMediaContact\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"vcard\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"int\"}],\"type\":\"MessageMedia\"},{\"id\":\"-1618676578\",\"predicate\":\"messageMediaUnsupported\",\"params\":[],\"type\":\"MessageMedia\"},{\"id\":\"-1230047312\",\"predicate\":\"messageActionEmpty\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":\"-1503425638\",\"predicate\":\"messageActionChatCreate\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"users\",\"type\":\"Vector<int>\"}],\"type\":\"MessageAction\"},{\"id\":\"-1247687078\",\"predicate\":\"messageActionChatEditTitle\",\"params\":[{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":\"2144015272\",\"predicate\":\"messageActionChatEditPhoto\",\"params\":[{\"name\":\"photo\",\"type\":\"Photo\"}],\"type\":\"MessageAction\"},{\"id\":\"-1780220945\",\"predicate\":\"messageActionChatDeletePhoto\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":\"1217033015\",\"predicate\":\"messageActionChatAddUser\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<int>\"}],\"type\":\"MessageAction\"},{\"id\":\"-1297179892\",\"predicate\":\"messageActionChatDeleteUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":\"739712882\",\"predicate\":\"dialog\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.2?true\"},{\"name\":\"unread_mark\",\"type\":\"flags.3?true\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"top_message\",\"type\":\"int\"},{\"name\":\"read_inbox_max_id\",\"type\":\"int\"},{\"name\":\"read_outbox_max_id\",\"type\":\"int\"},{\"name\":\"unread_count\",\"type\":\"int\"},{\"name\":\"unread_mentions_count\",\"type\":\"int\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"pts\",\"type\":\"flags.0?int\"},{\"name\":\"draft\",\"type\":\"flags.1?DraftMessage\"},{\"name\":\"folder_id\",\"type\":\"flags.4?int\"}],\"type\":\"Dialog\"},{\"id\":\"590459437\",\"predicate\":\"photoEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"Photo\"},{\"id\":\"-797637467\",\"predicate\":\"photo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_stickers\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"sizes\",\"type\":\"Vector<PhotoSize>\"},{\"name\":\"dc_id\",\"type\":\"int\"}],\"type\":\"Photo\"},{\"id\":\"236446268\",\"predicate\":\"photoSizeEmpty\",\"params\":[{\"name\":\"type\",\"type\":\"string\"}],\"type\":\"PhotoSize\"},{\"id\":\"2009052699\",\"predicate\":\"photoSize\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"location\",\"type\":\"FileLocation\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"size\",\"type\":\"int\"}],\"type\":\"PhotoSize\"},{\"id\":\"-374917894\",\"predicate\":\"photoCachedSize\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"location\",\"type\":\"FileLocation\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"PhotoSize\"},{\"id\":\"286776671\",\"predicate\":\"geoPointEmpty\",\"params\":[],\"type\":\"GeoPoint\"},{\"id\":\"43446532\",\"predicate\":\"geoPoint\",\"params\":[{\"name\":\"long\",\"type\":\"double\"},{\"name\":\"lat\",\"type\":\"double\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"GeoPoint\"},{\"id\":\"1577067778\",\"predicate\":\"auth.sentCode\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"type\",\"type\":\"auth.SentCodeType\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"next_type\",\"type\":\"flags.1?auth.CodeType\"},{\"name\":\"timeout\",\"type\":\"flags.2?int\"}],\"type\":\"auth.SentCode\"},{\"id\":\"-855308010\",\"predicate\":\"auth.authorization\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"tmp_sessions\",\"type\":\"flags.0?int\"},{\"name\":\"user\",\"type\":\"User\"}],\"type\":\"auth.Authorization\"},{\"id\":\"-543777747\",\"predicate\":\"auth.exportedAuthorization\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"auth.ExportedAuthorization\"},{\"id\":\"-1195615476\",\"predicate\":\"inputNotifyPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"InputNotifyPeer\"},{\"id\":\"423314455\",\"predicate\":\"inputNotifyUsers\",\"params\":[],\"type\":\"InputNotifyPeer\"},{\"id\":\"1251338318\",\"predicate\":\"inputNotifyChats\",\"params\":[],\"type\":\"InputNotifyPeer\"},{\"id\":\"-1673717362\",\"predicate\":\"inputPeerNotifySettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"show_previews\",\"type\":\"flags.0?Bool\"},{\"name\":\"silent\",\"type\":\"flags.1?Bool\"},{\"name\":\"mute_until\",\"type\":\"flags.2?int\"},{\"name\":\"sound\",\"type\":\"flags.3?string\"}],\"type\":\"InputPeerNotifySettings\"},{\"id\":\"-1353671392\",\"predicate\":\"peerNotifySettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"show_previews\",\"type\":\"flags.0?Bool\"},{\"name\":\"silent\",\"type\":\"flags.1?Bool\"},{\"name\":\"mute_until\",\"type\":\"flags.2?int\"},{\"name\":\"sound\",\"type\":\"flags.3?string\"}],\"type\":\"PeerNotifySettings\"},{\"id\":\"-2122045747\",\"predicate\":\"peerSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"report_spam\",\"type\":\"flags.0?true\"},{\"name\":\"add_contact\",\"type\":\"flags.1?true\"},{\"name\":\"block_contact\",\"type\":\"flags.2?true\"},{\"name\":\"share_contact\",\"type\":\"flags.3?true\"},{\"name\":\"need_contacts_exception\",\"type\":\"flags.4?true\"},{\"name\":\"report_geo\",\"type\":\"flags.5?true\"}],\"type\":\"PeerSettings\"},{\"id\":\"-1539849235\",\"predicate\":\"wallPaper\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"default\",\"type\":\"flags.1?true\"},{\"name\":\"pattern\",\"type\":\"flags.3?true\"},{\"name\":\"dark\",\"type\":\"flags.4?true\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"document\",\"type\":\"Document\"},{\"name\":\"settings\",\"type\":\"flags.2?WallPaperSettings\"}],\"type\":\"WallPaper\"},{\"id\":\"1490799288\",\"predicate\":\"inputReportReasonSpam\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":\"505595789\",\"predicate\":\"inputReportReasonViolence\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":\"777640226\",\"predicate\":\"inputReportReasonPornography\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":\"-1376497949\",\"predicate\":\"inputReportReasonChildAbuse\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":\"-512463606\",\"predicate\":\"inputReportReasonOther\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"ReportReason\"},{\"id\":\"-302941166\",\"predicate\":\"userFull\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"blocked\",\"type\":\"flags.0?true\"},{\"name\":\"phone_calls_available\",\"type\":\"flags.4?true\"},{\"name\":\"phone_calls_private\",\"type\":\"flags.5?true\"},{\"name\":\"can_pin_message\",\"type\":\"flags.7?true\"},{\"name\":\"has_scheduled\",\"type\":\"flags.12?true\"},{\"name\":\"user\",\"type\":\"User\"},{\"name\":\"about\",\"type\":\"flags.1?string\"},{\"name\":\"settings\",\"type\":\"PeerSettings\"},{\"name\":\"profile_photo\",\"type\":\"flags.2?Photo\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"bot_info\",\"type\":\"flags.3?BotInfo\"},{\"name\":\"pinned_msg_id\",\"type\":\"flags.6?int\"},{\"name\":\"common_chats_count\",\"type\":\"int\"},{\"name\":\"folder_id\",\"type\":\"flags.11?int\"}],\"type\":\"UserFull\"},{\"id\":\"-116274796\",\"predicate\":\"contact\",\"params\":[{\"name\":\"user_id\",\"type\":\"int\"},{\"name\":\"mutual\",\"type\":\"Bool\"}],\"type\":\"Contact\"},{\"id\":\"-805141448\",\"predicate\":\"importedContact\",\"params\":[{\"name\":\"user_id\",\"type\":\"int\"},{\"name\":\"client_id\",\"type\":\"long\"}],\"type\":\"ImportedContact\"},{\"id\":\"1444661369\",\"predicate\":\"contactBlocked\",\"params\":[{\"name\":\"user_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ContactBlocked\"},{\"id\":\"-748155807\",\"predicate\":\"contactStatus\",\"params\":[{\"name\":\"user_id\",\"type\":\"int\"},{\"name\":\"status\",\"type\":\"UserStatus\"}],\"type\":\"ContactStatus\"},{\"id\":\"-1219778094\",\"predicate\":\"contacts.contactsNotModified\",\"params\":[],\"type\":\"contacts.Contacts\"},{\"id\":\"-353862078\",\"predicate\":\"contacts.contacts\",\"params\":[{\"name\":\"contacts\",\"type\":\"Vector<Contact>\"},{\"name\":\"saved_count\",\"type\":\"int\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.Contacts\"},{\"id\":\"2010127419\",\"predicate\":\"contacts.importedContacts\",\"params\":[{\"name\":\"imported\",\"type\":\"Vector<ImportedContact>\"},{\"name\":\"popular_invites\",\"type\":\"Vector<PopularContact>\"},{\"name\":\"retry_contacts\",\"type\":\"Vector<long>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.ImportedContacts\"},{\"id\":\"471043349\",\"predicate\":\"contacts.blocked\",\"params\":[{\"name\":\"blocked\",\"type\":\"Vector<ContactBlocked>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.Blocked\"},{\"id\":\"-1878523231\",\"predicate\":\"contacts.blockedSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"blocked\",\"type\":\"Vector<ContactBlocked>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.Blocked\"},{\"id\":\"364538944\",\"predicate\":\"messages.dialogs\",\"params\":[{\"name\":\"dialogs\",\"type\":\"Vector<Dialog>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Dialogs\"},{\"id\":\"1910543603\",\"predicate\":\"messages.dialogsSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"dialogs\",\"type\":\"Vector<Dialog>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Dialogs\"},{\"id\":\"-1938715001\",\"predicate\":\"messages.messages\",\"params\":[{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Messages\"},{\"id\":\"-923939298\",\"predicate\":\"messages.messagesSlice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inexact\",\"type\":\"flags.1?true\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"next_rate\",\"type\":\"flags.0?int\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Messages\"},{\"id\":\"1694474197\",\"predicate\":\"messages.chats\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<Chat>\"}],\"type\":\"messages.Chats\"},{\"id\":\"-438840932\",\"predicate\":\"messages.chatFull\",\"params\":[{\"name\":\"full_chat\",\"type\":\"ChatFull\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.ChatFull\"},{\"id\":\"-1269012015\",\"predicate\":\"messages.affectedHistory\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"offset\",\"type\":\"int\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":\"1474492012\",\"predicate\":\"inputMessagesFilterEmpty\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":\"-1777752804\",\"predicate\":\"inputMessagesFilterPhotos\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":\"-1614803355\",\"predicate\":\"inputMessagesFilterVideo\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":\"1458172132\",\"predicate\":\"inputMessagesFilterPhotoVideo\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":\"-1629621880\",\"predicate\":\"inputMessagesFilterDocument\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":\"2129714567\",\"predicate\":\"inputMessagesFilterUrl\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":\"-3644025\",\"predicate\":\"inputMessagesFilterGif\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":\"522914557\",\"predicate\":\"updateNewMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":\"1318109142\",\"predicate\":\"updateMessageID\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"random_id\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":\"-1576161051\",\"predicate\":\"updateDeleteMessages\",\"params\":[{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":\"1548249383\",\"predicate\":\"updateUserTyping\",\"params\":[{\"name\":\"user_id\",\"type\":\"int\"},{\"name\":\"action\",\"type\":\"SendMessageAction\"}],\"type\":\"Update\"},{\"id\":\"-1704596961\",\"predicate\":\"updateChatUserTyping\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"int\"},{\"name\":\"action\",\"type\":\"SendMessageAction\"}],\"type\":\"Update\"},{\"id\":\"125178264\",\"predicate\":\"updateChatParticipants\",\"params\":[{\"name\":\"participants\",\"type\":\"ChatParticipants\"}],\"type\":\"Update\"},{\"id\":\"469489699\",\"predicate\":\"updateUserStatus\",\"params\":[{\"name\":\"user_id\",\"type\":\"int\"},{\"name\":\"status\",\"type\":\"UserStatus\"}],\"type\":\"Update\"},{\"id\":\"-1489818765\",\"predicate\":\"updateUserName\",\"params\":[{\"name\":\"user_id\",\"type\":\"int\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":\"-1791935732\",\"predicate\":\"updateUserPhoto\",\"params\":[{\"name\":\"user_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"photo\",\"type\":\"UserProfilePhoto\"},{\"name\":\"previous\",\"type\":\"Bool\"}],\"type\":\"Update\"},{\"id\":\"-1519637954\",\"predicate\":\"updates.state\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"qts\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"seq\",\"type\":\"int\"},{\"name\":\"unread_count\",\"type\":\"int\"}],\"type\":\"updates.State\"},{\"id\":\"1567990072\",\"predicate\":\"updates.differenceEmpty\",\"params\":[{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"seq\",\"type\":\"int\"}],\"type\":\"updates.Difference\"},{\"id\":\"16030880\",\"predicate\":\"updates.difference\",\"params\":[{\"name\":\"new_messages\",\"type\":\"Vector<Message>\"},{\"name\":\"new_encrypted_messages\",\"type\":\"Vector<EncryptedMessage>\"},{\"name\":\"other_updates\",\"type\":\"Vector<Update>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"state\",\"type\":\"updates.State\"}],\"type\":\"updates.Difference\"},{\"id\":\"-1459938943\",\"predicate\":\"updates.differenceSlice\",\"params\":[{\"name\":\"new_messages\",\"type\":\"Vector<Message>\"},{\"name\":\"new_encrypted_messages\",\"type\":\"Vector<EncryptedMessage>\"},{\"name\":\"other_updates\",\"type\":\"Vector<Update>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"intermediate_state\",\"type\":\"updates.State\"}],\"type\":\"updates.Difference\"},{\"id\":\"-484987010\",\"predicate\":\"updatesTooLong\",\"params\":[],\"type\":\"Updates\"},{\"id\":\"-1857044719\",\"predicate\":\"updateShortMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"mentioned\",\"type\":\"flags.4?true\"},{\"name\":\"media_unread\",\"type\":\"flags.5?true\"},{\"name\":\"silent\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"int\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"fwd_from\",\"type\":\"flags.2?MessageFwdHeader\"},{\"name\":\"via_bot_id\",\"type\":\"flags.11?int\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.3?int\"},{\"name\":\"entities\",\"type\":\"flags.7?Vector<MessageEntity>\"}],\"type\":\"Updates\"},{\"id\":\"377562760\",\"predicate\":\"updateShortChatMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"mentioned\",\"type\":\"flags.4?true\"},{\"name\":\"media_unread\",\"type\":\"flags.5?true\"},{\"name\":\"silent\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"from_id\",\"type\":\"int\"},{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"fwd_from\",\"type\":\"flags.2?MessageFwdHeader\"},{\"name\":\"via_bot_id\",\"type\":\"flags.11?int\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.3?int\"},{\"name\":\"entities\",\"type\":\"flags.7?Vector<MessageEntity>\"}],\"type\":\"Updates\"},{\"id\":\"2027216577\",\"predicate\":\"updateShort\",\"params\":[{\"name\":\"update\",\"type\":\"Update\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":\"1918567619\",\"predicate\":\"updatesCombined\",\"params\":[{\"name\":\"updates\",\"type\":\"Vector<Update>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"seq_start\",\"type\":\"int\"},{\"name\":\"seq\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":\"1957577280\",\"predicate\":\"updates\",\"params\":[{\"name\":\"updates\",\"type\":\"Vector<Update>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"seq\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":\"-1916114267\",\"predicate\":\"photos.photos\",\"params\":[{\"name\":\"photos\",\"type\":\"Vector<Photo>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"photos.Photos\"},{\"id\":\"352657236\",\"predicate\":\"photos.photosSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"photos\",\"type\":\"Vector<Photo>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"photos.Photos\"},{\"id\":\"539045032\",\"predicate\":\"photos.photo\",\"params\":[{\"name\":\"photo\",\"type\":\"Photo\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"photos.Photo\"},{\"id\":\"157948117\",\"predicate\":\"upload.file\",\"params\":[{\"name\":\"type\",\"type\":\"storage.FileType\"},{\"name\":\"mtime\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"upload.File\"},{\"id\":\"414687501\",\"predicate\":\"dcOption\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"ipv6\",\"type\":\"flags.0?true\"},{\"name\":\"media_only\",\"type\":\"flags.1?true\"},{\"name\":\"tcpo_only\",\"type\":\"flags.2?true\"},{\"name\":\"cdn\",\"type\":\"flags.3?true\"},{\"name\":\"static\",\"type\":\"flags.4?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"ip_address\",\"type\":\"string\"},{\"name\":\"port\",\"type\":\"int\"},{\"name\":\"secret\",\"type\":\"flags.10?bytes\"}],\"type\":\"DcOption\"},{\"id\":\"856375399\",\"predicate\":\"config\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"phonecalls_enabled\",\"type\":\"flags.1?true\"},{\"name\":\"default_p2p_contacts\",\"type\":\"flags.3?true\"},{\"name\":\"preload_featured_stickers\",\"type\":\"flags.4?true\"},{\"name\":\"ignore_phone_entities\",\"type\":\"flags.5?true\"},{\"name\":\"revoke_pm_inbox\",\"type\":\"flags.6?true\"},{\"name\":\"blocked_mode\",\"type\":\"flags.8?true\"},{\"name\":\"pfs_enabled\",\"type\":\"flags.13?true\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"test_mode\",\"type\":\"Bool\"},{\"name\":\"this_dc\",\"type\":\"int\"},{\"name\":\"dc_options\",\"type\":\"Vector<DcOption>\"},{\"name\":\"dc_txt_domain_name\",\"type\":\"string\"},{\"name\":\"chat_size_max\",\"type\":\"int\"},{\"name\":\"megagroup_size_max\",\"type\":\"int\"},{\"name\":\"forwarded_count_max\",\"type\":\"int\"},{\"name\":\"online_update_period_ms\",\"type\":\"int\"},{\"name\":\"offline_blur_timeout_ms\",\"type\":\"int\"},{\"name\":\"offline_idle_timeout_ms\",\"type\":\"int\"},{\"name\":\"online_cloud_timeout_ms\",\"type\":\"int\"},{\"name\":\"notify_cloud_delay_ms\",\"type\":\"int\"},{\"name\":\"notify_default_delay_ms\",\"type\":\"int\"},{\"name\":\"push_chat_period_ms\",\"type\":\"int\"},{\"name\":\"push_chat_limit\",\"type\":\"int\"},{\"name\":\"saved_gifs_limit\",\"type\":\"int\"},{\"name\":\"edit_time_limit\",\"type\":\"int\"},{\"name\":\"revoke_time_limit\",\"type\":\"int\"},{\"name\":\"revoke_pm_time_limit\",\"type\":\"int\"},{\"name\":\"rating_e_decay\",\"type\":\"int\"},{\"name\":\"stickers_recent_limit\",\"type\":\"int\"},{\"name\":\"stickers_faved_limit\",\"type\":\"int\"},{\"name\":\"channels_read_media_period\",\"type\":\"int\"},{\"name\":\"tmp_sessions\",\"type\":\"flags.0?int\"},{\"name\":\"pinned_dialogs_count_max\",\"type\":\"int\"},{\"name\":\"pinned_infolder_count_max\",\"type\":\"int\"},{\"name\":\"call_receive_timeout_ms\",\"type\":\"int\"},{\"name\":\"call_ring_timeout_ms\",\"type\":\"int\"},{\"name\":\"call_connect_timeout_ms\",\"type\":\"int\"},{\"name\":\"call_packet_timeout_ms\",\"type\":\"int\"},{\"name\":\"me_url_prefix\",\"type\":\"string\"},{\"name\":\"autoupdate_url_prefix\",\"type\":\"flags.7?string\"},{\"name\":\"gif_search_username\",\"type\":\"flags.9?string\"},{\"name\":\"venue_search_username\",\"type\":\"flags.10?string\"},{\"name\":\"img_search_username\",\"type\":\"flags.11?string\"},{\"name\":\"static_maps_provider\",\"type\":\"flags.12?string\"},{\"name\":\"caption_length_max\",\"type\":\"int\"},{\"name\":\"message_length_max\",\"type\":\"int\"},{\"name\":\"webfile_dc_id\",\"type\":\"int\"},{\"name\":\"suggested_lang_code\",\"type\":\"flags.2?string\"},{\"name\":\"lang_pack_version\",\"type\":\"flags.2?int\"},{\"name\":\"base_lang_pack_version\",\"type\":\"flags.2?int\"}],\"type\":\"Config\"},{\"id\":\"-1910892683\",\"predicate\":\"nearestDc\",\"params\":[{\"name\":\"country\",\"type\":\"string\"},{\"name\":\"this_dc\",\"type\":\"int\"},{\"name\":\"nearest_dc\",\"type\":\"int\"}],\"type\":\"NearestDc\"},{\"id\":\"497489295\",\"predicate\":\"help.appUpdate\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_not_skip\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"},{\"name\":\"document\",\"type\":\"flags.1?Document\"},{\"name\":\"url\",\"type\":\"flags.2?string\"}],\"type\":\"help.AppUpdate\"},{\"id\":\"-1000708810\",\"predicate\":\"help.noAppUpdate\",\"params\":[],\"type\":\"help.AppUpdate\"},{\"id\":\"415997816\",\"predicate\":\"help.inviteText\",\"params\":[{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"help.InviteText\"},{\"id\":\"314359194\",\"predicate\":\"updateNewEncryptedMessage\",\"params\":[{\"name\":\"message\",\"type\":\"EncryptedMessage\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":\"386986326\",\"predicate\":\"updateEncryptedChatTyping\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":\"-1264392051\",\"predicate\":\"updateEncryption\",\"params\":[{\"name\":\"chat\",\"type\":\"EncryptedChat\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":\"956179895\",\"predicate\":\"updateEncryptedMessagesRead\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"max_date\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":\"-1417756512\",\"predicate\":\"encryptedChatEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"EncryptedChat\"},{\"id\":\"1006044124\",\"predicate\":\"encryptedChatWaiting\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"int\"},{\"name\":\"participant_id\",\"type\":\"int\"}],\"type\":\"EncryptedChat\"},{\"id\":\"-931638658\",\"predicate\":\"encryptedChatRequested\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"int\"},{\"name\":\"participant_id\",\"type\":\"int\"},{\"name\":\"g_a\",\"type\":\"bytes\"}],\"type\":\"EncryptedChat\"},{\"id\":\"-94974410\",\"predicate\":\"encryptedChat\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"int\"},{\"name\":\"participant_id\",\"type\":\"int\"},{\"name\":\"g_a_or_b\",\"type\":\"bytes\"},{\"name\":\"key_fingerprint\",\"type\":\"long\"}],\"type\":\"EncryptedChat\"},{\"id\":\"332848423\",\"predicate\":\"encryptedChatDiscarded\",\"params\":[{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"EncryptedChat\"},{\"id\":\"-247351839\",\"predicate\":\"inputEncryptedChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputEncryptedChat\"},{\"id\":\"-1038136962\",\"predicate\":\"encryptedFileEmpty\",\"params\":[],\"type\":\"EncryptedFile\"},{\"id\":\"1248893260\",\"predicate\":\"encryptedFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"key_fingerprint\",\"type\":\"int\"}],\"type\":\"EncryptedFile\"},{\"id\":\"406307684\",\"predicate\":\"inputEncryptedFileEmpty\",\"params\":[],\"type\":\"InputEncryptedFile\"},{\"id\":\"1690108678\",\"predicate\":\"inputEncryptedFileUploaded\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"md5_checksum\",\"type\":\"string\"},{\"name\":\"key_fingerprint\",\"type\":\"int\"}],\"type\":\"InputEncryptedFile\"},{\"id\":\"1511503333\",\"predicate\":\"inputEncryptedFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputEncryptedFile\"},{\"id\":\"-182231723\",\"predicate\":\"inputEncryptedFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputFileLocation\"},{\"id\":\"-317144808\",\"predicate\":\"encryptedMessage\",\"params\":[{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"},{\"name\":\"file\",\"type\":\"EncryptedFile\"}],\"type\":\"EncryptedMessage\"},{\"id\":\"594758406\",\"predicate\":\"encryptedMessageService\",\"params\":[{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"EncryptedMessage\"},{\"id\":\"-1058912715\",\"predicate\":\"messages.dhConfigNotModified\",\"params\":[{\"name\":\"random\",\"type\":\"bytes\"}],\"type\":\"messages.DhConfig\"},{\"id\":\"740433629\",\"predicate\":\"messages.dhConfig\",\"params\":[{\"name\":\"g\",\"type\":\"int\"},{\"name\":\"p\",\"type\":\"bytes\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"random\",\"type\":\"bytes\"}],\"type\":\"messages.DhConfig\"},{\"id\":\"1443858741\",\"predicate\":\"messages.sentEncryptedMessage\",\"params\":[{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":\"-1802240206\",\"predicate\":\"messages.sentEncryptedFile\",\"params\":[{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"file\",\"type\":\"EncryptedFile\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":\"-95482955\",\"predicate\":\"inputFileBig\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"InputFile\"},{\"id\":\"767652808\",\"predicate\":\"inputEncryptedFileBigUploaded\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"key_fingerprint\",\"type\":\"int\"}],\"type\":\"InputEncryptedFile\"},{\"id\":\"-364179876\",\"predicate\":\"updateChatParticipantAdd\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"int\"},{\"name\":\"inviter_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":\"1851755554\",\"predicate\":\"updateChatParticipantDelete\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":\"-1906403213\",\"predicate\":\"updateDcOptions\",\"params\":[{\"name\":\"dc_options\",\"type\":\"Vector<DcOption>\"}],\"type\":\"Update\"},{\"id\":\"1530447553\",\"predicate\":\"inputMediaUploadedDocument\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"nosound_video\",\"type\":\"flags.3?true\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"thumb\",\"type\":\"flags.2?InputFile\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"},{\"name\":\"stickers\",\"type\":\"flags.0?Vector<InputDocument>\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.1?int\"}],\"type\":\"InputMedia\"},{\"id\":\"598418386\",\"predicate\":\"inputMediaDocument\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.0?int\"}],\"type\":\"InputMedia\"},{\"id\":\"-1666158377\",\"predicate\":\"messageMediaDocument\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"document\",\"type\":\"flags.0?Document\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.2?int\"}],\"type\":\"MessageMedia\"},{\"id\":\"1928391342\",\"predicate\":\"inputDocumentEmpty\",\"params\":[],\"type\":\"InputDocument\"},{\"id\":\"448771445\",\"predicate\":\"inputDocument\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"}],\"type\":\"InputDocument\"},{\"id\":\"-1160743548\",\"predicate\":\"inputDocumentFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"thumb_size\",\"type\":\"string\"}],\"type\":\"InputFileLocation\"},{\"id\":\"922273905\",\"predicate\":\"documentEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"Document\"},{\"id\":\"-1683841855\",\"predicate\":\"document\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"thumbs\",\"type\":\"flags.0?Vector<PhotoSize>\"},{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"}],\"type\":\"Document\"},{\"id\":\"398898678\",\"predicate\":\"help.support\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"user\",\"type\":\"User\"}],\"type\":\"help.Support\"},{\"id\":\"-1613493288\",\"predicate\":\"notifyPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"}],\"type\":\"NotifyPeer\"},{\"id\":\"-1261946036\",\"predicate\":\"notifyUsers\",\"params\":[],\"type\":\"NotifyPeer\"},{\"id\":\"-1073230141\",\"predicate\":\"notifyChats\",\"params\":[],\"type\":\"NotifyPeer\"},{\"id\":\"-2131957734\",\"predicate\":\"updateUserBlocked\",\"params\":[{\"name\":\"user_id\",\"type\":\"int\"},{\"name\":\"blocked\",\"type\":\"Bool\"}],\"type\":\"Update\"},{\"id\":\"-1094555409\",\"predicate\":\"updateNotifySettings\",\"params\":[{\"name\":\"peer\",\"type\":\"NotifyPeer\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"}],\"type\":\"Update\"},{\"id\":\"381645902\",\"predicate\":\"sendMessageTypingAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":\"-44119819\",\"predicate\":\"sendMessageCancelAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":\"-1584933265\",\"predicate\":\"sendMessageRecordVideoAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":\"-378127636\",\"predicate\":\"sendMessageUploadVideoAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":\"-718310409\",\"predicate\":\"sendMessageRecordAudioAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":\"-212740181\",\"predicate\":\"sendMessageUploadAudioAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":\"-774682074\",\"predicate\":\"sendMessageUploadPhotoAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":\"-1441998364\",\"predicate\":\"sendMessageUploadDocumentAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":\"393186209\",\"predicate\":\"sendMessageGeoLocationAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":\"1653390447\",\"predicate\":\"sendMessageChooseContactAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":\"-1290580579\",\"predicate\":\"contacts.found\",\"params\":[{\"name\":\"my_results\",\"type\":\"Vector<Peer>\"},{\"name\":\"results\",\"type\":\"Vector<Peer>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.Found\"},{\"id\":\"-337352679\",\"predicate\":\"updateServiceNotification\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"popup\",\"type\":\"flags.0?true\"},{\"name\":\"inbox_date\",\"type\":\"flags.1?int\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"media\",\"type\":\"MessageMedia\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"}],\"type\":\"Update\"},{\"id\":\"-496024847\",\"predicate\":\"userStatusRecently\",\"params\":[],\"type\":\"UserStatus\"},{\"id\":\"129960444\",\"predicate\":\"userStatusLastWeek\",\"params\":[],\"type\":\"UserStatus\"},{\"id\":\"2011940674\",\"predicate\":\"userStatusLastMonth\",\"params\":[],\"type\":\"UserStatus\"},{\"id\":\"-298113238\",\"predicate\":\"updatePrivacy\",\"params\":[{\"name\":\"key\",\"type\":\"PrivacyKey\"},{\"name\":\"rules\",\"type\":\"Vector<PrivacyRule>\"}],\"type\":\"Update\"},{\"id\":\"1335282456\",\"predicate\":\"inputPrivacyKeyStatusTimestamp\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":\"-1137792208\",\"predicate\":\"privacyKeyStatusTimestamp\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":\"218751099\",\"predicate\":\"inputPrivacyValueAllowContacts\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":\"407582158\",\"predicate\":\"inputPrivacyValueAllowAll\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":\"320652927\",\"predicate\":\"inputPrivacyValueAllowUsers\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<InputUser>\"}],\"type\":\"InputPrivacyRule\"},{\"id\":\"195371015\",\"predicate\":\"inputPrivacyValueDisallowContacts\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":\"-697604407\",\"predicate\":\"inputPrivacyValueDisallowAll\",\"params\":[],\"type\":\"InputPrivacyRule\"},{\"id\":\"-1877932953\",\"predicate\":\"inputPrivacyValueDisallowUsers\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<InputUser>\"}],\"type\":\"InputPrivacyRule\"},{\"id\":\"-123988\",\"predicate\":\"privacyValueAllowContacts\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":\"1698855810\",\"predicate\":\"privacyValueAllowAll\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":\"1297858060\",\"predicate\":\"privacyValueAllowUsers\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<int>\"}],\"type\":\"PrivacyRule\"},{\"id\":\"-125240806\",\"predicate\":\"privacyValueDisallowContacts\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":\"-1955338397\",\"predicate\":\"privacyValueDisallowAll\",\"params\":[],\"type\":\"PrivacyRule\"},{\"id\":\"209668535\",\"predicate\":\"privacyValueDisallowUsers\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<int>\"}],\"type\":\"PrivacyRule\"},{\"id\":\"1352683077\",\"predicate\":\"account.privacyRules\",\"params\":[{\"name\":\"rules\",\"type\":\"Vector<PrivacyRule>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"account.PrivacyRules\"},{\"id\":\"-1194283041\",\"predicate\":\"accountDaysTTL\",\"params\":[{\"name\":\"days\",\"type\":\"int\"}],\"type\":\"AccountDaysTTL\"},{\"id\":\"314130811\",\"predicate\":\"updateUserPhone\",\"params\":[{\"name\":\"user_id\",\"type\":\"int\"},{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":\"1815593308\",\"predicate\":\"documentAttributeImageSize\",\"params\":[{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"}],\"type\":\"DocumentAttribute\"},{\"id\":\"297109817\",\"predicate\":\"documentAttributeAnimated\",\"params\":[],\"type\":\"DocumentAttribute\"},{\"id\":\"1662637586\",\"predicate\":\"documentAttributeSticker\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"mask\",\"type\":\"flags.1?true\"},{\"name\":\"alt\",\"type\":\"string\"},{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"mask_coords\",\"type\":\"flags.0?MaskCoords\"}],\"type\":\"DocumentAttribute\"},{\"id\":\"250621158\",\"predicate\":\"documentAttributeVideo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"round_message\",\"type\":\"flags.0?true\"},{\"name\":\"supports_streaming\",\"type\":\"flags.1?true\"},{\"name\":\"duration\",\"type\":\"int\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"}],\"type\":\"DocumentAttribute\"},{\"id\":\"-1739392570\",\"predicate\":\"documentAttributeAudio\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"voice\",\"type\":\"flags.10?true\"},{\"name\":\"duration\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"performer\",\"type\":\"flags.1?string\"},{\"name\":\"waveform\",\"type\":\"flags.2?bytes\"}],\"type\":\"DocumentAttribute\"},{\"id\":\"358154344\",\"predicate\":\"documentAttributeFilename\",\"params\":[{\"name\":\"file_name\",\"type\":\"string\"}],\"type\":\"DocumentAttribute\"},{\"id\":\"-244016606\",\"predicate\":\"messages.stickersNotModified\",\"params\":[],\"type\":\"messages.Stickers\"},{\"id\":\"-463889475\",\"predicate\":\"messages.stickers\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"stickers\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.Stickers\"},{\"id\":\"313694676\",\"predicate\":\"stickerPack\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"},{\"name\":\"documents\",\"type\":\"Vector<long>\"}],\"type\":\"StickerPack\"},{\"id\":\"-395967805\",\"predicate\":\"messages.allStickersNotModified\",\"params\":[],\"type\":\"messages.AllStickers\"},{\"id\":\"-302170017\",\"predicate\":\"messages.allStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"sets\",\"type\":\"Vector<StickerSet>\"}],\"type\":\"messages.AllStickers\"},{\"id\":\"-1667805217\",\"predicate\":\"updateReadHistoryInbox\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.0?int\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"still_unread_count\",\"type\":\"int\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":\"791617983\",\"predicate\":\"updateReadHistoryOutbox\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":\"-2066640507\",\"predicate\":\"messages.affectedMessages\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":\"2139689491\",\"predicate\":\"updateWebPage\",\"params\":[{\"name\":\"webpage\",\"type\":\"WebPage\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":\"-350980120\",\"predicate\":\"webPageEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"WebPage\"},{\"id\":\"-981018084\",\"predicate\":\"webPagePending\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"WebPage\"},{\"id\":\"-392411726\",\"predicate\":\"webPage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"display_url\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"type\",\"type\":\"flags.0?string\"},{\"name\":\"site_name\",\"type\":\"flags.1?string\"},{\"name\":\"title\",\"type\":\"flags.2?string\"},{\"name\":\"description\",\"type\":\"flags.3?string\"},{\"name\":\"photo\",\"type\":\"flags.4?Photo\"},{\"name\":\"embed_url\",\"type\":\"flags.5?string\"},{\"name\":\"embed_type\",\"type\":\"flags.5?string\"},{\"name\":\"embed_width\",\"type\":\"flags.6?int\"},{\"name\":\"embed_height\",\"type\":\"flags.6?int\"},{\"name\":\"duration\",\"type\":\"flags.7?int\"},{\"name\":\"author\",\"type\":\"flags.8?string\"},{\"name\":\"document\",\"type\":\"flags.9?Document\"},{\"name\":\"cached_page\",\"type\":\"flags.10?Page\"},{\"name\":\"attributes\",\"type\":\"flags.12?Vector<WebPageAttribute>\"}],\"type\":\"WebPage\"},{\"id\":\"-1557277184\",\"predicate\":\"messageMediaWebPage\",\"params\":[{\"name\":\"webpage\",\"type\":\"WebPage\"}],\"type\":\"MessageMedia\"},{\"id\":\"-1392388579\",\"predicate\":\"authorization\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"current\",\"type\":\"flags.0?true\"},{\"name\":\"official_app\",\"type\":\"flags.1?true\"},{\"name\":\"password_pending\",\"type\":\"flags.2?true\"},{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"device_model\",\"type\":\"string\"},{\"name\":\"platform\",\"type\":\"string\"},{\"name\":\"system_version\",\"type\":\"string\"},{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"app_name\",\"type\":\"string\"},{\"name\":\"app_version\",\"type\":\"string\"},{\"name\":\"date_created\",\"type\":\"int\"},{\"name\":\"date_active\",\"type\":\"int\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"country\",\"type\":\"string\"},{\"name\":\"region\",\"type\":\"string\"}],\"type\":\"Authorization\"},{\"id\":\"307276766\",\"predicate\":\"account.authorizations\",\"params\":[{\"name\":\"authorizations\",\"type\":\"Vector<Authorization>\"}],\"type\":\"account.Authorizations\"},{\"id\":\"-1390001672\",\"predicate\":\"account.password\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_recovery\",\"type\":\"flags.0?true\"},{\"name\":\"has_secure_values\",\"type\":\"flags.1?true\"},{\"name\":\"has_password\",\"type\":\"flags.2?true\"},{\"name\":\"current_algo\",\"type\":\"flags.2?PasswordKdfAlgo\"},{\"name\":\"srp_B\",\"type\":\"flags.2?bytes\"},{\"name\":\"srp_id\",\"type\":\"flags.2?long\"},{\"name\":\"hint\",\"type\":\"flags.3?string\"},{\"name\":\"email_unconfirmed_pattern\",\"type\":\"flags.4?string\"},{\"name\":\"new_algo\",\"type\":\"PasswordKdfAlgo\"},{\"name\":\"new_secure_algo\",\"type\":\"SecurePasswordKdfAlgo\"},{\"name\":\"secure_random\",\"type\":\"bytes\"}],\"type\":\"account.Password\"},{\"id\":\"-1705233435\",\"predicate\":\"account.passwordSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"email\",\"type\":\"flags.0?string\"},{\"name\":\"secure_settings\",\"type\":\"flags.1?SecureSecretSettings\"}],\"type\":\"account.PasswordSettings\"},{\"id\":\"-1036572727\",\"predicate\":\"account.passwordInputSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"new_algo\",\"type\":\"flags.0?PasswordKdfAlgo\"},{\"name\":\"new_password_hash\",\"type\":\"flags.0?bytes\"},{\"name\":\"hint\",\"type\":\"flags.0?string\"},{\"name\":\"email\",\"type\":\"flags.1?string\"},{\"name\":\"new_secure_settings\",\"type\":\"flags.2?SecureSecretSettings\"}],\"type\":\"account.PasswordInputSettings\"},{\"id\":\"326715557\",\"predicate\":\"auth.passwordRecovery\",\"params\":[{\"name\":\"email_pattern\",\"type\":\"string\"}],\"type\":\"auth.PasswordRecovery\"},{\"id\":\"-1052959727\",\"predicate\":\"inputMediaVenue\",\"params\":[{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"}],\"type\":\"InputMedia\"},{\"id\":\"784356159\",\"predicate\":\"messageMediaVenue\",\"params\":[{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"}],\"type\":\"MessageMedia\"},{\"id\":\"-1551583367\",\"predicate\":\"receivedNotifyMessage\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"flags\",\"type\":\"int\"}],\"type\":\"ReceivedNotifyMessage\"},{\"id\":\"1776236393\",\"predicate\":\"chatInviteEmpty\",\"params\":[],\"type\":\"ExportedChatInvite\"},{\"id\":\"-64092740\",\"predicate\":\"chatInviteExported\",\"params\":[{\"name\":\"link\",\"type\":\"string\"}],\"type\":\"ExportedChatInvite\"},{\"id\":\"1516793212\",\"predicate\":\"chatInviteAlready\",\"params\":[{\"name\":\"chat\",\"type\":\"Chat\"}],\"type\":\"ChatInvite\"},{\"id\":\"-540871282\",\"predicate\":\"chatInvite\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel\",\"type\":\"flags.0?true\"},{\"name\":\"broadcast\",\"type\":\"flags.1?true\"},{\"name\":\"public\",\"type\":\"flags.2?true\"},{\"name\":\"megagroup\",\"type\":\"flags.3?true\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"Photo\"},{\"name\":\"participants_count\",\"type\":\"int\"},{\"name\":\"participants\",\"type\":\"flags.4?Vector<User>\"}],\"type\":\"ChatInvite\"},{\"id\":\"-123931160\",\"predicate\":\"messageActionChatJoinedByLink\",\"params\":[{\"name\":\"inviter_id\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":\"1757493555\",\"predicate\":\"updateReadMessagesContents\",\"params\":[{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":\"-4838507\",\"predicate\":\"inputStickerSetEmpty\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":\"-1645763991\",\"predicate\":\"inputStickerSetID\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputStickerSet\"},{\"id\":\"-2044933984\",\"predicate\":\"inputStickerSetShortName\",\"params\":[{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"InputStickerSet\"},{\"id\":\"-290164953\",\"predicate\":\"stickerSet\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"archived\",\"type\":\"flags.1?true\"},{\"name\":\"official\",\"type\":\"flags.2?true\"},{\"name\":\"masks\",\"type\":\"flags.3?true\"},{\"name\":\"animated\",\"type\":\"flags.5?true\"},{\"name\":\"installed_date\",\"type\":\"flags.0?int\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"thumb\",\"type\":\"flags.4?PhotoSize\"},{\"name\":\"thumb_dc_id\",\"type\":\"flags.4?int\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"StickerSet\"},{\"id\":\"-1240849242\",\"predicate\":\"messages.stickerSet\",\"params\":[{\"name\":\"set\",\"type\":\"StickerSet\"},{\"name\":\"packs\",\"type\":\"Vector<StickerPack>\"},{\"name\":\"documents\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.StickerSet\"},{\"id\":\"-1820043071\",\"predicate\":\"user\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"self\",\"type\":\"flags.10?true\"},{\"name\":\"contact\",\"type\":\"flags.11?true\"},{\"name\":\"mutual_contact\",\"type\":\"flags.12?true\"},{\"name\":\"deleted\",\"type\":\"flags.13?true\"},{\"name\":\"bot\",\"type\":\"flags.14?true\"},{\"name\":\"bot_chat_history\",\"type\":\"flags.15?true\"},{\"name\":\"bot_nochats\",\"type\":\"flags.16?true\"},{\"name\":\"verified\",\"type\":\"flags.17?true\"},{\"name\":\"restricted\",\"type\":\"flags.18?true\"},{\"name\":\"min\",\"type\":\"flags.20?true\"},{\"name\":\"bot_inline_geo\",\"type\":\"flags.21?true\"},{\"name\":\"support\",\"type\":\"flags.23?true\"},{\"name\":\"scam\",\"type\":\"flags.24?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"flags.0?long\"},{\"name\":\"first_name\",\"type\":\"flags.1?string\"},{\"name\":\"last_name\",\"type\":\"flags.2?string\"},{\"name\":\"username\",\"type\":\"flags.3?string\"},{\"name\":\"phone\",\"type\":\"flags.4?string\"},{\"name\":\"photo\",\"type\":\"flags.5?UserProfilePhoto\"},{\"name\":\"status\",\"type\":\"flags.6?UserStatus\"},{\"name\":\"bot_info_version\",\"type\":\"flags.14?int\"},{\"name\":\"restriction_reason\",\"type\":\"flags.18?Vector<RestrictionReason>\"},{\"name\":\"bot_inline_placeholder\",\"type\":\"flags.19?string\"},{\"name\":\"lang_code\",\"type\":\"flags.22?string\"}],\"type\":\"User\"},{\"id\":\"-1032140601\",\"predicate\":\"botCommand\",\"params\":[{\"name\":\"command\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"}],\"type\":\"BotCommand\"},{\"id\":\"-1729618630\",\"predicate\":\"botInfo\",\"params\":[{\"name\":\"user_id\",\"type\":\"int\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"commands\",\"type\":\"Vector<BotCommand>\"}],\"type\":\"BotInfo\"},{\"id\":\"-1560655744\",\"predicate\":\"keyboardButton\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":\"2002815875\",\"predicate\":\"keyboardButtonRow\",\"params\":[{\"name\":\"buttons\",\"type\":\"Vector<KeyboardButton>\"}],\"type\":\"KeyboardButtonRow\"},{\"id\":\"-1606526075\",\"predicate\":\"replyKeyboardHide\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"selective\",\"type\":\"flags.2?true\"}],\"type\":\"ReplyMarkup\"},{\"id\":\"-200242528\",\"predicate\":\"replyKeyboardForceReply\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"single_use\",\"type\":\"flags.1?true\"},{\"name\":\"selective\",\"type\":\"flags.2?true\"}],\"type\":\"ReplyMarkup\"},{\"id\":\"889353612\",\"predicate\":\"replyKeyboardMarkup\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"resize\",\"type\":\"flags.0?true\"},{\"name\":\"single_use\",\"type\":\"flags.1?true\"},{\"name\":\"selective\",\"type\":\"flags.2?true\"},{\"name\":\"rows\",\"type\":\"Vector<KeyboardButtonRow>\"}],\"type\":\"ReplyMarkup\"},{\"id\":\"2072935910\",\"predicate\":\"inputPeerUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":\"-668391402\",\"predicate\":\"inputUser\",\"params\":[{\"name\":\"user_id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputUser\"},{\"id\":\"-1148011883\",\"predicate\":\"messageEntityUnknown\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":\"-100378723\",\"predicate\":\"messageEntityMention\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":\"1868782349\",\"predicate\":\"messageEntityHashtag\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":\"1827637959\",\"predicate\":\"messageEntityBotCommand\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":\"1859134776\",\"predicate\":\"messageEntityUrl\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":\"1692693954\",\"predicate\":\"messageEntityEmail\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":\"-1117713463\",\"predicate\":\"messageEntityBold\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":\"-2106619040\",\"predicate\":\"messageEntityItalic\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":\"681706865\",\"predicate\":\"messageEntityCode\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":\"1938967520\",\"predicate\":\"messageEntityPre\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"language\",\"type\":\"string\"}],\"type\":\"MessageEntity\"},{\"id\":\"1990644519\",\"predicate\":\"messageEntityTextUrl\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"MessageEntity\"},{\"id\":\"301019932\",\"predicate\":\"updateShortSentMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"out\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"media\",\"type\":\"flags.9?MessageMedia\"},{\"name\":\"entities\",\"type\":\"flags.7?Vector<MessageEntity>\"}],\"type\":\"Updates\"},{\"id\":\"-292807034\",\"predicate\":\"inputChannelEmpty\",\"params\":[],\"type\":\"InputChannel\"},{\"id\":\"-1343524562\",\"predicate\":\"inputChannel\",\"params\":[{\"name\":\"channel_id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputChannel\"},{\"id\":\"-1109531342\",\"predicate\":\"peerChannel\",\"params\":[{\"name\":\"channel_id\",\"type\":\"int\"}],\"type\":\"Peer\"},{\"id\":\"548253432\",\"predicate\":\"inputPeerChannel\",\"params\":[{\"name\":\"channel_id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputPeer\"},{\"id\":\"-753232354\",\"predicate\":\"channel\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"left\",\"type\":\"flags.2?true\"},{\"name\":\"broadcast\",\"type\":\"flags.5?true\"},{\"name\":\"verified\",\"type\":\"flags.7?true\"},{\"name\":\"megagroup\",\"type\":\"flags.8?true\"},{\"name\":\"restricted\",\"type\":\"flags.9?true\"},{\"name\":\"signatures\",\"type\":\"flags.11?true\"},{\"name\":\"min\",\"type\":\"flags.12?true\"},{\"name\":\"scam\",\"type\":\"flags.19?true\"},{\"name\":\"has_link\",\"type\":\"flags.20?true\"},{\"name\":\"has_geo\",\"type\":\"flags.21?true\"},{\"name\":\"slowmode_enabled\",\"type\":\"flags.22?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"flags.13?long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"username\",\"type\":\"flags.6?string\"},{\"name\":\"photo\",\"type\":\"ChatPhoto\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"restriction_reason\",\"type\":\"flags.9?Vector<RestrictionReason>\"},{\"name\":\"admin_rights\",\"type\":\"flags.14?ChatAdminRights\"},{\"name\":\"banned_rights\",\"type\":\"flags.15?ChatBannedRights\"},{\"name\":\"default_banned_rights\",\"type\":\"flags.18?ChatBannedRights\"},{\"name\":\"participants_count\",\"type\":\"flags.17?int\"}],\"type\":\"Chat\"},{\"id\":\"681420594\",\"predicate\":\"channelForbidden\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"broadcast\",\"type\":\"flags.5?true\"},{\"name\":\"megagroup\",\"type\":\"flags.8?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"until_date\",\"type\":\"flags.16?int\"}],\"type\":\"Chat\"},{\"id\":\"2131196633\",\"predicate\":\"contacts.resolvedPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.ResolvedPeer\"},{\"id\":\"-253335766\",\"predicate\":\"channelFull\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_view_participants\",\"type\":\"flags.3?true\"},{\"name\":\"can_set_username\",\"type\":\"flags.6?true\"},{\"name\":\"can_set_stickers\",\"type\":\"flags.7?true\"},{\"name\":\"hidden_prehistory\",\"type\":\"flags.10?true\"},{\"name\":\"can_view_stats\",\"type\":\"flags.12?true\"},{\"name\":\"can_set_location\",\"type\":\"flags.16?true\"},{\"name\":\"has_scheduled\",\"type\":\"flags.19?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"participants_count\",\"type\":\"flags.0?int\"},{\"name\":\"admins_count\",\"type\":\"flags.1?int\"},{\"name\":\"kicked_count\",\"type\":\"flags.2?int\"},{\"name\":\"banned_count\",\"type\":\"flags.2?int\"},{\"name\":\"online_count\",\"type\":\"flags.13?int\"},{\"name\":\"read_inbox_max_id\",\"type\":\"int\"},{\"name\":\"read_outbox_max_id\",\"type\":\"int\"},{\"name\":\"unread_count\",\"type\":\"int\"},{\"name\":\"chat_photo\",\"type\":\"Photo\"},{\"name\":\"notify_settings\",\"type\":\"PeerNotifySettings\"},{\"name\":\"exported_invite\",\"type\":\"ExportedChatInvite\"},{\"name\":\"bot_info\",\"type\":\"Vector<BotInfo>\"},{\"name\":\"migrated_from_chat_id\",\"type\":\"flags.4?int\"},{\"name\":\"migrated_from_max_id\",\"type\":\"flags.4?int\"},{\"name\":\"pinned_msg_id\",\"type\":\"flags.5?int\"},{\"name\":\"stickerset\",\"type\":\"flags.8?StickerSet\"},{\"name\":\"available_min_id\",\"type\":\"flags.9?int\"},{\"name\":\"folder_id\",\"type\":\"flags.11?int\"},{\"name\":\"linked_chat_id\",\"type\":\"flags.14?int\"},{\"name\":\"location\",\"type\":\"flags.15?ChannelLocation\"},{\"name\":\"slowmode_seconds\",\"type\":\"flags.17?int\"},{\"name\":\"slowmode_next_send_date\",\"type\":\"flags.18?int\"},{\"name\":\"stats_dc\",\"type\":\"flags.12?int\"},{\"name\":\"pts\",\"type\":\"int\"}],\"type\":\"ChatFull\"},{\"id\":\"182649427\",\"predicate\":\"messageRange\",\"params\":[{\"name\":\"min_id\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"MessageRange\"},{\"id\":\"-1725551049\",\"predicate\":\"messages.channelMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inexact\",\"type\":\"flags.1?true\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.Messages\"},{\"id\":\"-1781355374\",\"predicate\":\"messageActionChannelCreate\",\"params\":[{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":\"-352032773\",\"predicate\":\"updateChannelTooLong\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel_id\",\"type\":\"int\"},{\"name\":\"pts\",\"type\":\"flags.0?int\"}],\"type\":\"Update\"},{\"id\":\"-1227598250\",\"predicate\":\"updateChannel\",\"params\":[{\"name\":\"channel_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":\"1656358105\",\"predicate\":\"updateNewChannelMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":\"856380452\",\"predicate\":\"updateReadChannelInbox\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.0?int\"},{\"name\":\"channel_id\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"still_unread_count\",\"type\":\"int\"},{\"name\":\"pts\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":\"-1015733815\",\"predicate\":\"updateDeleteChannelMessages\",\"params\":[{\"name\":\"channel_id\",\"type\":\"int\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":\"-1734268085\",\"predicate\":\"updateChannelMessageViews\",\"params\":[{\"name\":\"channel_id\",\"type\":\"int\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"views\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":\"1041346555\",\"predicate\":\"updates.channelDifferenceEmpty\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"final\",\"type\":\"flags.0?true\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"timeout\",\"type\":\"flags.1?int\"}],\"type\":\"updates.ChannelDifference\"},{\"id\":\"-1531132162\",\"predicate\":\"updates.channelDifferenceTooLong\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"final\",\"type\":\"flags.0?true\"},{\"name\":\"timeout\",\"type\":\"flags.1?int\"},{\"name\":\"dialog\",\"type\":\"Dialog\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"updates.ChannelDifference\"},{\"id\":\"543450958\",\"predicate\":\"updates.channelDifference\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"final\",\"type\":\"flags.0?true\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"timeout\",\"type\":\"flags.1?int\"},{\"name\":\"new_messages\",\"type\":\"Vector<Message>\"},{\"name\":\"other_updates\",\"type\":\"Vector<Update>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"updates.ChannelDifference\"},{\"id\":\"-1798033689\",\"predicate\":\"channelMessagesFilterEmpty\",\"params\":[],\"type\":\"ChannelMessagesFilter\"},{\"id\":\"-847783593\",\"predicate\":\"channelMessagesFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"exclude_new_messages\",\"type\":\"flags.1?true\"},{\"name\":\"ranges\",\"type\":\"Vector<MessageRange>\"}],\"type\":\"ChannelMessagesFilter\"},{\"id\":\"367766557\",\"predicate\":\"channelParticipant\",\"params\":[{\"name\":\"user_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ChannelParticipant\"},{\"id\":\"-1557620115\",\"predicate\":\"channelParticipantSelf\",\"params\":[{\"name\":\"user_id\",\"type\":\"int\"},{\"name\":\"inviter_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ChannelParticipant\"},{\"id\":\"-2138237532\",\"predicate\":\"channelParticipantCreator\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"user_id\",\"type\":\"int\"},{\"name\":\"rank\",\"type\":\"flags.0?string\"}],\"type\":\"ChannelParticipant\"},{\"id\":\"-566281095\",\"predicate\":\"channelParticipantsRecent\",\"params\":[],\"type\":\"ChannelParticipantsFilter\"},{\"id\":\"-1268741783\",\"predicate\":\"channelParticipantsAdmins\",\"params\":[],\"type\":\"ChannelParticipantsFilter\"},{\"id\":\"-1548400251\",\"predicate\":\"channelParticipantsKicked\",\"params\":[{\"name\":\"q\",\"type\":\"string\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":\"-177282392\",\"predicate\":\"channels.channelParticipants\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"participants\",\"type\":\"Vector<ChannelParticipant>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"channels.ChannelParticipants\"},{\"id\":\"-791039645\",\"predicate\":\"channels.channelParticipant\",\"params\":[{\"name\":\"participant\",\"type\":\"ChannelParticipant\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"channels.ChannelParticipant\"},{\"id\":\"-636267638\",\"predicate\":\"chatParticipantCreator\",\"params\":[{\"name\":\"user_id\",\"type\":\"int\"}],\"type\":\"ChatParticipant\"},{\"id\":\"-489233354\",\"predicate\":\"chatParticipantAdmin\",\"params\":[{\"name\":\"user_id\",\"type\":\"int\"},{\"name\":\"inviter_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"ChatParticipant\"},{\"id\":\"-1232070311\",\"predicate\":\"updateChatParticipantAdmin\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"int\"},{\"name\":\"is_admin\",\"type\":\"Bool\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":\"1371385889\",\"predicate\":\"messageActionChatMigrateTo\",\"params\":[{\"name\":\"channel_id\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":\"-1336546578\",\"predicate\":\"messageActionChannelMigrateFrom\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"chat_id\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":\"-1328445861\",\"predicate\":\"channelParticipantsBots\",\"params\":[],\"type\":\"ChannelParticipantsFilter\"},{\"id\":\"2013922064\",\"predicate\":\"help.termsOfService\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"popup\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"DataJSON\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"},{\"name\":\"min_age_confirm\",\"type\":\"flags.1?int\"}],\"type\":\"help.TermsOfService\"},{\"id\":\"1753886890\",\"predicate\":\"updateNewStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"messages.StickerSet\"}],\"type\":\"Update\"},{\"id\":\"196268545\",\"predicate\":\"updateStickerSetsOrder\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"order\",\"type\":\"Vector<long>\"}],\"type\":\"Update\"},{\"id\":\"1135492588\",\"predicate\":\"updateStickerSets\",\"params\":[],\"type\":\"Update\"},{\"id\":\"372165663\",\"predicate\":\"foundGif\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"thumb_url\",\"type\":\"string\"},{\"name\":\"content_url\",\"type\":\"string\"},{\"name\":\"content_type\",\"type\":\"string\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"}],\"type\":\"FoundGif\"},{\"id\":\"-1670052855\",\"predicate\":\"foundGifCached\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"Photo\"},{\"name\":\"document\",\"type\":\"Document\"}],\"type\":\"FoundGif\"},{\"id\":\"1212395773\",\"predicate\":\"inputMediaGifExternal\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"q\",\"type\":\"string\"}],\"type\":\"InputMedia\"},{\"id\":\"1158290442\",\"predicate\":\"messages.foundGifs\",\"params\":[{\"name\":\"next_offset\",\"type\":\"int\"},{\"name\":\"results\",\"type\":\"Vector<FoundGif>\"}],\"type\":\"messages.FoundGifs\"},{\"id\":\"-402498398\",\"predicate\":\"messages.savedGifsNotModified\",\"params\":[],\"type\":\"messages.SavedGifs\"},{\"id\":\"772213157\",\"predicate\":\"messages.savedGifs\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"gifs\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.SavedGifs\"},{\"id\":\"-1821035490\",\"predicate\":\"updateSavedGifs\",\"params\":[],\"type\":\"Update\"},{\"id\":\"864077702\",\"predicate\":\"inputBotInlineMessageMediaAuto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":\"1036876423\",\"predicate\":\"inputBotInlineMessageText\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.0?true\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":\"-2000710887\",\"predicate\":\"inputBotInlineResult\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"description\",\"type\":\"flags.2?string\"},{\"name\":\"url\",\"type\":\"flags.3?string\"},{\"name\":\"thumb\",\"type\":\"flags.4?InputWebDocument\"},{\"name\":\"content\",\"type\":\"flags.5?InputWebDocument\"},{\"name\":\"send_message\",\"type\":\"InputBotInlineMessage\"}],\"type\":\"InputBotInlineResult\"},{\"id\":\"1984755728\",\"predicate\":\"botInlineMessageMediaAuto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":\"-1937807902\",\"predicate\":\"botInlineMessageText\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.0?true\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":\"295067450\",\"predicate\":\"botInlineResult\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"description\",\"type\":\"flags.2?string\"},{\"name\":\"url\",\"type\":\"flags.3?string\"},{\"name\":\"thumb\",\"type\":\"flags.4?WebDocument\"},{\"name\":\"content\",\"type\":\"flags.5?WebDocument\"},{\"name\":\"send_message\",\"type\":\"BotInlineMessage\"}],\"type\":\"BotInlineResult\"},{\"id\":\"-1803769784\",\"predicate\":\"messages.botResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"gallery\",\"type\":\"flags.0?true\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"next_offset\",\"type\":\"flags.1?string\"},{\"name\":\"switch_pm\",\"type\":\"flags.2?InlineBotSwitchPM\"},{\"name\":\"results\",\"type\":\"Vector<BotInlineResult>\"},{\"name\":\"cache_time\",\"type\":\"int\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.BotResults\"},{\"id\":\"1417832080\",\"predicate\":\"updateBotInlineQuery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"int\"},{\"name\":\"query\",\"type\":\"string\"},{\"name\":\"geo\",\"type\":\"flags.0?GeoPoint\"},{\"name\":\"offset\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":\"239663460\",\"predicate\":\"updateBotInlineSend\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"user_id\",\"type\":\"int\"},{\"name\":\"query\",\"type\":\"string\"},{\"name\":\"geo\",\"type\":\"flags.0?GeoPoint\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"msg_id\",\"type\":\"flags.1?InputBotInlineMessageID\"}],\"type\":\"Update\"},{\"id\":\"1358283666\",\"predicate\":\"inputMessagesFilterVoice\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":\"928101534\",\"predicate\":\"inputMessagesFilterMusic\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":\"-1107622874\",\"predicate\":\"inputPrivacyKeyChatInvite\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":\"1343122938\",\"predicate\":\"privacyKeyChatInvite\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":\"1571494644\",\"predicate\":\"exportedMessageLink\",\"params\":[{\"name\":\"link\",\"type\":\"string\"},{\"name\":\"html\",\"type\":\"string\"}],\"type\":\"ExportedMessageLink\"},{\"id\":\"-332168592\",\"predicate\":\"messageFwdHeader\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"from_id\",\"type\":\"flags.0?int\"},{\"name\":\"from_name\",\"type\":\"flags.5?string\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"channel_id\",\"type\":\"flags.1?int\"},{\"name\":\"channel_post\",\"type\":\"flags.2?int\"},{\"name\":\"post_author\",\"type\":\"flags.3?string\"},{\"name\":\"saved_from_peer\",\"type\":\"flags.4?Peer\"},{\"name\":\"saved_from_msg_id\",\"type\":\"flags.4?int\"}],\"type\":\"MessageFwdHeader\"},{\"id\":\"457133559\",\"predicate\":\"updateEditChannelMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":\"-1738988427\",\"predicate\":\"updateChannelPinnedMessage\",\"params\":[{\"name\":\"channel_id\",\"type\":\"int\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":\"-1799538451\",\"predicate\":\"messageActionPinMessage\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":\"1923290508\",\"predicate\":\"auth.codeTypeSms\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":\"1948046307\",\"predicate\":\"auth.codeTypeCall\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":\"577556219\",\"predicate\":\"auth.codeTypeFlashCall\",\"params\":[],\"type\":\"auth.CodeType\"},{\"id\":\"1035688326\",\"predicate\":\"auth.sentCodeTypeApp\",\"params\":[{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":\"-1073693790\",\"predicate\":\"auth.sentCodeTypeSms\",\"params\":[{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":\"1398007207\",\"predicate\":\"auth.sentCodeTypeCall\",\"params\":[{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"auth.SentCodeType\"},{\"id\":\"-1425815847\",\"predicate\":\"auth.sentCodeTypeFlashCall\",\"params\":[{\"name\":\"pattern\",\"type\":\"string\"}],\"type\":\"auth.SentCodeType\"},{\"id\":\"629866245\",\"predicate\":\"keyboardButtonUrl\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":\"1748655686\",\"predicate\":\"keyboardButtonCallback\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"KeyboardButton\"},{\"id\":\"-1318425559\",\"predicate\":\"keyboardButtonRequestPhone\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":\"-59151553\",\"predicate\":\"keyboardButtonRequestGeoLocation\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":\"90744648\",\"predicate\":\"keyboardButtonSwitchInline\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"same_peer\",\"type\":\"flags.0?true\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"query\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":\"1218642516\",\"predicate\":\"replyInlineMarkup\",\"params\":[{\"name\":\"rows\",\"type\":\"Vector<KeyboardButtonRow>\"}],\"type\":\"ReplyMarkup\"},{\"id\":\"911761060\",\"predicate\":\"messages.botCallbackAnswer\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"alert\",\"type\":\"flags.1?true\"},{\"name\":\"has_url\",\"type\":\"flags.3?true\"},{\"name\":\"native_ui\",\"type\":\"flags.4?true\"},{\"name\":\"message\",\"type\":\"flags.0?string\"},{\"name\":\"url\",\"type\":\"flags.2?string\"},{\"name\":\"cache_time\",\"type\":\"int\"}],\"type\":\"messages.BotCallbackAnswer\"},{\"id\":\"-415938591\",\"predicate\":\"updateBotCallbackQuery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"int\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"chat_instance\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"flags.0?bytes\"},{\"name\":\"game_short_name\",\"type\":\"flags.1?string\"}],\"type\":\"Update\"},{\"id\":\"649453030\",\"predicate\":\"messages.messageEditData\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"caption\",\"type\":\"flags.0?true\"}],\"type\":\"messages.MessageEditData\"},{\"id\":\"-469536605\",\"predicate\":\"updateEditMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":\"-1045340827\",\"predicate\":\"inputBotInlineMessageMediaGeo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"period\",\"type\":\"int\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":\"1098628881\",\"predicate\":\"inputBotInlineMessageMediaVenue\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":\"-1494368259\",\"predicate\":\"inputBotInlineMessageMediaContact\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"vcard\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":\"-1222451611\",\"predicate\":\"botInlineMessageMediaGeo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"period\",\"type\":\"int\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":\"-1970903652\",\"predicate\":\"botInlineMessageMediaVenue\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"venue_id\",\"type\":\"string\"},{\"name\":\"venue_type\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":\"416402882\",\"predicate\":\"botInlineMessageMediaContact\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"vcard\",\"type\":\"string\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"BotInlineMessage\"},{\"id\":\"-1462213465\",\"predicate\":\"inputBotInlineResultPhoto\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"InputPhoto\"},{\"name\":\"send_message\",\"type\":\"InputBotInlineMessage\"}],\"type\":\"InputBotInlineResult\"},{\"id\":\"-459324\",\"predicate\":\"inputBotInlineResultDocument\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"description\",\"type\":\"flags.2?string\"},{\"name\":\"document\",\"type\":\"InputDocument\"},{\"name\":\"send_message\",\"type\":\"InputBotInlineMessage\"}],\"type\":\"InputBotInlineResult\"},{\"id\":\"400266251\",\"predicate\":\"botInlineMediaResult\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?Photo\"},{\"name\":\"document\",\"type\":\"flags.1?Document\"},{\"name\":\"title\",\"type\":\"flags.2?string\"},{\"name\":\"description\",\"type\":\"flags.3?string\"},{\"name\":\"send_message\",\"type\":\"BotInlineMessage\"}],\"type\":\"BotInlineResult\"},{\"id\":\"-1995686519\",\"predicate\":\"inputBotInlineMessageID\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputBotInlineMessageID\"},{\"id\":\"-103646630\",\"predicate\":\"updateInlineBotCallbackQuery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"int\"},{\"name\":\"msg_id\",\"type\":\"InputBotInlineMessageID\"},{\"name\":\"chat_instance\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"flags.0?bytes\"},{\"name\":\"game_short_name\",\"type\":\"flags.1?string\"}],\"type\":\"Update\"},{\"id\":\"1008755359\",\"predicate\":\"inlineBotSwitchPM\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"start_param\",\"type\":\"string\"}],\"type\":\"InlineBotSwitchPM\"},{\"id\":\"863093588\",\"predicate\":\"messages.peerDialogs\",\"params\":[{\"name\":\"dialogs\",\"type\":\"Vector<Dialog>\"},{\"name\":\"messages\",\"type\":\"Vector<Message>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"state\",\"type\":\"updates.State\"}],\"type\":\"messages.PeerDialogs\"},{\"id\":\"-305282981\",\"predicate\":\"topPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"rating\",\"type\":\"double\"}],\"type\":\"TopPeer\"},{\"id\":\"-1419371685\",\"predicate\":\"topPeerCategoryBotsPM\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":\"344356834\",\"predicate\":\"topPeerCategoryBotsInline\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":\"104314861\",\"predicate\":\"topPeerCategoryCorrespondents\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":\"-1122524854\",\"predicate\":\"topPeerCategoryGroups\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":\"371037736\",\"predicate\":\"topPeerCategoryChannels\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":\"-75283823\",\"predicate\":\"topPeerCategoryPeers\",\"params\":[{\"name\":\"category\",\"type\":\"TopPeerCategory\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"peers\",\"type\":\"Vector<TopPeer>\"}],\"type\":\"TopPeerCategoryPeers\"},{\"id\":\"-567906571\",\"predicate\":\"contacts.topPeersNotModified\",\"params\":[],\"type\":\"contacts.TopPeers\"},{\"id\":\"1891070632\",\"predicate\":\"contacts.topPeers\",\"params\":[{\"name\":\"categories\",\"type\":\"Vector<TopPeerCategoryPeers>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"contacts.TopPeers\"},{\"id\":\"892193368\",\"predicate\":\"messageEntityMentionName\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":\"546203849\",\"predicate\":\"inputMessageEntityMentionName\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"MessageEntity\"},{\"id\":\"975236280\",\"predicate\":\"inputMessagesFilterChatPhotos\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":\"634833351\",\"predicate\":\"updateReadChannelOutbox\",\"params\":[{\"name\":\"channel_id\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":\"-299124375\",\"predicate\":\"updateDraftMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"draft\",\"type\":\"DraftMessage\"}],\"type\":\"Update\"},{\"id\":\"453805082\",\"predicate\":\"draftMessageEmpty\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"date\",\"type\":\"flags.0?int\"}],\"type\":\"DraftMessage\"},{\"id\":\"-40996577\",\"predicate\":\"draftMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"DraftMessage\"},{\"id\":\"-1615153660\",\"predicate\":\"messageActionHistoryClear\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":\"-958657434\",\"predicate\":\"messages.featuredStickersNotModified\",\"params\":[{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":\"-1230257343\",\"predicate\":\"messages.featuredStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"sets\",\"type\":\"Vector<StickerSetCovered>\"},{\"name\":\"unread\",\"type\":\"Vector<long>\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":\"1461528386\",\"predicate\":\"updateReadFeaturedStickers\",\"params\":[],\"type\":\"Update\"},{\"id\":\"186120336\",\"predicate\":\"messages.recentStickersNotModified\",\"params\":[],\"type\":\"messages.RecentStickers\"},{\"id\":\"586395571\",\"predicate\":\"messages.recentStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"packs\",\"type\":\"Vector<StickerPack>\"},{\"name\":\"stickers\",\"type\":\"Vector<Document>\"},{\"name\":\"dates\",\"type\":\"Vector<int>\"}],\"type\":\"messages.RecentStickers\"},{\"id\":\"-1706939360\",\"predicate\":\"updateRecentStickers\",\"params\":[],\"type\":\"Update\"},{\"id\":\"1338747336\",\"predicate\":\"messages.archivedStickers\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"sets\",\"type\":\"Vector<StickerSetCovered>\"}],\"type\":\"messages.ArchivedStickers\"},{\"id\":\"946083368\",\"predicate\":\"messages.stickerSetInstallResultSuccess\",\"params\":[],\"type\":\"messages.StickerSetInstallResult\"},{\"id\":\"904138920\",\"predicate\":\"messages.stickerSetInstallResultArchive\",\"params\":[{\"name\":\"sets\",\"type\":\"Vector<StickerSetCovered>\"}],\"type\":\"messages.StickerSetInstallResult\"},{\"id\":\"1678812626\",\"predicate\":\"stickerSetCovered\",\"params\":[{\"name\":\"set\",\"type\":\"StickerSet\"},{\"name\":\"cover\",\"type\":\"Document\"}],\"type\":\"StickerSetCovered\"},{\"id\":\"-1574314746\",\"predicate\":\"updateConfig\",\"params\":[],\"type\":\"Update\"},{\"id\":\"861169551\",\"predicate\":\"updatePtsChanged\",\"params\":[],\"type\":\"Update\"},{\"id\":\"-440664550\",\"predicate\":\"inputMediaPhotoExternal\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.0?int\"}],\"type\":\"InputMedia\"},{\"id\":\"-78455655\",\"predicate\":\"inputMediaDocumentExternal\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"ttl_seconds\",\"type\":\"flags.0?int\"}],\"type\":\"InputMedia\"},{\"id\":\"872932635\",\"predicate\":\"stickerSetMultiCovered\",\"params\":[{\"name\":\"set\",\"type\":\"StickerSet\"},{\"name\":\"covers\",\"type\":\"Vector<Document>\"}],\"type\":\"StickerSetCovered\"},{\"id\":\"-1361650766\",\"predicate\":\"maskCoords\",\"params\":[{\"name\":\"n\",\"type\":\"int\"},{\"name\":\"x\",\"type\":\"double\"},{\"name\":\"y\",\"type\":\"double\"},{\"name\":\"zoom\",\"type\":\"double\"}],\"type\":\"MaskCoords\"},{\"id\":\"-1744710921\",\"predicate\":\"documentAttributeHasStickers\",\"params\":[],\"type\":\"DocumentAttribute\"},{\"id\":\"1251549527\",\"predicate\":\"inputStickeredMediaPhoto\",\"params\":[{\"name\":\"id\",\"type\":\"InputPhoto\"}],\"type\":\"InputStickeredMedia\"},{\"id\":\"70813275\",\"predicate\":\"inputStickeredMediaDocument\",\"params\":[{\"name\":\"id\",\"type\":\"InputDocument\"}],\"type\":\"InputStickeredMedia\"},{\"id\":\"-1107729093\",\"predicate\":\"game\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"Photo\"},{\"name\":\"document\",\"type\":\"flags.0?Document\"}],\"type\":\"Game\"},{\"id\":\"1336154098\",\"predicate\":\"inputBotInlineResultGame\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"send_message\",\"type\":\"InputBotInlineMessage\"}],\"type\":\"InputBotInlineResult\"},{\"id\":\"1262639204\",\"predicate\":\"inputBotInlineMessageGame\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"}],\"type\":\"InputBotInlineMessage\"},{\"id\":\"-38694904\",\"predicate\":\"messageMediaGame\",\"params\":[{\"name\":\"game\",\"type\":\"Game\"}],\"type\":\"MessageMedia\"},{\"id\":\"-750828557\",\"predicate\":\"inputMediaGame\",\"params\":[{\"name\":\"id\",\"type\":\"InputGame\"}],\"type\":\"InputMedia\"},{\"id\":\"53231223\",\"predicate\":\"inputGameID\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputGame\"},{\"id\":\"-1020139510\",\"predicate\":\"inputGameShortName\",\"params\":[{\"name\":\"bot_id\",\"type\":\"InputUser\"},{\"name\":\"short_name\",\"type\":\"string\"}],\"type\":\"InputGame\"},{\"id\":\"1358175439\",\"predicate\":\"keyboardButtonGame\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":\"-1834538890\",\"predicate\":\"messageActionGameScore\",\"params\":[{\"name\":\"game_id\",\"type\":\"long\"},{\"name\":\"score\",\"type\":\"int\"}],\"type\":\"MessageAction\"},{\"id\":\"1493171408\",\"predicate\":\"highScore\",\"params\":[{\"name\":\"pos\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"int\"},{\"name\":\"score\",\"type\":\"int\"}],\"type\":\"HighScore\"},{\"id\":\"-1707344487\",\"predicate\":\"messages.highScores\",\"params\":[{\"name\":\"scores\",\"type\":\"Vector<HighScore>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.HighScores\"},{\"id\":\"1258196845\",\"predicate\":\"updates.differenceTooLong\",\"params\":[{\"name\":\"pts\",\"type\":\"int\"}],\"type\":\"updates.Difference\"},{\"id\":\"1081547008\",\"predicate\":\"updateChannelWebPage\",\"params\":[{\"name\":\"channel_id\",\"type\":\"int\"},{\"name\":\"webpage\",\"type\":\"WebPage\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":\"-1663561404\",\"predicate\":\"messages.chatsSlice\",\"params\":[{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"}],\"type\":\"messages.Chats\"},{\"id\":\"-599948721\",\"predicate\":\"textEmpty\",\"params\":[],\"type\":\"RichText\"},{\"id\":\"1950782688\",\"predicate\":\"textPlain\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"RichText\"},{\"id\":\"1730456516\",\"predicate\":\"textBold\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":\"-653089380\",\"predicate\":\"textItalic\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":\"-1054465340\",\"predicate\":\"textUnderline\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":\"-1678197867\",\"predicate\":\"textStrike\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":\"1816074681\",\"predicate\":\"textFixed\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":\"1009288385\",\"predicate\":\"textUrl\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"webpage_id\",\"type\":\"long\"}],\"type\":\"RichText\"},{\"id\":\"-564523562\",\"predicate\":\"textEmail\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"email\",\"type\":\"string\"}],\"type\":\"RichText\"},{\"id\":\"2120376535\",\"predicate\":\"textConcat\",\"params\":[{\"name\":\"texts\",\"type\":\"Vector<RichText>\"}],\"type\":\"RichText\"},{\"id\":\"324435594\",\"predicate\":\"pageBlockUnsupported\",\"params\":[],\"type\":\"PageBlock\"},{\"id\":\"1890305021\",\"predicate\":\"pageBlockTitle\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":\"-1879401953\",\"predicate\":\"pageBlockSubtitle\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":\"-1162877472\",\"predicate\":\"pageBlockAuthorDate\",\"params\":[{\"name\":\"author\",\"type\":\"RichText\"},{\"name\":\"published_date\",\"type\":\"int\"}],\"type\":\"PageBlock\"},{\"id\":\"-1076861716\",\"predicate\":\"pageBlockHeader\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":\"-248793375\",\"predicate\":\"pageBlockSubheader\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":\"1182402406\",\"predicate\":\"pageBlockParagraph\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":\"-1066346178\",\"predicate\":\"pageBlockPreformatted\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"language\",\"type\":\"string\"}],\"type\":\"PageBlock\"},{\"id\":\"1216809369\",\"predicate\":\"pageBlockFooter\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":\"-618614392\",\"predicate\":\"pageBlockDivider\",\"params\":[],\"type\":\"PageBlock\"},{\"id\":\"-837994576\",\"predicate\":\"pageBlockAnchor\",\"params\":[{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"PageBlock\"},{\"id\":\"-454524911\",\"predicate\":\"pageBlockList\",\"params\":[{\"name\":\"items\",\"type\":\"Vector<PageListItem>\"}],\"type\":\"PageBlock\"},{\"id\":\"641563686\",\"predicate\":\"pageBlockBlockquote\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"caption\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":\"1329878739\",\"predicate\":\"pageBlockPullquote\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"caption\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":\"391759200\",\"predicate\":\"pageBlockPhoto\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"photo_id\",\"type\":\"long\"},{\"name\":\"caption\",\"type\":\"PageCaption\"},{\"name\":\"url\",\"type\":\"flags.0?string\"},{\"name\":\"webpage_id\",\"type\":\"flags.0?long\"}],\"type\":\"PageBlock\"},{\"id\":\"2089805750\",\"predicate\":\"pageBlockVideo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"autoplay\",\"type\":\"flags.0?true\"},{\"name\":\"loop\",\"type\":\"flags.1?true\"},{\"name\":\"video_id\",\"type\":\"long\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":\"972174080\",\"predicate\":\"pageBlockCover\",\"params\":[{\"name\":\"cover\",\"type\":\"PageBlock\"}],\"type\":\"PageBlock\"},{\"id\":\"-1468953147\",\"predicate\":\"pageBlockEmbed\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"full_width\",\"type\":\"flags.0?true\"},{\"name\":\"allow_scrolling\",\"type\":\"flags.3?true\"},{\"name\":\"url\",\"type\":\"flags.1?string\"},{\"name\":\"html\",\"type\":\"flags.2?string\"},{\"name\":\"poster_photo_id\",\"type\":\"flags.4?long\"},{\"name\":\"w\",\"type\":\"flags.5?int\"},{\"name\":\"h\",\"type\":\"flags.5?int\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":\"-229005301\",\"predicate\":\"pageBlockEmbedPost\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"webpage_id\",\"type\":\"long\"},{\"name\":\"author_photo_id\",\"type\":\"long\"},{\"name\":\"author\",\"type\":\"string\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":\"1705048653\",\"predicate\":\"pageBlockCollage\",\"params\":[{\"name\":\"items\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":\"52401552\",\"predicate\":\"pageBlockSlideshow\",\"params\":[{\"name\":\"items\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":\"1930545681\",\"predicate\":\"webPageNotModified\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"cached_page_views\",\"type\":\"flags.0?int\"}],\"type\":\"WebPage\"},{\"id\":\"-88417185\",\"predicate\":\"inputPrivacyKeyPhoneCall\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":\"1030105979\",\"predicate\":\"privacyKeyPhoneCall\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":\"-580219064\",\"predicate\":\"sendMessageGamePlayAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":\"-2048646399\",\"predicate\":\"phoneCallDiscardReasonMissed\",\"params\":[],\"type\":\"PhoneCallDiscardReason\"},{\"id\":\"-527056480\",\"predicate\":\"phoneCallDiscardReasonDisconnect\",\"params\":[],\"type\":\"PhoneCallDiscardReason\"},{\"id\":\"1471006352\",\"predicate\":\"phoneCallDiscardReasonHangup\",\"params\":[],\"type\":\"PhoneCallDiscardReason\"},{\"id\":\"-84416311\",\"predicate\":\"phoneCallDiscardReasonBusy\",\"params\":[],\"type\":\"PhoneCallDiscardReason\"},{\"id\":\"1852826908\",\"predicate\":\"updateDialogPinned\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"folder_id\",\"type\":\"flags.1?int\"},{\"name\":\"peer\",\"type\":\"DialogPeer\"}],\"type\":\"Update\"},{\"id\":\"-99664734\",\"predicate\":\"updatePinnedDialogs\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.1?int\"},{\"name\":\"order\",\"type\":\"flags.0?Vector<DialogPeer>\"}],\"type\":\"Update\"},{\"id\":\"2104790276\",\"predicate\":\"dataJSON\",\"params\":[{\"name\":\"data\",\"type\":\"string\"}],\"type\":\"DataJSON\"},{\"id\":\"-2095595325\",\"predicate\":\"updateBotWebhookJSON\",\"params\":[{\"name\":\"data\",\"type\":\"DataJSON\"}],\"type\":\"Update\"},{\"id\":\"-1684914010\",\"predicate\":\"updateBotWebhookJSONQuery\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"DataJSON\"},{\"name\":\"timeout\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":\"-886477832\",\"predicate\":\"labeledPrice\",\"params\":[{\"name\":\"label\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":\"long\"}],\"type\":\"LabeledPrice\"},{\"id\":\"-1022713000\",\"predicate\":\"invoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"test\",\"type\":\"flags.0?true\"},{\"name\":\"name_requested\",\"type\":\"flags.1?true\"},{\"name\":\"phone_requested\",\"type\":\"flags.2?true\"},{\"name\":\"email_requested\",\"type\":\"flags.3?true\"},{\"name\":\"shipping_address_requested\",\"type\":\"flags.4?true\"},{\"name\":\"flexible\",\"type\":\"flags.5?true\"},{\"name\":\"phone_to_provider\",\"type\":\"flags.6?true\"},{\"name\":\"email_to_provider\",\"type\":\"flags.7?true\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"prices\",\"type\":\"Vector<LabeledPrice>\"}],\"type\":\"Invoice\"},{\"id\":\"-186607933\",\"predicate\":\"inputMediaInvoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?InputWebDocument\"},{\"name\":\"invoice\",\"type\":\"Invoice\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"provider\",\"type\":\"string\"},{\"name\":\"provider_data\",\"type\":\"DataJSON\"},{\"name\":\"start_param\",\"type\":\"string\"}],\"type\":\"InputMedia\"},{\"id\":\"-368917890\",\"predicate\":\"paymentCharge\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"provider_charge_id\",\"type\":\"string\"}],\"type\":\"PaymentCharge\"},{\"id\":\"-1892568281\",\"predicate\":\"messageActionPaymentSentMe\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"info\",\"type\":\"flags.0?PaymentRequestedInfo\"},{\"name\":\"shipping_option_id\",\"type\":\"flags.1?string\"},{\"name\":\"charge\",\"type\":\"PaymentCharge\"}],\"type\":\"MessageAction\"},{\"id\":\"-2074799289\",\"predicate\":\"messageMediaInvoice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"shipping_address_requested\",\"type\":\"flags.1?true\"},{\"name\":\"test\",\"type\":\"flags.3?true\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.0?WebDocument\"},{\"name\":\"receipt_msg_id\",\"type\":\"flags.2?int\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"start_param\",\"type\":\"string\"}],\"type\":\"MessageMedia\"},{\"id\":\"512535275\",\"predicate\":\"postAddress\",\"params\":[{\"name\":\"street_line1\",\"type\":\"string\"},{\"name\":\"street_line2\",\"type\":\"string\"},{\"name\":\"city\",\"type\":\"string\"},{\"name\":\"state\",\"type\":\"string\"},{\"name\":\"country_iso2\",\"type\":\"string\"},{\"name\":\"post_code\",\"type\":\"string\"}],\"type\":\"PostAddress\"},{\"id\":\"-1868808300\",\"predicate\":\"paymentRequestedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"name\",\"type\":\"flags.0?string\"},{\"name\":\"phone\",\"type\":\"flags.1?string\"},{\"name\":\"email\",\"type\":\"flags.2?string\"},{\"name\":\"shipping_address\",\"type\":\"flags.3?PostAddress\"}],\"type\":\"PaymentRequestedInfo\"},{\"id\":\"-1344716869\",\"predicate\":\"keyboardButtonBuy\",\"params\":[{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":\"1080663248\",\"predicate\":\"messageActionPaymentSent\",\"params\":[{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"}],\"type\":\"MessageAction\"},{\"id\":\"-842892769\",\"predicate\":\"paymentSavedCredentialsCard\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"PaymentSavedCredentials\"},{\"id\":\"475467473\",\"predicate\":\"webDocument\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"}],\"type\":\"WebDocument\"},{\"id\":\"-1678949555\",\"predicate\":\"inputWebDocument\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"}],\"type\":\"InputWebDocument\"},{\"id\":\"-1036396922\",\"predicate\":\"inputWebFileLocation\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputWebFileLocation\"},{\"id\":\"568808380\",\"predicate\":\"upload.webFile\",\"params\":[{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"file_type\",\"type\":\"storage.FileType\"},{\"name\":\"mtime\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"upload.WebFile\"},{\"id\":\"1062645411\",\"predicate\":\"payments.paymentForm\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_save_credentials\",\"type\":\"flags.2?true\"},{\"name\":\"password_missing\",\"type\":\"flags.3?true\"},{\"name\":\"bot_id\",\"type\":\"int\"},{\"name\":\"invoice\",\"type\":\"Invoice\"},{\"name\":\"provider_id\",\"type\":\"int\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"native_provider\",\"type\":\"flags.4?string\"},{\"name\":\"native_params\",\"type\":\"flags.4?DataJSON\"},{\"name\":\"saved_info\",\"type\":\"flags.0?PaymentRequestedInfo\"},{\"name\":\"saved_credentials\",\"type\":\"flags.1?PaymentSavedCredentials\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"payments.PaymentForm\"},{\"id\":\"-784000893\",\"predicate\":\"payments.validatedRequestedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"flags.0?string\"},{\"name\":\"shipping_options\",\"type\":\"flags.1?Vector<ShippingOption>\"}],\"type\":\"payments.ValidatedRequestedInfo\"},{\"id\":\"1314881805\",\"predicate\":\"payments.paymentResult\",\"params\":[{\"name\":\"updates\",\"type\":\"Updates\"}],\"type\":\"payments.PaymentResult\"},{\"id\":\"1342771681\",\"predicate\":\"payments.paymentReceipt\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"bot_id\",\"type\":\"int\"},{\"name\":\"invoice\",\"type\":\"Invoice\"},{\"name\":\"provider_id\",\"type\":\"int\"},{\"name\":\"info\",\"type\":\"flags.0?PaymentRequestedInfo\"},{\"name\":\"shipping\",\"type\":\"flags.1?ShippingOption\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"},{\"name\":\"credentials_title\",\"type\":\"string\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"payments.PaymentReceipt\"},{\"id\":\"-74456004\",\"predicate\":\"payments.savedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"has_saved_credentials\",\"type\":\"flags.1?true\"},{\"name\":\"saved_info\",\"type\":\"flags.0?PaymentRequestedInfo\"}],\"type\":\"payments.SavedInfo\"},{\"id\":\"-1056001329\",\"predicate\":\"inputPaymentCredentialsSaved\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"tmp_password\",\"type\":\"bytes\"}],\"type\":\"InputPaymentCredentials\"},{\"id\":\"873977640\",\"predicate\":\"inputPaymentCredentials\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"save\",\"type\":\"flags.0?true\"},{\"name\":\"data\",\"type\":\"DataJSON\"}],\"type\":\"InputPaymentCredentials\"},{\"id\":\"-614138572\",\"predicate\":\"account.tmpPassword\",\"params\":[{\"name\":\"tmp_password\",\"type\":\"bytes\"},{\"name\":\"valid_until\",\"type\":\"int\"}],\"type\":\"account.TmpPassword\"},{\"id\":\"-1239335713\",\"predicate\":\"shippingOption\",\"params\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"prices\",\"type\":\"Vector<LabeledPrice>\"}],\"type\":\"ShippingOption\"},{\"id\":\"-523384512\",\"predicate\":\"updateBotShippingQuery\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"int\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"shipping_address\",\"type\":\"PostAddress\"}],\"type\":\"Update\"},{\"id\":\"1563376297\",\"predicate\":\"updateBotPrecheckoutQuery\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"int\"},{\"name\":\"payload\",\"type\":\"bytes\"},{\"name\":\"info\",\"type\":\"flags.0?PaymentRequestedInfo\"},{\"name\":\"shipping_option_id\",\"type\":\"flags.1?string\"},{\"name\":\"currency\",\"type\":\"string\"},{\"name\":\"total_amount\",\"type\":\"long\"}],\"type\":\"Update\"},{\"id\":\"-6249322\",\"predicate\":\"inputStickerSetItem\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"document\",\"type\":\"InputDocument\"},{\"name\":\"emoji\",\"type\":\"string\"},{\"name\":\"mask_coords\",\"type\":\"flags.0?MaskCoords\"}],\"type\":\"InputStickerSetItem\"},{\"id\":\"-1425052898\",\"predicate\":\"updatePhoneCall\",\"params\":[{\"name\":\"phone_call\",\"type\":\"PhoneCall\"}],\"type\":\"Update\"},{\"id\":\"506920429\",\"predicate\":\"inputPhoneCall\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputPhoneCall\"},{\"id\":\"1399245077\",\"predicate\":\"phoneCallEmpty\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"PhoneCall\"},{\"id\":\"462375633\",\"predicate\":\"phoneCallWaiting\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.5?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"int\"},{\"name\":\"participant_id\",\"type\":\"int\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"},{\"name\":\"receive_date\",\"type\":\"flags.0?int\"}],\"type\":\"PhoneCall\"},{\"id\":\"-2014659757\",\"predicate\":\"phoneCallRequested\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.5?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"int\"},{\"name\":\"participant_id\",\"type\":\"int\"},{\"name\":\"g_a_hash\",\"type\":\"bytes\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"PhoneCall\"},{\"id\":\"-1719909046\",\"predicate\":\"phoneCallAccepted\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.5?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"int\"},{\"name\":\"participant_id\",\"type\":\"int\"},{\"name\":\"g_b\",\"type\":\"bytes\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"PhoneCall\"},{\"id\":\"-2025673089\",\"predicate\":\"phoneCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"p2p_allowed\",\"type\":\"flags.5?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_id\",\"type\":\"int\"},{\"name\":\"participant_id\",\"type\":\"int\"},{\"name\":\"g_a_or_b\",\"type\":\"bytes\"},{\"name\":\"key_fingerprint\",\"type\":\"long\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"},{\"name\":\"connections\",\"type\":\"Vector<PhoneConnection>\"},{\"name\":\"start_date\",\"type\":\"int\"}],\"type\":\"PhoneCall\"},{\"id\":\"1355435489\",\"predicate\":\"phoneCallDiscarded\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"need_rating\",\"type\":\"flags.2?true\"},{\"name\":\"need_debug\",\"type\":\"flags.3?true\"},{\"name\":\"video\",\"type\":\"flags.5?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"reason\",\"type\":\"flags.0?PhoneCallDiscardReason\"},{\"name\":\"duration\",\"type\":\"flags.1?int\"}],\"type\":\"PhoneCall\"},{\"id\":\"-1655957568\",\"predicate\":\"phoneConnection\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"ipv6\",\"type\":\"string\"},{\"name\":\"port\",\"type\":\"int\"},{\"name\":\"peer_tag\",\"type\":\"bytes\"}],\"type\":\"PhoneConnection\"},{\"id\":\"-58224696\",\"predicate\":\"phoneCallProtocol\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"udp_p2p\",\"type\":\"flags.0?true\"},{\"name\":\"udp_reflector\",\"type\":\"flags.1?true\"},{\"name\":\"min_layer\",\"type\":\"int\"},{\"name\":\"max_layer\",\"type\":\"int\"},{\"name\":\"library_versions\",\"type\":\"Vector<string>\"}],\"type\":\"PhoneCallProtocol\"},{\"id\":\"-326966976\",\"predicate\":\"phone.phoneCall\",\"params\":[{\"name\":\"phone_call\",\"type\":\"PhoneCall\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"phone.PhoneCall\"},{\"id\":\"-2134272152\",\"predicate\":\"inputMessagesFilterPhoneCalls\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"missed\",\"type\":\"flags.0?true\"}],\"type\":\"MessagesFilter\"},{\"id\":\"-2132731265\",\"predicate\":\"messageActionPhoneCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.2?true\"},{\"name\":\"call_id\",\"type\":\"long\"},{\"name\":\"reason\",\"type\":\"flags.0?PhoneCallDiscardReason\"},{\"name\":\"duration\",\"type\":\"flags.1?int\"}],\"type\":\"MessageAction\"},{\"id\":\"2054952868\",\"predicate\":\"inputMessagesFilterRoundVoice\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":\"-1253451181\",\"predicate\":\"inputMessagesFilterRoundVideo\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":\"-1997373508\",\"predicate\":\"sendMessageRecordRoundAction\",\"params\":[],\"type\":\"SendMessageAction\"},{\"id\":\"608050278\",\"predicate\":\"sendMessageUploadRoundAction\",\"params\":[{\"name\":\"progress\",\"type\":\"int\"}],\"type\":\"SendMessageAction\"},{\"id\":\"-242427324\",\"predicate\":\"upload.fileCdnRedirect\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"file_token\",\"type\":\"bytes\"},{\"name\":\"encryption_key\",\"type\":\"bytes\"},{\"name\":\"encryption_iv\",\"type\":\"bytes\"},{\"name\":\"file_hashes\",\"type\":\"Vector<FileHash>\"}],\"type\":\"upload.File\"},{\"id\":\"-290921362\",\"predicate\":\"upload.cdnFileReuploadNeeded\",\"params\":[{\"name\":\"request_token\",\"type\":\"bytes\"}],\"type\":\"upload.CdnFile\"},{\"id\":\"-1449145777\",\"predicate\":\"upload.cdnFile\",\"params\":[{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"upload.CdnFile\"},{\"id\":\"-914167110\",\"predicate\":\"cdnPublicKey\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"public_key\",\"type\":\"string\"}],\"type\":\"CdnPublicKey\"},{\"id\":\"1462101002\",\"predicate\":\"cdnConfig\",\"params\":[{\"name\":\"public_keys\",\"type\":\"Vector<CdnPublicKey>\"}],\"type\":\"CdnConfig\"},{\"id\":\"-283684427\",\"predicate\":\"pageBlockChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"Chat\"}],\"type\":\"PageBlock\"},{\"id\":\"-892239370\",\"predicate\":\"langPackString\",\"params\":[{\"name\":\"key\",\"type\":\"string\"},{\"name\":\"value\",\"type\":\"string\"}],\"type\":\"LangPackString\"},{\"id\":\"1816636575\",\"predicate\":\"langPackStringPluralized\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"key\",\"type\":\"string\"},{\"name\":\"zero_value\",\"type\":\"flags.0?string\"},{\"name\":\"one_value\",\"type\":\"flags.1?string\"},{\"name\":\"two_value\",\"type\":\"flags.2?string\"},{\"name\":\"few_value\",\"type\":\"flags.3?string\"},{\"name\":\"many_value\",\"type\":\"flags.4?string\"},{\"name\":\"other_value\",\"type\":\"string\"}],\"type\":\"LangPackString\"},{\"id\":\"695856818\",\"predicate\":\"langPackStringDeleted\",\"params\":[{\"name\":\"key\",\"type\":\"string\"}],\"type\":\"LangPackString\"},{\"id\":\"-209337866\",\"predicate\":\"langPackDifference\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"from_version\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"strings\",\"type\":\"Vector<LangPackString>\"}],\"type\":\"LangPackDifference\"},{\"id\":\"-288727837\",\"predicate\":\"langPackLanguage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"official\",\"type\":\"flags.0?true\"},{\"name\":\"rtl\",\"type\":\"flags.2?true\"},{\"name\":\"beta\",\"type\":\"flags.3?true\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"native_name\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"base_lang_code\",\"type\":\"flags.1?string\"},{\"name\":\"plural_code\",\"type\":\"string\"},{\"name\":\"strings_count\",\"type\":\"int\"},{\"name\":\"translated_count\",\"type\":\"int\"},{\"name\":\"translations_url\",\"type\":\"string\"}],\"type\":\"LangPackLanguage\"},{\"id\":\"1180041828\",\"predicate\":\"updateLangPackTooLong\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"Update\"},{\"id\":\"1442983757\",\"predicate\":\"updateLangPack\",\"params\":[{\"name\":\"difference\",\"type\":\"LangPackDifference\"}],\"type\":\"Update\"},{\"id\":\"-859915345\",\"predicate\":\"channelParticipantAdmin\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"can_edit\",\"type\":\"flags.0?true\"},{\"name\":\"self\",\"type\":\"flags.1?true\"},{\"name\":\"user_id\",\"type\":\"int\"},{\"name\":\"inviter_id\",\"type\":\"flags.1?int\"},{\"name\":\"promoted_by\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"},{\"name\":\"rank\",\"type\":\"flags.2?string\"}],\"type\":\"ChannelParticipant\"},{\"id\":\"470789295\",\"predicate\":\"channelParticipantBanned\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"left\",\"type\":\"flags.0?true\"},{\"name\":\"user_id\",\"type\":\"int\"},{\"name\":\"kicked_by\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"banned_rights\",\"type\":\"ChatBannedRights\"}],\"type\":\"ChannelParticipant\"},{\"id\":\"338142689\",\"predicate\":\"channelParticipantsBanned\",\"params\":[{\"name\":\"q\",\"type\":\"string\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":\"106343499\",\"predicate\":\"channelParticipantsSearch\",\"params\":[{\"name\":\"q\",\"type\":\"string\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":\"-421545947\",\"predicate\":\"channelAdminLogEventActionChangeTitle\",\"params\":[{\"name\":\"prev_value\",\"type\":\"string\"},{\"name\":\"new_value\",\"type\":\"string\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":\"1427671598\",\"predicate\":\"channelAdminLogEventActionChangeAbout\",\"params\":[{\"name\":\"prev_value\",\"type\":\"string\"},{\"name\":\"new_value\",\"type\":\"string\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":\"1783299128\",\"predicate\":\"channelAdminLogEventActionChangeUsername\",\"params\":[{\"name\":\"prev_value\",\"type\":\"string\"},{\"name\":\"new_value\",\"type\":\"string\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":\"1129042607\",\"predicate\":\"channelAdminLogEventActionChangePhoto\",\"params\":[{\"name\":\"prev_photo\",\"type\":\"Photo\"},{\"name\":\"new_photo\",\"type\":\"Photo\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":\"460916654\",\"predicate\":\"channelAdminLogEventActionToggleInvites\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":\"648939889\",\"predicate\":\"channelAdminLogEventActionToggleSignatures\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":\"-370660328\",\"predicate\":\"channelAdminLogEventActionUpdatePinned\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":\"1889215493\",\"predicate\":\"channelAdminLogEventActionEditMessage\",\"params\":[{\"name\":\"prev_message\",\"type\":\"Message\"},{\"name\":\"new_message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":\"1121994683\",\"predicate\":\"channelAdminLogEventActionDeleteMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":\"405815507\",\"predicate\":\"channelAdminLogEventActionParticipantJoin\",\"params\":[],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":\"-124291086\",\"predicate\":\"channelAdminLogEventActionParticipantLeave\",\"params\":[],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":\"-484690728\",\"predicate\":\"channelAdminLogEventActionParticipantInvite\",\"params\":[{\"name\":\"participant\",\"type\":\"ChannelParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":\"-422036098\",\"predicate\":\"channelAdminLogEventActionParticipantToggleBan\",\"params\":[{\"name\":\"prev_participant\",\"type\":\"ChannelParticipant\"},{\"name\":\"new_participant\",\"type\":\"ChannelParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":\"-714643696\",\"predicate\":\"channelAdminLogEventActionParticipantToggleAdmin\",\"params\":[{\"name\":\"prev_participant\",\"type\":\"ChannelParticipant\"},{\"name\":\"new_participant\",\"type\":\"ChannelParticipant\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":\"995769920\",\"predicate\":\"channelAdminLogEvent\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"int\"},{\"name\":\"action\",\"type\":\"ChannelAdminLogEventAction\"}],\"type\":\"ChannelAdminLogEvent\"},{\"id\":\"-309659827\",\"predicate\":\"channels.adminLogResults\",\"params\":[{\"name\":\"events\",\"type\":\"Vector<ChannelAdminLogEvent>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"channels.AdminLogResults\"},{\"id\":\"-368018716\",\"predicate\":\"channelAdminLogEventsFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"join\",\"type\":\"flags.0?true\"},{\"name\":\"leave\",\"type\":\"flags.1?true\"},{\"name\":\"invite\",\"type\":\"flags.2?true\"},{\"name\":\"ban\",\"type\":\"flags.3?true\"},{\"name\":\"unban\",\"type\":\"flags.4?true\"},{\"name\":\"kick\",\"type\":\"flags.5?true\"},{\"name\":\"unkick\",\"type\":\"flags.6?true\"},{\"name\":\"promote\",\"type\":\"flags.7?true\"},{\"name\":\"demote\",\"type\":\"flags.8?true\"},{\"name\":\"info\",\"type\":\"flags.9?true\"},{\"name\":\"settings\",\"type\":\"flags.10?true\"},{\"name\":\"pinned\",\"type\":\"flags.11?true\"},{\"name\":\"edit\",\"type\":\"flags.12?true\"},{\"name\":\"delete\",\"type\":\"flags.13?true\"}],\"type\":\"ChannelAdminLogEventsFilter\"},{\"id\":\"511092620\",\"predicate\":\"topPeerCategoryPhoneCalls\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":\"-2143067670\",\"predicate\":\"pageBlockAudio\",\"params\":[{\"name\":\"audio_id\",\"type\":\"long\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":\"1558266229\",\"predicate\":\"popularContact\",\"params\":[{\"name\":\"client_id\",\"type\":\"long\"},{\"name\":\"importers\",\"type\":\"int\"}],\"type\":\"PopularContact\"},{\"id\":\"1200788123\",\"predicate\":\"messageActionScreenshotTaken\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":\"-1634752813\",\"predicate\":\"messages.favedStickersNotModified\",\"params\":[],\"type\":\"messages.FavedStickers\"},{\"id\":\"-209768682\",\"predicate\":\"messages.favedStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"packs\",\"type\":\"Vector<StickerPack>\"},{\"name\":\"stickers\",\"type\":\"Vector<Document>\"}],\"type\":\"messages.FavedStickers\"},{\"id\":\"-451831443\",\"predicate\":\"updateFavedStickers\",\"params\":[],\"type\":\"Update\"},{\"id\":\"-1987495099\",\"predicate\":\"updateChannelReadMessagesContents\",\"params\":[{\"name\":\"channel_id\",\"type\":\"int\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"}],\"type\":\"Update\"},{\"id\":\"-1040652646\",\"predicate\":\"inputMessagesFilterMyMentions\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":\"1887741886\",\"predicate\":\"updateContactsReset\",\"params\":[],\"type\":\"Update\"},{\"id\":\"-1312568665\",\"predicate\":\"channelAdminLogEventActionChangeStickerSet\",\"params\":[{\"name\":\"prev_stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"new_stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":\"-85549226\",\"predicate\":\"messageActionCustomAction\",\"params\":[{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":\"178373535\",\"predicate\":\"inputPaymentCredentialsApplePay\",\"params\":[{\"name\":\"payment_data\",\"type\":\"DataJSON\"}],\"type\":\"InputPaymentCredentials\"},{\"id\":\"-905587442\",\"predicate\":\"inputPaymentCredentialsAndroidPay\",\"params\":[{\"name\":\"payment_token\",\"type\":\"DataJSON\"},{\"name\":\"google_transaction_id\",\"type\":\"string\"}],\"type\":\"InputPaymentCredentials\"},{\"id\":\"-419271411\",\"predicate\":\"inputMessagesFilterGeo\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":\"-530392189\",\"predicate\":\"inputMessagesFilterContacts\",\"params\":[],\"type\":\"MessagesFilter\"},{\"id\":\"1893427255\",\"predicate\":\"updateChannelAvailableMessages\",\"params\":[{\"name\":\"channel_id\",\"type\":\"int\"},{\"name\":\"available_min_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":\"1599903217\",\"predicate\":\"channelAdminLogEventActionTogglePreHistoryHidden\",\"params\":[{\"name\":\"new_value\",\"type\":\"Bool\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":\"-833715459\",\"predicate\":\"inputMediaGeoLive\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"stopped\",\"type\":\"flags.0?true\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"period\",\"type\":\"flags.1?int\"}],\"type\":\"InputMedia\"},{\"id\":\"2084316681\",\"predicate\":\"messageMediaGeoLive\",\"params\":[{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"MessageMedia\"},{\"id\":\"1189204285\",\"predicate\":\"recentMeUrlUnknown\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"RecentMeUrl\"},{\"id\":\"-1917045962\",\"predicate\":\"recentMeUrlUser\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"user_id\",\"type\":\"int\"}],\"type\":\"RecentMeUrl\"},{\"id\":\"-1608834311\",\"predicate\":\"recentMeUrlChat\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"chat_id\",\"type\":\"int\"}],\"type\":\"RecentMeUrl\"},{\"id\":\"-347535331\",\"predicate\":\"recentMeUrlChatInvite\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"chat_invite\",\"type\":\"ChatInvite\"}],\"type\":\"RecentMeUrl\"},{\"id\":\"-1140172836\",\"predicate\":\"recentMeUrlStickerSet\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"set\",\"type\":\"StickerSetCovered\"}],\"type\":\"RecentMeUrl\"},{\"id\":\"235081943\",\"predicate\":\"help.recentMeUrls\",\"params\":[{\"name\":\"urls\",\"type\":\"Vector<RecentMeUrl>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"help.RecentMeUrls\"},{\"id\":\"-266911767\",\"predicate\":\"channels.channelParticipantsNotModified\",\"params\":[],\"type\":\"channels.ChannelParticipants\"},{\"id\":\"1951620897\",\"predicate\":\"messages.messagesNotModified\",\"params\":[{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":\"482797855\",\"predicate\":\"inputSingleMedia\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"media\",\"type\":\"InputMedia\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.0?Vector<MessageEntity>\"}],\"type\":\"InputSingleMedia\"},{\"id\":\"-892779534\",\"predicate\":\"webAuthorization\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"},{\"name\":\"bot_id\",\"type\":\"int\"},{\"name\":\"domain\",\"type\":\"string\"},{\"name\":\"browser\",\"type\":\"string\"},{\"name\":\"platform\",\"type\":\"string\"},{\"name\":\"date_created\",\"type\":\"int\"},{\"name\":\"date_active\",\"type\":\"int\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"region\",\"type\":\"string\"}],\"type\":\"WebAuthorization\"},{\"id\":\"-313079300\",\"predicate\":\"account.webAuthorizations\",\"params\":[{\"name\":\"authorizations\",\"type\":\"Vector<WebAuthorization>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"account.WebAuthorizations\"},{\"id\":\"-1502174430\",\"predicate\":\"inputMessageID\",\"params\":[{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"InputMessage\"},{\"id\":\"-1160215659\",\"predicate\":\"inputMessageReplyTo\",\"params\":[{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"InputMessage\"},{\"id\":\"-2037963464\",\"predicate\":\"inputMessagePinned\",\"params\":[],\"type\":\"InputMessage\"},{\"id\":\"-1687559349\",\"predicate\":\"messageEntityPhone\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":\"1280209983\",\"predicate\":\"messageEntityCashtag\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":\"-1410748418\",\"predicate\":\"messageActionBotAllowed\",\"params\":[{\"name\":\"domain\",\"type\":\"string\"}],\"type\":\"MessageAction\"},{\"id\":\"-55902537\",\"predicate\":\"inputDialogPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"InputDialogPeer\"},{\"id\":\"-445792507\",\"predicate\":\"dialogPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"}],\"type\":\"DialogPeer\"},{\"id\":\"223655517\",\"predicate\":\"messages.foundStickerSetsNotModified\",\"params\":[],\"type\":\"messages.FoundStickerSets\"},{\"id\":\"1359533640\",\"predicate\":\"messages.foundStickerSets\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"sets\",\"type\":\"Vector<StickerSetCovered>\"}],\"type\":\"messages.FoundStickerSets\"},{\"id\":\"1648543603\",\"predicate\":\"fileHash\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"bytes\"}],\"type\":\"FileHash\"},{\"id\":\"-104284986\",\"predicate\":\"webDocumentNoProxy\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"attributes\",\"type\":\"Vector<DocumentAttribute>\"}],\"type\":\"WebDocument\"},{\"id\":\"1968737087\",\"predicate\":\"inputClientProxy\",\"params\":[{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"port\",\"type\":\"int\"}],\"type\":\"InputClientProxy\"},{\"id\":\"-526508104\",\"predicate\":\"help.proxyDataEmpty\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"help.ProxyData\"},{\"id\":\"737668643\",\"predicate\":\"help.proxyDataPromo\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"help.ProxyData\"},{\"id\":\"-483352705\",\"predicate\":\"help.termsOfServiceUpdateEmpty\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"help.TermsOfServiceUpdate\"},{\"id\":\"686618977\",\"predicate\":\"help.termsOfServiceUpdate\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"terms_of_service\",\"type\":\"help.TermsOfService\"}],\"type\":\"help.TermsOfServiceUpdate\"},{\"id\":\"859091184\",\"predicate\":\"inputSecureFileUploaded\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"parts\",\"type\":\"int\"},{\"name\":\"md5_checksum\",\"type\":\"string\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"secret\",\"type\":\"bytes\"}],\"type\":\"InputSecureFile\"},{\"id\":\"1399317950\",\"predicate\":\"inputSecureFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputSecureFile\"},{\"id\":\"-876089816\",\"predicate\":\"inputSecureFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputFileLocation\"},{\"id\":\"1679398724\",\"predicate\":\"secureFileEmpty\",\"params\":[],\"type\":\"SecureFile\"},{\"id\":\"-534283678\",\"predicate\":\"secureFile\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"secret\",\"type\":\"bytes\"}],\"type\":\"SecureFile\"},{\"id\":\"-1964327229\",\"predicate\":\"secureData\",\"params\":[{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"data_hash\",\"type\":\"bytes\"},{\"name\":\"secret\",\"type\":\"bytes\"}],\"type\":\"SecureData\"},{\"id\":\"2103482845\",\"predicate\":\"securePlainPhone\",\"params\":[{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"SecurePlainData\"},{\"id\":\"569137759\",\"predicate\":\"securePlainEmail\",\"params\":[{\"name\":\"email\",\"type\":\"string\"}],\"type\":\"SecurePlainData\"},{\"id\":\"-1658158621\",\"predicate\":\"secureValueTypePersonalDetails\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":\"1034709504\",\"predicate\":\"secureValueTypePassport\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":\"115615172\",\"predicate\":\"secureValueTypeDriverLicense\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":\"-1596951477\",\"predicate\":\"secureValueTypeIdentityCard\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":\"-1717268701\",\"predicate\":\"secureValueTypeInternalPassport\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":\"-874308058\",\"predicate\":\"secureValueTypeAddress\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":\"-63531698\",\"predicate\":\"secureValueTypeUtilityBill\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":\"-1995211763\",\"predicate\":\"secureValueTypeBankStatement\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":\"-1954007928\",\"predicate\":\"secureValueTypeRentalAgreement\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":\"-1713143702\",\"predicate\":\"secureValueTypePassportRegistration\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":\"-368907213\",\"predicate\":\"secureValueTypeTemporaryRegistration\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":\"-1289704741\",\"predicate\":\"secureValueTypePhone\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":\"-1908627474\",\"predicate\":\"secureValueTypeEmail\",\"params\":[],\"type\":\"SecureValueType\"},{\"id\":\"411017418\",\"predicate\":\"secureValue\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"data\",\"type\":\"flags.0?SecureData\"},{\"name\":\"front_side\",\"type\":\"flags.1?SecureFile\"},{\"name\":\"reverse_side\",\"type\":\"flags.2?SecureFile\"},{\"name\":\"selfie\",\"type\":\"flags.3?SecureFile\"},{\"name\":\"translation\",\"type\":\"flags.6?Vector<SecureFile>\"},{\"name\":\"files\",\"type\":\"flags.4?Vector<SecureFile>\"},{\"name\":\"plain_data\",\"type\":\"flags.5?SecurePlainData\"},{\"name\":\"hash\",\"type\":\"bytes\"}],\"type\":\"SecureValue\"},{\"id\":\"-618540889\",\"predicate\":\"inputSecureValue\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"data\",\"type\":\"flags.0?SecureData\"},{\"name\":\"front_side\",\"type\":\"flags.1?InputSecureFile\"},{\"name\":\"reverse_side\",\"type\":\"flags.2?InputSecureFile\"},{\"name\":\"selfie\",\"type\":\"flags.3?InputSecureFile\"},{\"name\":\"translation\",\"type\":\"flags.6?Vector<InputSecureFile>\"},{\"name\":\"files\",\"type\":\"flags.4?Vector<InputSecureFile>\"},{\"name\":\"plain_data\",\"type\":\"flags.5?SecurePlainData\"}],\"type\":\"InputSecureValue\"},{\"id\":\"-316748368\",\"predicate\":\"secureValueHash\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"hash\",\"type\":\"bytes\"}],\"type\":\"SecureValueHash\"},{\"id\":\"-391902247\",\"predicate\":\"secureValueErrorData\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"data_hash\",\"type\":\"bytes\"},{\"name\":\"field\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":\"12467706\",\"predicate\":\"secureValueErrorFrontSide\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":\"-2037765467\",\"predicate\":\"secureValueErrorReverseSide\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":\"-449327402\",\"predicate\":\"secureValueErrorSelfie\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":\"2054162547\",\"predicate\":\"secureValueErrorFile\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":\"1717706985\",\"predicate\":\"secureValueErrorFiles\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"Vector<bytes>\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":\"871426631\",\"predicate\":\"secureCredentialsEncrypted\",\"params\":[{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"hash\",\"type\":\"bytes\"},{\"name\":\"secret\",\"type\":\"bytes\"}],\"type\":\"SecureCredentialsEncrypted\"},{\"id\":\"-1389486888\",\"predicate\":\"account.authorizationForm\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"required_types\",\"type\":\"Vector<SecureRequiredType>\"},{\"name\":\"values\",\"type\":\"Vector<SecureValue>\"},{\"name\":\"errors\",\"type\":\"Vector<SecureValueError>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"privacy_policy_url\",\"type\":\"flags.0?string\"}],\"type\":\"account.AuthorizationForm\"},{\"id\":\"-2128640689\",\"predicate\":\"account.sentEmailCode\",\"params\":[{\"name\":\"email_pattern\",\"type\":\"string\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"account.SentEmailCode\"},{\"id\":\"455635795\",\"predicate\":\"messageActionSecureValuesSentMe\",\"params\":[{\"name\":\"values\",\"type\":\"Vector<SecureValue>\"},{\"name\":\"credentials\",\"type\":\"SecureCredentialsEncrypted\"}],\"type\":\"MessageAction\"},{\"id\":\"-648257196\",\"predicate\":\"messageActionSecureValuesSent\",\"params\":[{\"name\":\"types\",\"type\":\"Vector<SecureValueType>\"}],\"type\":\"MessageAction\"},{\"id\":\"1722786150\",\"predicate\":\"help.deepLinkInfoEmpty\",\"params\":[],\"type\":\"help.DeepLinkInfo\"},{\"id\":\"1783556146\",\"predicate\":\"help.deepLinkInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"update_app\",\"type\":\"flags.0?true\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.1?Vector<MessageEntity>\"}],\"type\":\"help.DeepLinkInfo\"},{\"id\":\"289586518\",\"predicate\":\"savedPhoneContact\",\"params\":[{\"name\":\"phone\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"SavedContact\"},{\"id\":\"1304052993\",\"predicate\":\"account.takeout\",\"params\":[{\"name\":\"id\",\"type\":\"long\"}],\"type\":\"account.Takeout\"},{\"id\":\"700340377\",\"predicate\":\"inputTakeoutFileLocation\",\"params\":[],\"type\":\"InputFileLocation\"},{\"id\":\"-513517117\",\"predicate\":\"updateDialogUnreadMark\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"unread\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"DialogPeer\"}],\"type\":\"Update\"},{\"id\":\"-253500010\",\"predicate\":\"messages.dialogsNotModified\",\"params\":[{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"messages.Dialogs\"},{\"id\":\"-1625153079\",\"predicate\":\"inputWebFileGeoPointLocation\",\"params\":[{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"zoom\",\"type\":\"int\"},{\"name\":\"scale\",\"type\":\"int\"}],\"type\":\"InputWebFileLocation\"},{\"id\":\"-1255369827\",\"predicate\":\"contacts.topPeersDisabled\",\"params\":[],\"type\":\"contacts.TopPeers\"},{\"id\":\"-1685456582\",\"predicate\":\"inputReportReasonCopyright\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":\"-732254058\",\"predicate\":\"passwordKdfAlgoUnknown\",\"params\":[],\"type\":\"PasswordKdfAlgo\"},{\"id\":\"4883767\",\"predicate\":\"securePasswordKdfAlgoUnknown\",\"params\":[],\"type\":\"SecurePasswordKdfAlgo\"},{\"id\":\"-1141711456\",\"predicate\":\"securePasswordKdfAlgoPBKDF2HMACSHA512iter100000\",\"params\":[{\"name\":\"salt\",\"type\":\"bytes\"}],\"type\":\"SecurePasswordKdfAlgo\"},{\"id\":\"-2042159726\",\"predicate\":\"securePasswordKdfAlgoSHA512\",\"params\":[{\"name\":\"salt\",\"type\":\"bytes\"}],\"type\":\"SecurePasswordKdfAlgo\"},{\"id\":\"354925740\",\"predicate\":\"secureSecretSettings\",\"params\":[{\"name\":\"secure_algo\",\"type\":\"SecurePasswordKdfAlgo\"},{\"name\":\"secure_secret\",\"type\":\"bytes\"},{\"name\":\"secure_secret_id\",\"type\":\"long\"}],\"type\":\"SecureSecretSettings\"},{\"id\":\"982592842\",\"predicate\":\"passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow\",\"params\":[{\"name\":\"salt1\",\"type\":\"bytes\"},{\"name\":\"salt2\",\"type\":\"bytes\"},{\"name\":\"g\",\"type\":\"int\"},{\"name\":\"p\",\"type\":\"bytes\"}],\"type\":\"PasswordKdfAlgo\"},{\"id\":\"-1736378792\",\"predicate\":\"inputCheckPasswordEmpty\",\"params\":[],\"type\":\"InputCheckPasswordSRP\"},{\"id\":\"-763367294\",\"predicate\":\"inputCheckPasswordSRP\",\"params\":[{\"name\":\"srp_id\",\"type\":\"long\"},{\"name\":\"A\",\"type\":\"bytes\"},{\"name\":\"M1\",\"type\":\"bytes\"}],\"type\":\"InputCheckPasswordSRP\"},{\"id\":\"-2036501105\",\"predicate\":\"secureValueError\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":\"-1592506512\",\"predicate\":\"secureValueErrorTranslationFile\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"bytes\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":\"878931416\",\"predicate\":\"secureValueErrorTranslationFiles\",\"params\":[{\"name\":\"type\",\"type\":\"SecureValueType\"},{\"name\":\"file_hash\",\"type\":\"Vector<bytes>\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"SecureValueError\"},{\"id\":\"-2103600678\",\"predicate\":\"secureRequiredType\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"native_names\",\"type\":\"flags.0?true\"},{\"name\":\"selfie_required\",\"type\":\"flags.1?true\"},{\"name\":\"translation_required\",\"type\":\"flags.2?true\"},{\"name\":\"type\",\"type\":\"SecureValueType\"}],\"type\":\"SecureRequiredType\"},{\"id\":\"41187252\",\"predicate\":\"secureRequiredTypeOneOf\",\"params\":[{\"name\":\"types\",\"type\":\"Vector<SecureRequiredType>\"}],\"type\":\"SecureRequiredType\"},{\"id\":\"-1078332329\",\"predicate\":\"help.passportConfigNotModified\",\"params\":[],\"type\":\"help.PassportConfig\"},{\"id\":\"-1600596305\",\"predicate\":\"help.passportConfig\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"countries_langs\",\"type\":\"DataJSON\"}],\"type\":\"help.PassportConfig\"},{\"id\":\"488313413\",\"predicate\":\"inputAppEvent\",\"params\":[{\"name\":\"time\",\"type\":\"double\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"peer\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"JSONValue\"}],\"type\":\"InputAppEvent\"},{\"id\":\"-1059185703\",\"predicate\":\"jsonObjectValue\",\"params\":[{\"name\":\"key\",\"type\":\"string\"},{\"name\":\"value\",\"type\":\"JSONValue\"}],\"type\":\"JSONObjectValue\"},{\"id\":\"1064139624\",\"predicate\":\"jsonNull\",\"params\":[],\"type\":\"JSONValue\"},{\"id\":\"-952869270\",\"predicate\":\"jsonBool\",\"params\":[{\"name\":\"value\",\"type\":\"Bool\"}],\"type\":\"JSONValue\"},{\"id\":\"736157604\",\"predicate\":\"jsonNumber\",\"params\":[{\"name\":\"value\",\"type\":\"double\"}],\"type\":\"JSONValue\"},{\"id\":\"-1222740358\",\"predicate\":\"jsonString\",\"params\":[{\"name\":\"value\",\"type\":\"string\"}],\"type\":\"JSONValue\"},{\"id\":\"-146520221\",\"predicate\":\"jsonArray\",\"params\":[{\"name\":\"value\",\"type\":\"Vector<JSONValue>\"}],\"type\":\"JSONValue\"},{\"id\":\"-1715350371\",\"predicate\":\"jsonObject\",\"params\":[{\"name\":\"value\",\"type\":\"Vector<JSONObjectValue>\"}],\"type\":\"JSONValue\"},{\"id\":\"1279515160\",\"predicate\":\"updateUserPinnedMessage\",\"params\":[{\"name\":\"user_id\",\"type\":\"int\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":\"-519195831\",\"predicate\":\"updateChatPinnedMessage\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":\"-1311015810\",\"predicate\":\"inputNotifyBroadcasts\",\"params\":[],\"type\":\"InputNotifyPeer\"},{\"id\":\"-703403793\",\"predicate\":\"notifyBroadcasts\",\"params\":[],\"type\":\"NotifyPeer\"},{\"id\":\"-311786236\",\"predicate\":\"textSubscript\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":\"-939827711\",\"predicate\":\"textSuperscript\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":\"55281185\",\"predicate\":\"textMarked\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"RichText\"},{\"id\":\"483104362\",\"predicate\":\"textPhone\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"RichText\"},{\"id\":\"136105807\",\"predicate\":\"textImage\",\"params\":[{\"name\":\"document_id\",\"type\":\"long\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"}],\"type\":\"RichText\"},{\"id\":\"504660880\",\"predicate\":\"pageBlockKicker\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":\"878078826\",\"predicate\":\"pageTableCell\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"header\",\"type\":\"flags.0?true\"},{\"name\":\"align_center\",\"type\":\"flags.3?true\"},{\"name\":\"align_right\",\"type\":\"flags.4?true\"},{\"name\":\"valign_middle\",\"type\":\"flags.5?true\"},{\"name\":\"valign_bottom\",\"type\":\"flags.6?true\"},{\"name\":\"text\",\"type\":\"flags.7?RichText\"},{\"name\":\"colspan\",\"type\":\"flags.1?int\"},{\"name\":\"rowspan\",\"type\":\"flags.2?int\"}],\"type\":\"PageTableCell\"},{\"id\":\"-524237339\",\"predicate\":\"pageTableRow\",\"params\":[{\"name\":\"cells\",\"type\":\"Vector<PageTableCell>\"}],\"type\":\"PageTableRow\"},{\"id\":\"-1085412734\",\"predicate\":\"pageBlockTable\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"bordered\",\"type\":\"flags.0?true\"},{\"name\":\"striped\",\"type\":\"flags.1?true\"},{\"name\":\"title\",\"type\":\"RichText\"},{\"name\":\"rows\",\"type\":\"Vector<PageTableRow>\"}],\"type\":\"PageBlock\"},{\"id\":\"1869903447\",\"predicate\":\"pageCaption\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"credit\",\"type\":\"RichText\"}],\"type\":\"PageCaption\"},{\"id\":\"-1188055347\",\"predicate\":\"pageListItemText\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageListItem\"},{\"id\":\"635466748\",\"predicate\":\"pageListItemBlocks\",\"params\":[{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"}],\"type\":\"PageListItem\"},{\"id\":\"1577484359\",\"predicate\":\"pageListOrderedItemText\",\"params\":[{\"name\":\"num\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"RichText\"}],\"type\":\"PageListOrderedItem\"},{\"id\":\"-1730311882\",\"predicate\":\"pageListOrderedItemBlocks\",\"params\":[{\"name\":\"num\",\"type\":\"string\"},{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"}],\"type\":\"PageListOrderedItem\"},{\"id\":\"-1702174239\",\"predicate\":\"pageBlockOrderedList\",\"params\":[{\"name\":\"items\",\"type\":\"Vector<PageListOrderedItem>\"}],\"type\":\"PageBlock\"},{\"id\":\"1987480557\",\"predicate\":\"pageBlockDetails\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"open\",\"type\":\"flags.0?true\"},{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"title\",\"type\":\"RichText\"}],\"type\":\"PageBlock\"},{\"id\":\"-1282352120\",\"predicate\":\"pageRelatedArticle\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"webpage_id\",\"type\":\"long\"},{\"name\":\"title\",\"type\":\"flags.0?string\"},{\"name\":\"description\",\"type\":\"flags.1?string\"},{\"name\":\"photo_id\",\"type\":\"flags.2?long\"},{\"name\":\"author\",\"type\":\"flags.3?string\"},{\"name\":\"published_date\",\"type\":\"flags.4?int\"}],\"type\":\"PageRelatedArticle\"},{\"id\":\"370236054\",\"predicate\":\"pageBlockRelatedArticles\",\"params\":[{\"name\":\"title\",\"type\":\"RichText\"},{\"name\":\"articles\",\"type\":\"Vector<PageRelatedArticle>\"}],\"type\":\"PageBlock\"},{\"id\":\"-1538310410\",\"predicate\":\"pageBlockMap\",\"params\":[{\"name\":\"geo\",\"type\":\"GeoPoint\"},{\"name\":\"zoom\",\"type\":\"int\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"caption\",\"type\":\"PageCaption\"}],\"type\":\"PageBlock\"},{\"id\":\"-1738178803\",\"predicate\":\"page\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"part\",\"type\":\"flags.0?true\"},{\"name\":\"rtl\",\"type\":\"flags.1?true\"},{\"name\":\"v2\",\"type\":\"flags.2?true\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"blocks\",\"type\":\"Vector<PageBlock>\"},{\"name\":\"photos\",\"type\":\"Vector<Photo>\"},{\"name\":\"documents\",\"type\":\"Vector<Document>\"},{\"name\":\"views\",\"type\":\"flags.3?int\"}],\"type\":\"Page\"},{\"id\":\"-610373422\",\"predicate\":\"inputPrivacyKeyPhoneP2P\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":\"961092808\",\"predicate\":\"privacyKeyPhoneP2P\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":\"894777186\",\"predicate\":\"textAnchor\",\"params\":[{\"name\":\"text\",\"type\":\"RichText\"},{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"RichText\"},{\"id\":\"-1945767479\",\"predicate\":\"help.supportName\",\"params\":[{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"help.SupportName\"},{\"id\":\"-206688531\",\"predicate\":\"help.userInfoEmpty\",\"params\":[],\"type\":\"help.UserInfo\"},{\"id\":\"32192344\",\"predicate\":\"help.userInfo\",\"params\":[{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"},{\"name\":\"author\",\"type\":\"string\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"help.UserInfo\"},{\"id\":\"-202219658\",\"predicate\":\"messageActionContactSignUp\",\"params\":[],\"type\":\"MessageAction\"},{\"id\":\"-1398708869\",\"predicate\":\"updateMessagePoll\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"poll_id\",\"type\":\"long\"},{\"name\":\"poll\",\"type\":\"flags.0?Poll\"},{\"name\":\"results\",\"type\":\"PollResults\"}],\"type\":\"Update\"},{\"id\":\"1823064809\",\"predicate\":\"pollAnswer\",\"params\":[{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"option\",\"type\":\"bytes\"}],\"type\":\"PollAnswer\"},{\"id\":\"-2032041631\",\"predicate\":\"poll\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"closed\",\"type\":\"flags.0?true\"},{\"name\":\"public_voters\",\"type\":\"flags.1?true\"},{\"name\":\"multiple_choice\",\"type\":\"flags.2?true\"},{\"name\":\"quiz\",\"type\":\"flags.3?true\"},{\"name\":\"question\",\"type\":\"string\"},{\"name\":\"answers\",\"type\":\"Vector<PollAnswer>\"},{\"name\":\"close_period\",\"type\":\"flags.4?int\"},{\"name\":\"close_date\",\"type\":\"flags.5?int\"}],\"type\":\"Poll\"},{\"id\":\"997055186\",\"predicate\":\"pollAnswerVoters\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"chosen\",\"type\":\"flags.0?true\"},{\"name\":\"correct\",\"type\":\"flags.1?true\"},{\"name\":\"option\",\"type\":\"bytes\"},{\"name\":\"voters\",\"type\":\"int\"}],\"type\":\"PollAnswerVoters\"},{\"id\":\"-1159937629\",\"predicate\":\"pollResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"min\",\"type\":\"flags.0?true\"},{\"name\":\"results\",\"type\":\"flags.1?Vector<PollAnswerVoters>\"},{\"name\":\"total_voters\",\"type\":\"flags.2?int\"},{\"name\":\"recent_voters\",\"type\":\"flags.3?Vector<int>\"},{\"name\":\"solution\",\"type\":\"flags.4?string\"},{\"name\":\"solution_entities\",\"type\":\"flags.4?Vector<MessageEntity>\"}],\"type\":\"PollResults\"},{\"id\":\"261416433\",\"predicate\":\"inputMediaPoll\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"poll\",\"type\":\"Poll\"},{\"name\":\"correct_answers\",\"type\":\"flags.0?Vector<bytes>\"},{\"name\":\"solution\",\"type\":\"flags.1?string\"},{\"name\":\"solution_entities\",\"type\":\"flags.1?Vector<MessageEntity>\"}],\"type\":\"InputMedia\"},{\"id\":\"1272375192\",\"predicate\":\"messageMediaPoll\",\"params\":[{\"name\":\"poll\",\"type\":\"Poll\"},{\"name\":\"results\",\"type\":\"PollResults\"}],\"type\":\"MessageMedia\"},{\"id\":\"-264117680\",\"predicate\":\"chatOnlines\",\"params\":[{\"name\":\"onlines\",\"type\":\"int\"}],\"type\":\"ChatOnlines\"},{\"id\":\"1202287072\",\"predicate\":\"statsURL\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"StatsURL\"},{\"id\":\"-525288402\",\"predicate\":\"photoStrippedSize\",\"params\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"PhotoSize\"},{\"id\":\"1605510357\",\"predicate\":\"chatAdminRights\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"change_info\",\"type\":\"flags.0?true\"},{\"name\":\"post_messages\",\"type\":\"flags.1?true\"},{\"name\":\"edit_messages\",\"type\":\"flags.2?true\"},{\"name\":\"delete_messages\",\"type\":\"flags.3?true\"},{\"name\":\"ban_users\",\"type\":\"flags.4?true\"},{\"name\":\"invite_users\",\"type\":\"flags.5?true\"},{\"name\":\"pin_messages\",\"type\":\"flags.7?true\"},{\"name\":\"add_admins\",\"type\":\"flags.9?true\"}],\"type\":\"ChatAdminRights\"},{\"id\":\"-1626209256\",\"predicate\":\"chatBannedRights\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"view_messages\",\"type\":\"flags.0?true\"},{\"name\":\"send_messages\",\"type\":\"flags.1?true\"},{\"name\":\"send_media\",\"type\":\"flags.2?true\"},{\"name\":\"send_stickers\",\"type\":\"flags.3?true\"},{\"name\":\"send_gifs\",\"type\":\"flags.4?true\"},{\"name\":\"send_games\",\"type\":\"flags.5?true\"},{\"name\":\"send_inline\",\"type\":\"flags.6?true\"},{\"name\":\"embed_links\",\"type\":\"flags.7?true\"},{\"name\":\"send_polls\",\"type\":\"flags.8?true\"},{\"name\":\"change_info\",\"type\":\"flags.10?true\"},{\"name\":\"invite_users\",\"type\":\"flags.15?true\"},{\"name\":\"pin_messages\",\"type\":\"flags.17?true\"},{\"name\":\"until_date\",\"type\":\"int\"}],\"type\":\"ChatBannedRights\"},{\"id\":\"1421875280\",\"predicate\":\"updateChatDefaultBannedRights\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"default_banned_rights\",\"type\":\"ChatBannedRights\"},{\"name\":\"version\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":\"-433014407\",\"predicate\":\"inputWallPaper\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputWallPaper\"},{\"id\":\"1913199744\",\"predicate\":\"inputWallPaperSlug\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"InputWallPaper\"},{\"id\":\"-1150621555\",\"predicate\":\"channelParticipantsContacts\",\"params\":[{\"name\":\"q\",\"type\":\"string\"}],\"type\":\"ChannelParticipantsFilter\"},{\"id\":\"771095562\",\"predicate\":\"channelAdminLogEventActionDefaultBannedRights\",\"params\":[{\"name\":\"prev_banned_rights\",\"type\":\"ChatBannedRights\"},{\"name\":\"new_banned_rights\",\"type\":\"ChatBannedRights\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":\"-1895328189\",\"predicate\":\"channelAdminLogEventActionStopPoll\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":\"471437699\",\"predicate\":\"account.wallPapersNotModified\",\"params\":[],\"type\":\"account.WallPapers\"},{\"id\":\"1881892265\",\"predicate\":\"account.wallPapers\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"wallpapers\",\"type\":\"Vector<WallPaper>\"}],\"type\":\"account.WallPapers\"},{\"id\":\"-557924733\",\"predicate\":\"codeSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"allow_flashcall\",\"type\":\"flags.0?true\"},{\"name\":\"current_number\",\"type\":\"flags.1?true\"},{\"name\":\"allow_app_hash\",\"type\":\"flags.4?true\"}],\"type\":\"CodeSettings\"},{\"id\":\"84438264\",\"predicate\":\"wallPaperSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"blur\",\"type\":\"flags.1?true\"},{\"name\":\"motion\",\"type\":\"flags.2?true\"},{\"name\":\"background_color\",\"type\":\"flags.0?int\"},{\"name\":\"second_background_color\",\"type\":\"flags.4?int\"},{\"name\":\"intensity\",\"type\":\"flags.3?int\"},{\"name\":\"rotation\",\"type\":\"flags.4?int\"}],\"type\":\"WallPaperSettings\"},{\"id\":\"-532532493\",\"predicate\":\"autoDownloadSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"disabled\",\"type\":\"flags.0?true\"},{\"name\":\"video_preload_large\",\"type\":\"flags.1?true\"},{\"name\":\"audio_preload_next\",\"type\":\"flags.2?true\"},{\"name\":\"phonecalls_less_data\",\"type\":\"flags.3?true\"},{\"name\":\"photo_size_max\",\"type\":\"int\"},{\"name\":\"video_size_max\",\"type\":\"int\"},{\"name\":\"file_size_max\",\"type\":\"int\"},{\"name\":\"video_upload_maxbitrate\",\"type\":\"int\"}],\"type\":\"AutoDownloadSettings\"},{\"id\":\"1674235686\",\"predicate\":\"account.autoDownloadSettings\",\"params\":[{\"name\":\"low\",\"type\":\"AutoDownloadSettings\"},{\"name\":\"medium\",\"type\":\"AutoDownloadSettings\"},{\"name\":\"high\",\"type\":\"AutoDownloadSettings\"}],\"type\":\"account.AutoDownloadSettings\"},{\"id\":\"-709641735\",\"predicate\":\"emojiKeyword\",\"params\":[{\"name\":\"keyword\",\"type\":\"string\"},{\"name\":\"emoticons\",\"type\":\"Vector<string>\"}],\"type\":\"EmojiKeyword\"},{\"id\":\"594408994\",\"predicate\":\"emojiKeywordDeleted\",\"params\":[{\"name\":\"keyword\",\"type\":\"string\"},{\"name\":\"emoticons\",\"type\":\"Vector<string>\"}],\"type\":\"EmojiKeyword\"},{\"id\":\"1556570557\",\"predicate\":\"emojiKeywordsDifference\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"from_version\",\"type\":\"int\"},{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"keywords\",\"type\":\"Vector<EmojiKeyword>\"}],\"type\":\"EmojiKeywordsDifference\"},{\"id\":\"-1519029347\",\"predicate\":\"emojiURL\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"EmojiURL\"},{\"id\":\"-1275374751\",\"predicate\":\"emojiLanguage\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"EmojiLanguage\"},{\"id\":\"-1529000952\",\"predicate\":\"inputPrivacyKeyForwards\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":\"1777096355\",\"predicate\":\"privacyKeyForwards\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":\"1461304012\",\"predicate\":\"inputPrivacyKeyProfilePhoto\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":\"-1777000467\",\"predicate\":\"privacyKeyProfilePhoto\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":\"-1132476723\",\"predicate\":\"fileLocationToBeDeprecated\",\"params\":[{\"name\":\"volume_id\",\"type\":\"long\"},{\"name\":\"local_id\",\"type\":\"int\"}],\"type\":\"FileLocation\"},{\"id\":\"1075322878\",\"predicate\":\"inputPhotoFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"thumb_size\",\"type\":\"string\"}],\"type\":\"InputFileLocation\"},{\"id\":\"-667654413\",\"predicate\":\"inputPhotoLegacyFileLocation\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"file_reference\",\"type\":\"bytes\"},{\"name\":\"volume_id\",\"type\":\"long\"},{\"name\":\"local_id\",\"type\":\"int\"},{\"name\":\"secret\",\"type\":\"long\"}],\"type\":\"InputFileLocation\"},{\"id\":\"668375447\",\"predicate\":\"inputPeerPhotoFileLocation\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"big\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"volume_id\",\"type\":\"long\"},{\"name\":\"local_id\",\"type\":\"int\"}],\"type\":\"InputFileLocation\"},{\"id\":\"230353641\",\"predicate\":\"inputStickerSetThumb\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"volume_id\",\"type\":\"long\"},{\"name\":\"local_id\",\"type\":\"int\"}],\"type\":\"InputFileLocation\"},{\"id\":\"-11252123\",\"predicate\":\"folder\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"autofill_new_broadcasts\",\"type\":\"flags.0?true\"},{\"name\":\"autofill_public_groups\",\"type\":\"flags.1?true\"},{\"name\":\"autofill_new_correspondents\",\"type\":\"flags.2?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"photo\",\"type\":\"flags.3?ChatPhoto\"}],\"type\":\"Folder\"},{\"id\":\"1908216652\",\"predicate\":\"dialogFolder\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.2?true\"},{\"name\":\"folder\",\"type\":\"Folder\"},{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"top_message\",\"type\":\"int\"},{\"name\":\"unread_muted_peers_count\",\"type\":\"int\"},{\"name\":\"unread_unmuted_peers_count\",\"type\":\"int\"},{\"name\":\"unread_muted_messages_count\",\"type\":\"int\"},{\"name\":\"unread_unmuted_messages_count\",\"type\":\"int\"}],\"type\":\"Dialog\"},{\"id\":\"1684014375\",\"predicate\":\"inputDialogPeerFolder\",\"params\":[{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"InputDialogPeer\"},{\"id\":\"1363483106\",\"predicate\":\"dialogPeerFolder\",\"params\":[{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"DialogPeer\"},{\"id\":\"-70073706\",\"predicate\":\"inputFolderPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"InputFolderPeer\"},{\"id\":\"-373643672\",\"predicate\":\"folderPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"FolderPeer\"},{\"id\":\"422972864\",\"predicate\":\"updateFolderPeers\",\"params\":[{\"name\":\"folder_peers\",\"type\":\"Vector<FolderPeer>\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_count\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":\"756118935\",\"predicate\":\"inputUserFromMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"int\"}],\"type\":\"InputUser\"},{\"id\":\"707290417\",\"predicate\":\"inputChannelFromMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"channel_id\",\"type\":\"int\"}],\"type\":\"InputChannel\"},{\"id\":\"398123750\",\"predicate\":\"inputPeerUserFromMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"int\"}],\"type\":\"InputPeer\"},{\"id\":\"-1667893317\",\"predicate\":\"inputPeerChannelFromMessage\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"channel_id\",\"type\":\"int\"}],\"type\":\"InputPeer\"},{\"id\":\"55761658\",\"predicate\":\"inputPrivacyKeyPhoneNumber\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":\"-778378131\",\"predicate\":\"privacyKeyPhoneNumber\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":\"-1472172887\",\"predicate\":\"topPeerCategoryForwardUsers\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":\"-68239120\",\"predicate\":\"topPeerCategoryForwardChats\",\"params\":[],\"type\":\"TopPeerCategory\"},{\"id\":\"-1569748965\",\"predicate\":\"channelAdminLogEventActionChangeLinkedChat\",\"params\":[{\"name\":\"prev_value\",\"type\":\"int\"},{\"name\":\"new_value\",\"type\":\"int\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":\"-398136321\",\"predicate\":\"messages.searchCounter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"inexact\",\"type\":\"flags.1?true\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"count\",\"type\":\"int\"}],\"type\":\"messages.SearchCounter\"},{\"id\":\"280464681\",\"predicate\":\"keyboardButtonUrlAuth\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"fwd_text\",\"type\":\"flags.0?string\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"button_id\",\"type\":\"int\"}],\"type\":\"KeyboardButton\"},{\"id\":\"-802258988\",\"predicate\":\"inputKeyboardButtonUrlAuth\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"request_write_access\",\"type\":\"flags.0?true\"},{\"name\":\"text\",\"type\":\"string\"},{\"name\":\"fwd_text\",\"type\":\"flags.1?string\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"bot\",\"type\":\"InputUser\"}],\"type\":\"KeyboardButton\"},{\"id\":\"-1831650802\",\"predicate\":\"urlAuthResultRequest\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"request_write_access\",\"type\":\"flags.0?true\"},{\"name\":\"bot\",\"type\":\"User\"},{\"name\":\"domain\",\"type\":\"string\"}],\"type\":\"UrlAuthResult\"},{\"id\":\"-1886646706\",\"predicate\":\"urlAuthResultAccepted\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"UrlAuthResult\"},{\"id\":\"-1445536993\",\"predicate\":\"urlAuthResultDefault\",\"params\":[],\"type\":\"UrlAuthResult\"},{\"id\":\"1283572154\",\"predicate\":\"inputPrivacyValueAllowChatParticipants\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<int>\"}],\"type\":\"InputPrivacyRule\"},{\"id\":\"-668769361\",\"predicate\":\"inputPrivacyValueDisallowChatParticipants\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<int>\"}],\"type\":\"InputPrivacyRule\"},{\"id\":\"415136107\",\"predicate\":\"privacyValueAllowChatParticipants\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<int>\"}],\"type\":\"PrivacyRule\"},{\"id\":\"-1397881200\",\"predicate\":\"privacyValueDisallowChatParticipants\",\"params\":[{\"name\":\"chats\",\"type\":\"Vector<int>\"}],\"type\":\"PrivacyRule\"},{\"id\":\"-1672577397\",\"predicate\":\"messageEntityUnderline\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":\"-1090087980\",\"predicate\":\"messageEntityStrike\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":\"34469328\",\"predicate\":\"messageEntityBlockquote\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":\"1786671974\",\"predicate\":\"updatePeerSettings\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"settings\",\"type\":\"PeerSettings\"}],\"type\":\"Update\"},{\"id\":\"-1078612597\",\"predicate\":\"channelLocationEmpty\",\"params\":[],\"type\":\"ChannelLocation\"},{\"id\":\"547062491\",\"predicate\":\"channelLocation\",\"params\":[{\"name\":\"geo_point\",\"type\":\"GeoPoint\"},{\"name\":\"address\",\"type\":\"string\"}],\"type\":\"ChannelLocation\"},{\"id\":\"-901375139\",\"predicate\":\"peerLocated\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"distance\",\"type\":\"int\"}],\"type\":\"PeerLocated\"},{\"id\":\"-1263546448\",\"predicate\":\"updatePeerLocated\",\"params\":[{\"name\":\"peers\",\"type\":\"Vector<PeerLocated>\"}],\"type\":\"Update\"},{\"id\":\"241923758\",\"predicate\":\"channelAdminLogEventActionChangeLocation\",\"params\":[{\"name\":\"prev_value\",\"type\":\"ChannelLocation\"},{\"name\":\"new_value\",\"type\":\"ChannelLocation\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":\"-606798099\",\"predicate\":\"inputReportReasonGeoIrrelevant\",\"params\":[],\"type\":\"ReportReason\"},{\"id\":\"1401984889\",\"predicate\":\"channelAdminLogEventActionToggleSlowMode\",\"params\":[{\"name\":\"prev_value\",\"type\":\"int\"},{\"name\":\"new_value\",\"type\":\"int\"}],\"type\":\"ChannelAdminLogEventAction\"},{\"id\":\"1148485274\",\"predicate\":\"auth.authorizationSignUpRequired\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"terms_of_service\",\"type\":\"flags.0?help.TermsOfService\"}],\"type\":\"auth.Authorization\"},{\"id\":\"-666824391\",\"predicate\":\"payments.paymentVerificationNeeded\",\"params\":[{\"name\":\"url\",\"type\":\"string\"}],\"type\":\"payments.PaymentResult\"},{\"id\":\"42402760\",\"predicate\":\"inputStickerSetAnimatedEmoji\",\"params\":[],\"type\":\"InputStickerSet\"},{\"id\":\"967122427\",\"predicate\":\"updateNewScheduledMessage\",\"params\":[{\"name\":\"message\",\"type\":\"Message\"}],\"type\":\"Update\"},{\"id\":\"-1870238482\",\"predicate\":\"updateDeleteScheduledMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"messages\",\"type\":\"Vector<int>\"}],\"type\":\"Update\"},{\"id\":\"-797791052\",\"predicate\":\"restrictionReason\",\"params\":[{\"name\":\"platform\",\"type\":\"string\"},{\"name\":\"reason\",\"type\":\"string\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"RestrictionReason\"},{\"id\":\"1012306921\",\"predicate\":\"inputTheme\",\"params\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"}],\"type\":\"InputTheme\"},{\"id\":\"-175567375\",\"predicate\":\"inputThemeSlug\",\"params\":[{\"name\":\"slug\",\"type\":\"string\"}],\"type\":\"InputTheme\"},{\"id\":\"42930452\",\"predicate\":\"theme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"creator\",\"type\":\"flags.0?true\"},{\"name\":\"default\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"access_hash\",\"type\":\"long\"},{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"document\",\"type\":\"flags.2?Document\"},{\"name\":\"settings\",\"type\":\"flags.3?ThemeSettings\"},{\"name\":\"installs_count\",\"type\":\"int\"}],\"type\":\"Theme\"},{\"id\":\"-199313886\",\"predicate\":\"account.themesNotModified\",\"params\":[],\"type\":\"account.Themes\"},{\"id\":\"2137482273\",\"predicate\":\"account.themes\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"},{\"name\":\"themes\",\"type\":\"Vector<Theme>\"}],\"type\":\"account.Themes\"},{\"id\":\"-2112423005\",\"predicate\":\"updateTheme\",\"params\":[{\"name\":\"theme\",\"type\":\"Theme\"}],\"type\":\"Update\"},{\"id\":\"-786326563\",\"predicate\":\"inputPrivacyKeyAddedByPhone\",\"params\":[],\"type\":\"InputPrivacyKey\"},{\"id\":\"1124062251\",\"predicate\":\"privacyKeyAddedByPhone\",\"params\":[],\"type\":\"PrivacyKey\"},{\"id\":\"-2027964103\",\"predicate\":\"updateGeoLiveViewed\",\"params\":[{\"name\":\"peer\",\"type\":\"Peer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Update\"},{\"id\":\"1448076945\",\"predicate\":\"updateLoginToken\",\"params\":[],\"type\":\"Update\"},{\"id\":\"1654593920\",\"predicate\":\"auth.loginToken\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"},{\"name\":\"token\",\"type\":\"bytes\"}],\"type\":\"auth.LoginToken\"},{\"id\":\"110008598\",\"predicate\":\"auth.loginTokenMigrateTo\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"},{\"name\":\"token\",\"type\":\"bytes\"}],\"type\":\"auth.LoginToken\"},{\"id\":\"957176926\",\"predicate\":\"auth.loginTokenSuccess\",\"params\":[{\"name\":\"authorization\",\"type\":\"auth.Authorization\"}],\"type\":\"auth.LoginToken\"},{\"id\":\"1474462241\",\"predicate\":\"account.contentSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"sensitive_enabled\",\"type\":\"flags.0?true\"},{\"name\":\"sensitive_can_change\",\"type\":\"flags.1?true\"}],\"type\":\"account.ContentSettings\"},{\"id\":\"-1456996667\",\"predicate\":\"messages.inactiveChats\",\"params\":[{\"name\":\"dates\",\"type\":\"Vector<int>\"},{\"name\":\"chats\",\"type\":\"Vector<Chat>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"}],\"type\":\"messages.InactiveChats\"},{\"id\":\"-1012849566\",\"predicate\":\"baseThemeClassic\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":\"-69724536\",\"predicate\":\"baseThemeDay\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":\"-1212997976\",\"predicate\":\"baseThemeNight\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":\"1834973166\",\"predicate\":\"baseThemeTinted\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":\"1527845466\",\"predicate\":\"baseThemeArctic\",\"params\":[],\"type\":\"BaseTheme\"},{\"id\":\"-2077770836\",\"predicate\":\"inputWallPaperNoFile\",\"params\":[],\"type\":\"InputWallPaper\"},{\"id\":\"-1963717851\",\"predicate\":\"wallPaperNoFile\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"default\",\"type\":\"flags.1?true\"},{\"name\":\"dark\",\"type\":\"flags.4?true\"},{\"name\":\"settings\",\"type\":\"flags.2?WallPaperSettings\"}],\"type\":\"WallPaper\"},{\"id\":\"-1118798639\",\"predicate\":\"inputThemeSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"base_theme\",\"type\":\"BaseTheme\"},{\"name\":\"accent_color\",\"type\":\"int\"},{\"name\":\"message_top_color\",\"type\":\"flags.0?int\"},{\"name\":\"message_bottom_color\",\"type\":\"flags.0?int\"},{\"name\":\"wallpaper\",\"type\":\"flags.1?InputWallPaper\"},{\"name\":\"wallpaper_settings\",\"type\":\"flags.1?WallPaperSettings\"}],\"type\":\"InputThemeSettings\"},{\"id\":\"-1676371894\",\"predicate\":\"themeSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"base_theme\",\"type\":\"BaseTheme\"},{\"name\":\"accent_color\",\"type\":\"int\"},{\"name\":\"message_top_color\",\"type\":\"flags.0?int\"},{\"name\":\"message_bottom_color\",\"type\":\"flags.0?int\"},{\"name\":\"wallpaper\",\"type\":\"flags.1?WallPaper\"}],\"type\":\"ThemeSettings\"},{\"id\":\"1421174295\",\"predicate\":\"webPageAttributeTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"documents\",\"type\":\"flags.0?Vector<Document>\"},{\"name\":\"settings\",\"type\":\"flags.1?ThemeSettings\"}],\"type\":\"WebPageAttribute\"},{\"id\":\"1123585836\",\"predicate\":\"updateMessagePollVote\",\"params\":[{\"name\":\"poll_id\",\"type\":\"long\"},{\"name\":\"user_id\",\"type\":\"int\"},{\"name\":\"options\",\"type\":\"Vector<bytes>\"}],\"type\":\"Update\"},{\"id\":\"-1567730343\",\"predicate\":\"messageUserVote\",\"params\":[{\"name\":\"user_id\",\"type\":\"int\"},{\"name\":\"option\",\"type\":\"bytes\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"MessageUserVote\"},{\"id\":\"909603888\",\"predicate\":\"messageUserVoteInputOption\",\"params\":[{\"name\":\"user_id\",\"type\":\"int\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"MessageUserVote\"},{\"id\":\"244310238\",\"predicate\":\"messageUserVoteMultiple\",\"params\":[{\"name\":\"user_id\",\"type\":\"int\"},{\"name\":\"options\",\"type\":\"Vector<bytes>\"},{\"name\":\"date\",\"type\":\"int\"}],\"type\":\"MessageUserVote\"},{\"id\":\"136574537\",\"predicate\":\"messages.votesList\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"count\",\"type\":\"int\"},{\"name\":\"votes\",\"type\":\"Vector<MessageUserVote>\"},{\"name\":\"users\",\"type\":\"Vector<User>\"},{\"name\":\"next_offset\",\"type\":\"flags.0?string\"}],\"type\":\"messages.VotesList\"},{\"id\":\"-1144565411\",\"predicate\":\"keyboardButtonRequestPoll\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"quiz\",\"type\":\"flags.0?Bool\"},{\"name\":\"text\",\"type\":\"string\"}],\"type\":\"KeyboardButton\"},{\"id\":\"1981704948\",\"predicate\":\"messageEntityBankCard\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"length\",\"type\":\"int\"}],\"type\":\"MessageEntity\"},{\"id\":\"-177732982\",\"predicate\":\"bankCardOpenUrl\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"}],\"type\":\"BankCardOpenUrl\"},{\"id\":\"1042605427\",\"predicate\":\"payments.bankCardData\",\"params\":[{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"open_urls\",\"type\":\"Vector<BankCardOpenUrl>\"}],\"type\":\"payments.BankCardData\"},{\"id\":\"-118740917\",\"predicate\":\"peerSelfLocated\",\"params\":[{\"name\":\"expires\",\"type\":\"int\"}],\"type\":\"PeerLocated\"},{\"id\":\"1949890536\",\"predicate\":\"dialogFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"contacts\",\"type\":\"flags.0?true\"},{\"name\":\"non_contacts\",\"type\":\"flags.1?true\"},{\"name\":\"groups\",\"type\":\"flags.2?true\"},{\"name\":\"broadcasts\",\"type\":\"flags.3?true\"},{\"name\":\"bots\",\"type\":\"flags.4?true\"},{\"name\":\"exclude_muted\",\"type\":\"flags.11?true\"},{\"name\":\"exclude_read\",\"type\":\"flags.12?true\"},{\"name\":\"exclude_archived\",\"type\":\"flags.13?true\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"emoticon\",\"type\":\"flags.25?string\"},{\"name\":\"pinned_peers\",\"type\":\"Vector<InputPeer>\"},{\"name\":\"include_peers\",\"type\":\"Vector<InputPeer>\"},{\"name\":\"exclude_peers\",\"type\":\"Vector<InputPeer>\"}],\"type\":\"DialogFilter\"},{\"id\":\"2004110666\",\"predicate\":\"dialogFilterSuggested\",\"params\":[{\"name\":\"filter\",\"type\":\"DialogFilter\"},{\"name\":\"description\",\"type\":\"string\"}],\"type\":\"DialogFilterSuggested\"},{\"id\":\"654302845\",\"predicate\":\"updateDialogFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"filter\",\"type\":\"flags.0?DialogFilter\"}],\"type\":\"Update\"},{\"id\":\"-1512627963\",\"predicate\":\"updateDialogFilterOrder\",\"params\":[{\"name\":\"order\",\"type\":\"Vector<int>\"}],\"type\":\"Update\"},{\"id\":\"889491791\",\"predicate\":\"updateDialogFilters\",\"params\":[],\"type\":\"Update\"},{\"id\":\"-1237848657\",\"predicate\":\"statsDateRangeDays\",\"params\":[{\"name\":\"min_date\",\"type\":\"int\"},{\"name\":\"max_date\",\"type\":\"int\"}],\"type\":\"StatsDateRangeDays\"},{\"id\":\"-884757282\",\"predicate\":\"statsAbsValueAndPrev\",\"params\":[{\"name\":\"current\",\"type\":\"double\"},{\"name\":\"previous\",\"type\":\"double\"}],\"type\":\"StatsAbsValueAndPrev\"},{\"id\":\"-875679776\",\"predicate\":\"statsPercentValue\",\"params\":[{\"name\":\"part\",\"type\":\"double\"},{\"name\":\"total\",\"type\":\"double\"}],\"type\":\"StatsPercentValue\"},{\"id\":\"1244130093\",\"predicate\":\"statsGraphAsync\",\"params\":[{\"name\":\"token\",\"type\":\"string\"}],\"type\":\"StatsGraph\"},{\"id\":\"-1092839390\",\"predicate\":\"statsGraphError\",\"params\":[{\"name\":\"error\",\"type\":\"string\"}],\"type\":\"StatsGraph\"},{\"id\":\"-1901828938\",\"predicate\":\"statsGraph\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"json\",\"type\":\"DataJSON\"},{\"name\":\"zoom_token\",\"type\":\"flags.0?string\"}],\"type\":\"StatsGraph\"},{\"id\":\"-1387279939\",\"predicate\":\"messageInteractionCounters\",\"params\":[{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"views\",\"type\":\"int\"},{\"name\":\"forwards\",\"type\":\"int\"}],\"type\":\"MessageInteractionCounters\"},{\"id\":\"-1107852396\",\"predicate\":\"stats.broadcastStats\",\"params\":[{\"name\":\"period\",\"type\":\"StatsDateRangeDays\"},{\"name\":\"followers\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"views_per_post\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"shares_per_post\",\"type\":\"StatsAbsValueAndPrev\"},{\"name\":\"enabled_notifications\",\"type\":\"StatsPercentValue\"},{\"name\":\"growth_graph\",\"type\":\"StatsGraph\"},{\"name\":\"followers_graph\",\"type\":\"StatsGraph\"},{\"name\":\"mute_graph\",\"type\":\"StatsGraph\"},{\"name\":\"top_hours_graph\",\"type\":\"StatsGraph\"},{\"name\":\"interactions_graph\",\"type\":\"StatsGraph\"},{\"name\":\"iv_interactions_graph\",\"type\":\"StatsGraph\"},{\"name\":\"views_by_source_graph\",\"type\":\"StatsGraph\"},{\"name\":\"new_followers_by_source_graph\",\"type\":\"StatsGraph\"},{\"name\":\"languages_graph\",\"type\":\"StatsGraph\"},{\"name\":\"recent_message_interactions\",\"type\":\"Vector<MessageInteractionCounters>\"}],\"type\":\"stats.BroadcastStats\"},{\"id\":\"-428884101\",\"predicate\":\"inputMediaDice\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"InputMedia\"},{\"id\":\"1065280907\",\"predicate\":\"messageMediaDice\",\"params\":[{\"name\":\"value\",\"type\":\"int\"},{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"MessageMedia\"},{\"id\":\"-427863538\",\"predicate\":\"inputStickerSetDice\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"}],\"type\":\"InputStickerSet\"}],\"methods\":[{\"id\":\"-878758099\",\"method\":\"invokeAfterMsg\",\"params\":[{\"name\":\"msg_id\",\"type\":\"long\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":\"1036301552\",\"method\":\"invokeAfterMsgs\",\"params\":[{\"name\":\"msg_ids\",\"type\":\"Vector<long>\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":\"-1502141361\",\"method\":\"auth.sendCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"api_hash\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"CodeSettings\"}],\"type\":\"auth.SentCode\"},{\"id\":\"-2131827673\",\"method\":\"auth.signUp\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"}],\"type\":\"auth.Authorization\"},{\"id\":\"-1126886015\",\"method\":\"auth.signIn\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"phone_code\",\"type\":\"string\"}],\"type\":\"auth.Authorization\"},{\"id\":\"1461180992\",\"method\":\"auth.logOut\",\"params\":[],\"type\":\"Bool\"},{\"id\":\"-1616179942\",\"method\":\"auth.resetAuthorizations\",\"params\":[],\"type\":\"Bool\"},{\"id\":\"-440401971\",\"method\":\"auth.exportAuthorization\",\"params\":[{\"name\":\"dc_id\",\"type\":\"int\"}],\"type\":\"auth.ExportedAuthorization\"},{\"id\":\"-470837741\",\"method\":\"auth.importAuthorization\",\"params\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"auth.Authorization\"},{\"id\":\"-841733627\",\"method\":\"auth.bindTempAuthKey\",\"params\":[{\"name\":\"perm_auth_key_id\",\"type\":\"long\"},{\"name\":\"nonce\",\"type\":\"long\"},{\"name\":\"expires_at\",\"type\":\"int\"},{\"name\":\"encrypted_message\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":\"1754754159\",\"method\":\"account.registerDevice\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_muted\",\"type\":\"flags.0?true\"},{\"name\":\"token_type\",\"type\":\"int\"},{\"name\":\"token\",\"type\":\"string\"},{\"name\":\"app_sandbox\",\"type\":\"Bool\"},{\"name\":\"secret\",\"type\":\"bytes\"},{\"name\":\"other_uids\",\"type\":\"Vector<int>\"}],\"type\":\"Bool\"},{\"id\":\"813089983\",\"method\":\"account.unregisterDevice\",\"params\":[{\"name\":\"token_type\",\"type\":\"int\"},{\"name\":\"token\",\"type\":\"string\"},{\"name\":\"other_uids\",\"type\":\"Vector<int>\"}],\"type\":\"Bool\"},{\"id\":\"-2067899501\",\"method\":\"account.updateNotifySettings\",\"params\":[{\"name\":\"peer\",\"type\":\"InputNotifyPeer\"},{\"name\":\"settings\",\"type\":\"InputPeerNotifySettings\"}],\"type\":\"Bool\"},{\"id\":\"313765169\",\"method\":\"account.getNotifySettings\",\"params\":[{\"name\":\"peer\",\"type\":\"InputNotifyPeer\"}],\"type\":\"PeerNotifySettings\"},{\"id\":\"-612493497\",\"method\":\"account.resetNotifySettings\",\"params\":[],\"type\":\"Bool\"},{\"id\":\"2018596725\",\"method\":\"account.updateProfile\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"first_name\",\"type\":\"flags.0?string\"},{\"name\":\"last_name\",\"type\":\"flags.1?string\"},{\"name\":\"about\",\"type\":\"flags.2?string\"}],\"type\":\"User\"},{\"id\":\"1713919532\",\"method\":\"account.updateStatus\",\"params\":[{\"name\":\"offline\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":\"-1430579357\",\"method\":\"account.getWallPapers\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"account.WallPapers\"},{\"id\":\"-1374118561\",\"method\":\"account.reportPeer\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reason\",\"type\":\"ReportReason\"}],\"type\":\"Bool\"},{\"id\":\"227648840\",\"method\":\"users.getUsers\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputUser>\"}],\"type\":\"Vector<User>\"},{\"id\":\"-902781519\",\"method\":\"users.getFullUser\",\"params\":[{\"name\":\"id\",\"type\":\"InputUser\"}],\"type\":\"UserFull\"},{\"id\":\"749357634\",\"method\":\"contacts.getContactIDs\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"Vector<int>\"},{\"id\":\"-995929106\",\"method\":\"contacts.getStatuses\",\"params\":[],\"type\":\"Vector<ContactStatus>\"},{\"id\":\"-1071414113\",\"method\":\"contacts.getContacts\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"contacts.Contacts\"},{\"id\":\"746589157\",\"method\":\"contacts.importContacts\",\"params\":[{\"name\":\"contacts\",\"type\":\"Vector<InputContact>\"}],\"type\":\"contacts.ImportedContacts\"},{\"id\":\"157945344\",\"method\":\"contacts.deleteContacts\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputUser>\"}],\"type\":\"Updates\"},{\"id\":\"269745566\",\"method\":\"contacts.deleteByPhones\",\"params\":[{\"name\":\"phones\",\"type\":\"Vector<string>\"}],\"type\":\"Bool\"},{\"id\":\"858475004\",\"method\":\"contacts.block\",\"params\":[{\"name\":\"id\",\"type\":\"InputUser\"}],\"type\":\"Bool\"},{\"id\":\"-448724803\",\"method\":\"contacts.unblock\",\"params\":[{\"name\":\"id\",\"type\":\"InputUser\"}],\"type\":\"Bool\"},{\"id\":\"-176409329\",\"method\":\"contacts.getBlocked\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"contacts.Blocked\"},{\"id\":\"1673946374\",\"method\":\"messages.getMessages\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputMessage>\"}],\"type\":\"messages.Messages\"},{\"id\":\"-1594999949\",\"method\":\"messages.getDialogs\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"exclude_pinned\",\"type\":\"flags.0?true\"},{\"name\":\"folder_id\",\"type\":\"flags.1?int\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_peer\",\"type\":\"InputPeer\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.Dialogs\"},{\"id\":\"-591691168\",\"method\":\"messages.getHistory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"offset_date\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":\"-2045448344\",\"method\":\"messages.search\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"from_id\",\"type\":\"flags.0?InputUser\"},{\"name\":\"filter\",\"type\":\"MessagesFilter\"},{\"name\":\"min_date\",\"type\":\"int\"},{\"name\":\"max_date\",\"type\":\"int\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":\"238054714\",\"method\":\"messages.readHistory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":\"469850889\",\"method\":\"messages.deleteHistory\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"just_clear\",\"type\":\"flags.0?true\"},{\"name\":\"revoke\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":\"-443640366\",\"method\":\"messages.deleteMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"revoke\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":\"94983360\",\"method\":\"messages.receivedMessages\",\"params\":[{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Vector<ReceivedNotifyMessage>\"},{\"id\":\"-1551737264\",\"method\":\"messages.setTyping\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"action\",\"type\":\"SendMessageAction\"}],\"type\":\"Bool\"},{\"id\":\"1376532592\",\"method\":\"messages.sendMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"clear_draft\",\"type\":\"flags.7?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"}],\"type\":\"Updates\"},{\"id\":\"881978281\",\"method\":\"messages.sendMedia\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"clear_draft\",\"type\":\"flags.7?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"media\",\"type\":\"InputMedia\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"}],\"type\":\"Updates\"},{\"id\":\"-637606386\",\"method\":\"messages.forwardMessages\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"with_my_score\",\"type\":\"flags.8?true\"},{\"name\":\"grouped\",\"type\":\"flags.9?true\"},{\"name\":\"from_peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"},{\"name\":\"random_id\",\"type\":\"Vector<long>\"},{\"name\":\"to_peer\",\"type\":\"InputPeer\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"}],\"type\":\"Updates\"},{\"id\":\"-820669733\",\"method\":\"messages.reportSpam\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":\"913498268\",\"method\":\"messages.getPeerSettings\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"PeerSettings\"},{\"id\":\"-1115507112\",\"method\":\"messages.report\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"},{\"name\":\"reason\",\"type\":\"ReportReason\"}],\"type\":\"Bool\"},{\"id\":\"1013621127\",\"method\":\"messages.getChats\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"messages.Chats\"},{\"id\":\"998448230\",\"method\":\"messages.getFullChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"}],\"type\":\"messages.ChatFull\"},{\"id\":\"-599447467\",\"method\":\"messages.editChatTitle\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":\"-900957736\",\"method\":\"messages.editChatPhoto\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"photo\",\"type\":\"InputChatPhoto\"}],\"type\":\"Updates\"},{\"id\":\"-106911223\",\"method\":\"messages.addChatUser\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"fwd_limit\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":\"-530505962\",\"method\":\"messages.deleteChatUser\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"Updates\"},{\"id\":\"164303470\",\"method\":\"messages.createChat\",\"params\":[{\"name\":\"users\",\"type\":\"Vector<InputUser>\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":\"-304838614\",\"method\":\"updates.getState\",\"params\":[],\"type\":\"updates.State\"},{\"id\":\"630429265\",\"method\":\"updates.getDifference\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"pts_total_limit\",\"type\":\"flags.0?int\"},{\"name\":\"date\",\"type\":\"int\"},{\"name\":\"qts\",\"type\":\"int\"}],\"type\":\"updates.Difference\"},{\"id\":\"-256159406\",\"method\":\"photos.updateProfilePhoto\",\"params\":[{\"name\":\"id\",\"type\":\"InputPhoto\"}],\"type\":\"UserProfilePhoto\"},{\"id\":\"1328726168\",\"method\":\"photos.uploadProfilePhoto\",\"params\":[{\"name\":\"file\",\"type\":\"InputFile\"}],\"type\":\"photos.Photo\"},{\"id\":\"-2016444625\",\"method\":\"photos.deletePhotos\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputPhoto>\"}],\"type\":\"Vector<long>\"},{\"id\":\"-1291540959\",\"method\":\"upload.saveFilePart\",\"params\":[{\"name\":\"file_id\",\"type\":\"long\"},{\"name\":\"file_part\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":\"-1319462148\",\"method\":\"upload.getFile\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"precise\",\"type\":\"flags.0?true\"},{\"name\":\"cdn_supported\",\"type\":\"flags.1?true\"},{\"name\":\"location\",\"type\":\"InputFileLocation\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"upload.File\"},{\"id\":\"-990308245\",\"method\":\"help.getConfig\",\"params\":[],\"type\":\"Config\"},{\"id\":\"531836966\",\"method\":\"help.getNearestDc\",\"params\":[],\"type\":\"NearestDc\"},{\"id\":\"1378703997\",\"method\":\"help.getAppUpdate\",\"params\":[{\"name\":\"source\",\"type\":\"string\"}],\"type\":\"help.AppUpdate\"},{\"id\":\"1295590211\",\"method\":\"help.getInviteText\",\"params\":[],\"type\":\"help.InviteText\"},{\"id\":\"-1848823128\",\"method\":\"photos.getUserPhotos\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"photos.Photos\"},{\"id\":\"651135312\",\"method\":\"messages.getDhConfig\",\"params\":[{\"name\":\"version\",\"type\":\"int\"},{\"name\":\"random_length\",\"type\":\"int\"}],\"type\":\"messages.DhConfig\"},{\"id\":\"-162681021\",\"method\":\"messages.requestEncryption\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"random_id\",\"type\":\"int\"},{\"name\":\"g_a\",\"type\":\"bytes\"}],\"type\":\"EncryptedChat\"},{\"id\":\"1035731989\",\"method\":\"messages.acceptEncryption\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"g_b\",\"type\":\"bytes\"},{\"name\":\"key_fingerprint\",\"type\":\"long\"}],\"type\":\"EncryptedChat\"},{\"id\":\"-304536635\",\"method\":\"messages.discardEncryption\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":\"2031374829\",\"method\":\"messages.setEncryptedTyping\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"typing\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":\"2135648522\",\"method\":\"messages.readEncryptedHistory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"max_date\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":\"-1451792525\",\"method\":\"messages.sendEncrypted\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":\"-1701831834\",\"method\":\"messages.sendEncryptedFile\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"bytes\"},{\"name\":\"file\",\"type\":\"InputEncryptedFile\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":\"852769188\",\"method\":\"messages.sendEncryptedService\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"type\":\"messages.SentEncryptedMessage\"},{\"id\":\"1436924774\",\"method\":\"messages.receivedQueue\",\"params\":[{\"name\":\"max_qts\",\"type\":\"int\"}],\"type\":\"Vector<long>\"},{\"id\":\"1259113487\",\"method\":\"messages.reportEncryptedSpam\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"}],\"type\":\"Bool\"},{\"id\":\"-562337987\",\"method\":\"upload.saveBigFilePart\",\"params\":[{\"name\":\"file_id\",\"type\":\"long\"},{\"name\":\"file_part\",\"type\":\"int\"},{\"name\":\"file_total_parts\",\"type\":\"int\"},{\"name\":\"bytes\",\"type\":\"bytes\"}],\"type\":\"Bool\"},{\"id\":\"-1043505495\",\"method\":\"initConnection\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"device_model\",\"type\":\"string\"},{\"name\":\"system_version\",\"type\":\"string\"},{\"name\":\"app_version\",\"type\":\"string\"},{\"name\":\"system_lang_code\",\"type\":\"string\"},{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"proxy\",\"type\":\"flags.0?InputClientProxy\"},{\"name\":\"params\",\"type\":\"flags.1?JSONValue\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":\"-1663104819\",\"method\":\"help.getSupport\",\"params\":[],\"type\":\"help.Support\"},{\"id\":\"916930423\",\"method\":\"messages.readMessageContents\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":\"655677548\",\"method\":\"account.checkUsername\",\"params\":[{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":\"1040964988\",\"method\":\"account.updateUsername\",\"params\":[{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"User\"},{\"id\":\"301470424\",\"method\":\"contacts.search\",\"params\":[{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"contacts.Found\"},{\"id\":\"-623130288\",\"method\":\"account.getPrivacy\",\"params\":[{\"name\":\"key\",\"type\":\"InputPrivacyKey\"}],\"type\":\"account.PrivacyRules\"},{\"id\":\"-906486552\",\"method\":\"account.setPrivacy\",\"params\":[{\"name\":\"key\",\"type\":\"InputPrivacyKey\"},{\"name\":\"rules\",\"type\":\"Vector<InputPrivacyRule>\"}],\"type\":\"account.PrivacyRules\"},{\"id\":\"1099779595\",\"method\":\"account.deleteAccount\",\"params\":[{\"name\":\"reason\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":\"150761757\",\"method\":\"account.getAccountTTL\",\"params\":[],\"type\":\"AccountDaysTTL\"},{\"id\":\"608323678\",\"method\":\"account.setAccountTTL\",\"params\":[{\"name\":\"ttl\",\"type\":\"AccountDaysTTL\"}],\"type\":\"Bool\"},{\"id\":\"-627372787\",\"method\":\"invokeWithLayer\",\"params\":[{\"name\":\"layer\",\"type\":\"int\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":\"-113456221\",\"method\":\"contacts.resolveUsername\",\"params\":[{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"contacts.ResolvedPeer\"},{\"id\":\"-2108208411\",\"method\":\"account.sendChangePhoneCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"CodeSettings\"}],\"type\":\"auth.SentCode\"},{\"id\":\"1891839707\",\"method\":\"account.changePhone\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"phone_code\",\"type\":\"string\"}],\"type\":\"User\"},{\"id\":\"71126828\",\"method\":\"messages.getStickers\",\"params\":[{\"name\":\"emoticon\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.Stickers\"},{\"id\":\"479598769\",\"method\":\"messages.getAllStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.AllStickers\"},{\"id\":\"954152242\",\"method\":\"account.updateDeviceLocked\",\"params\":[{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":\"1738800940\",\"method\":\"auth.importBotAuthorization\",\"params\":[{\"name\":\"flags\",\"type\":\"int\"},{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"api_hash\",\"type\":\"string\"},{\"name\":\"bot_auth_token\",\"type\":\"string\"}],\"type\":\"auth.Authorization\"},{\"id\":\"-1956073268\",\"method\":\"messages.getWebPagePreview\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"}],\"type\":\"MessageMedia\"},{\"id\":\"-484392616\",\"method\":\"account.getAuthorizations\",\"params\":[],\"type\":\"account.Authorizations\"},{\"id\":\"-545786948\",\"method\":\"account.resetAuthorization\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"Bool\"},{\"id\":\"1418342645\",\"method\":\"account.getPassword\",\"params\":[],\"type\":\"account.Password\"},{\"id\":\"-1663767815\",\"method\":\"account.getPasswordSettings\",\"params\":[{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"}],\"type\":\"account.PasswordSettings\"},{\"id\":\"-1516564433\",\"method\":\"account.updatePasswordSettings\",\"params\":[{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"},{\"name\":\"new_settings\",\"type\":\"account.PasswordInputSettings\"}],\"type\":\"Bool\"},{\"id\":\"-779399914\",\"method\":\"auth.checkPassword\",\"params\":[{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"}],\"type\":\"auth.Authorization\"},{\"id\":\"-661144474\",\"method\":\"auth.requestPasswordRecovery\",\"params\":[],\"type\":\"auth.PasswordRecovery\"},{\"id\":\"1319464594\",\"method\":\"auth.recoverPassword\",\"params\":[{\"name\":\"code\",\"type\":\"string\"}],\"type\":\"auth.Authorization\"},{\"id\":\"-1080796745\",\"method\":\"invokeWithoutUpdates\",\"params\":[{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":\"234312524\",\"method\":\"messages.exportChatInvite\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"ExportedChatInvite\"},{\"id\":\"1051570619\",\"method\":\"messages.checkChatInvite\",\"params\":[{\"name\":\"hash\",\"type\":\"string\"}],\"type\":\"ChatInvite\"},{\"id\":\"1817183516\",\"method\":\"messages.importChatInvite\",\"params\":[{\"name\":\"hash\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":\"639215886\",\"method\":\"messages.getStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"messages.StickerSet\"},{\"id\":\"-946871200\",\"method\":\"messages.installStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"archived\",\"type\":\"Bool\"}],\"type\":\"messages.StickerSetInstallResult\"},{\"id\":\"-110209570\",\"method\":\"messages.uninstallStickerSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"Bool\"},{\"id\":\"-421563528\",\"method\":\"messages.startBot\",\"params\":[{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"start_param\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":\"-1877938321\",\"method\":\"help.getAppChangelog\",\"params\":[{\"name\":\"prev_app_version\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":\"-993483427\",\"method\":\"messages.getMessagesViews\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"},{\"name\":\"increment\",\"type\":\"Bool\"}],\"type\":\"Vector<int>\"},{\"id\":\"-871347913\",\"method\":\"channels.readHistory\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":\"-2067661490\",\"method\":\"channels.deleteMessages\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"messages.AffectedMessages\"},{\"id\":\"-787622117\",\"method\":\"channels.deleteUserHistory\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":\"-32999408\",\"method\":\"channels.reportSpam\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Bool\"},{\"id\":\"-1383294429\",\"method\":\"channels.getMessages\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"id\",\"type\":\"Vector<InputMessage>\"}],\"type\":\"messages.Messages\"},{\"id\":\"306054633\",\"method\":\"channels.getParticipants\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"filter\",\"type\":\"ChannelParticipantsFilter\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"channels.ChannelParticipants\"},{\"id\":\"1416484774\",\"method\":\"channels.getParticipant\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"channels.ChannelParticipant\"},{\"id\":\"176122811\",\"method\":\"channels.getChannels\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<InputChannel>\"}],\"type\":\"messages.Chats\"},{\"id\":\"141781513\",\"method\":\"channels.getFullChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"messages.ChatFull\"},{\"id\":\"1029681423\",\"method\":\"channels.createChannel\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"broadcast\",\"type\":\"flags.0?true\"},{\"name\":\"megagroup\",\"type\":\"flags.1?true\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"about\",\"type\":\"string\"},{\"name\":\"geo_point\",\"type\":\"flags.2?InputGeoPoint\"},{\"name\":\"address\",\"type\":\"flags.2?string\"}],\"type\":\"Updates\"},{\"id\":\"-751007486\",\"method\":\"channels.editAdmin\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"admin_rights\",\"type\":\"ChatAdminRights\"},{\"name\":\"rank\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":\"1450044624\",\"method\":\"channels.editTitle\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"title\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":\"-248621111\",\"method\":\"channels.editPhoto\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"photo\",\"type\":\"InputChatPhoto\"}],\"type\":\"Updates\"},{\"id\":\"283557164\",\"method\":\"channels.checkUsername\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":\"890549214\",\"method\":\"channels.updateUsername\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"username\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":\"615851205\",\"method\":\"channels.joinChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Updates\"},{\"id\":\"-130635115\",\"method\":\"channels.leaveChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Updates\"},{\"id\":\"429865580\",\"method\":\"channels.inviteToChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"users\",\"type\":\"Vector<InputUser>\"}],\"type\":\"Updates\"},{\"id\":\"-1072619549\",\"method\":\"channels.deleteChannel\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"Updates\"},{\"id\":\"51854712\",\"method\":\"updates.getChannelDifference\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"force\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"filter\",\"type\":\"ChannelMessagesFilter\"},{\"name\":\"pts\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"updates.ChannelDifference\"},{\"id\":\"-1444503762\",\"method\":\"messages.editChatAdmin\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"is_admin\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":\"363051235\",\"method\":\"messages.migrateChat\",\"params\":[{\"name\":\"chat_id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":\"-1083038300\",\"method\":\"messages.searchGlobal\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"folder_id\",\"type\":\"flags.0?int\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"offset_rate\",\"type\":\"int\"},{\"name\":\"offset_peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":\"2016638777\",\"method\":\"messages.reorderStickerSets\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"order\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":\"864953444\",\"method\":\"messages.getDocumentByHash\",\"params\":[{\"name\":\"sha256\",\"type\":\"bytes\"},{\"name\":\"size\",\"type\":\"int\"},{\"name\":\"mime_type\",\"type\":\"string\"}],\"type\":\"Document\"},{\"id\":\"-1080395925\",\"method\":\"messages.searchGifs\",\"params\":[{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"offset\",\"type\":\"int\"}],\"type\":\"messages.FoundGifs\"},{\"id\":\"-2084618926\",\"method\":\"messages.getSavedGifs\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.SavedGifs\"},{\"id\":\"846868683\",\"method\":\"messages.saveGif\",\"params\":[{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"unsave\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":\"1364105629\",\"method\":\"messages.getInlineBotResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"bot\",\"type\":\"InputUser\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"geo_point\",\"type\":\"flags.0?InputGeoPoint\"},{\"name\":\"query\",\"type\":\"string\"},{\"name\":\"offset\",\"type\":\"string\"}],\"type\":\"messages.BotResults\"},{\"id\":\"-346119674\",\"method\":\"messages.setInlineBotResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"gallery\",\"type\":\"flags.0?true\"},{\"name\":\"private\",\"type\":\"flags.1?true\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"results\",\"type\":\"Vector<InputBotInlineResult>\"},{\"name\":\"cache_time\",\"type\":\"int\"},{\"name\":\"next_offset\",\"type\":\"flags.2?string\"},{\"name\":\"switch_pm\",\"type\":\"flags.3?InlineBotSwitchPM\"}],\"type\":\"Bool\"},{\"id\":\"570955184\",\"method\":\"messages.sendInlineBotResult\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"clear_draft\",\"type\":\"flags.7?true\"},{\"name\":\"hide_via\",\"type\":\"flags.11?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"random_id\",\"type\":\"long\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"}],\"type\":\"Updates\"},{\"id\":\"-826838685\",\"method\":\"channels.exportMessageLink\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"grouped\",\"type\":\"Bool\"}],\"type\":\"ExportedMessageLink\"},{\"id\":\"527021574\",\"method\":\"channels.toggleSignatures\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":\"1056025023\",\"method\":\"auth.resendCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"}],\"type\":\"auth.SentCode\"},{\"id\":\"520357240\",\"method\":\"auth.cancelCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":\"-39416522\",\"method\":\"messages.getMessageEditData\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"messages.MessageEditData\"},{\"id\":\"1224152952\",\"method\":\"messages.editMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"message\",\"type\":\"flags.11?string\"},{\"name\":\"media\",\"type\":\"flags.14?InputMedia\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"},{\"name\":\"schedule_date\",\"type\":\"flags.15?int\"}],\"type\":\"Updates\"},{\"id\":\"-2091549254\",\"method\":\"messages.editInlineBotMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"InputBotInlineMessageID\"},{\"name\":\"message\",\"type\":\"flags.11?string\"},{\"name\":\"media\",\"type\":\"flags.14?InputMedia\"},{\"name\":\"reply_markup\",\"type\":\"flags.2?ReplyMarkup\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"}],\"type\":\"Bool\"},{\"id\":\"-2130010132\",\"method\":\"messages.getBotCallbackAnswer\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"game\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"data\",\"type\":\"flags.0?bytes\"}],\"type\":\"messages.BotCallbackAnswer\"},{\"id\":\"-712043766\",\"method\":\"messages.setBotCallbackAnswer\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"alert\",\"type\":\"flags.1?true\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"flags.0?string\"},{\"name\":\"url\",\"type\":\"flags.2?string\"},{\"name\":\"cache_time\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":\"-728224331\",\"method\":\"contacts.getTopPeers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"correspondents\",\"type\":\"flags.0?true\"},{\"name\":\"bots_pm\",\"type\":\"flags.1?true\"},{\"name\":\"bots_inline\",\"type\":\"flags.2?true\"},{\"name\":\"phone_calls\",\"type\":\"flags.3?true\"},{\"name\":\"forward_users\",\"type\":\"flags.4?true\"},{\"name\":\"forward_chats\",\"type\":\"flags.5?true\"},{\"name\":\"groups\",\"type\":\"flags.10?true\"},{\"name\":\"channels\",\"type\":\"flags.15?true\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"contacts.TopPeers\"},{\"id\":\"451113900\",\"method\":\"contacts.resetTopPeerRating\",\"params\":[{\"name\":\"category\",\"type\":\"TopPeerCategory\"},{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":\"-462373635\",\"method\":\"messages.getPeerDialogs\",\"params\":[{\"name\":\"peers\",\"type\":\"Vector<InputDialogPeer>\"}],\"type\":\"messages.PeerDialogs\"},{\"id\":\"-1137057461\",\"method\":\"messages.saveDraft\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"no_webpage\",\"type\":\"flags.1?true\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"flags.3?Vector<MessageEntity>\"}],\"type\":\"Bool\"},{\"id\":\"1782549861\",\"method\":\"messages.getAllDrafts\",\"params\":[],\"type\":\"Updates\"},{\"id\":\"766298703\",\"method\":\"messages.getFeaturedStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.FeaturedStickers\"},{\"id\":\"1527873830\",\"method\":\"messages.readFeaturedStickers\",\"params\":[{\"name\":\"id\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":\"1587647177\",\"method\":\"messages.getRecentStickers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"attached\",\"type\":\"flags.0?true\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.RecentStickers\"},{\"id\":\"958863608\",\"method\":\"messages.saveRecentSticker\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"attached\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"unsave\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":\"-1986437075\",\"method\":\"messages.clearRecentStickers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"attached\",\"type\":\"flags.0?true\"}],\"type\":\"Bool\"},{\"id\":\"1475442322\",\"method\":\"messages.getArchivedStickers\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"offset_id\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.ArchivedStickers\"},{\"id\":\"457157256\",\"method\":\"account.sendConfirmPhoneCode\",\"params\":[{\"name\":\"hash\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"CodeSettings\"}],\"type\":\"auth.SentCode\"},{\"id\":\"1596029123\",\"method\":\"account.confirmPhone\",\"params\":[{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"phone_code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":\"-122669393\",\"method\":\"channels.getAdminedPublicChannels\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"by_location\",\"type\":\"flags.0?true\"},{\"name\":\"check_limit\",\"type\":\"flags.1?true\"}],\"type\":\"messages.Chats\"},{\"id\":\"1706608543\",\"method\":\"messages.getMaskStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.AllStickers\"},{\"id\":\"-866424884\",\"method\":\"messages.getAttachedStickers\",\"params\":[{\"name\":\"media\",\"type\":\"InputStickeredMedia\"}],\"type\":\"Vector<StickerSetCovered>\"},{\"id\":\"-1907842680\",\"method\":\"auth.dropTempAuthKeys\",\"params\":[{\"name\":\"except_auth_keys\",\"type\":\"Vector<long>\"}],\"type\":\"Bool\"},{\"id\":\"-1896289088\",\"method\":\"messages.setGameScore\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"edit_message\",\"type\":\"flags.0?true\"},{\"name\":\"force\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"score\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":\"363700068\",\"method\":\"messages.setInlineGameScore\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"edit_message\",\"type\":\"flags.0?true\"},{\"name\":\"force\",\"type\":\"flags.1?true\"},{\"name\":\"id\",\"type\":\"InputBotInlineMessageID\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"score\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":\"-400399203\",\"method\":\"messages.getGameHighScores\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"messages.HighScores\"},{\"id\":\"258170395\",\"method\":\"messages.getInlineGameHighScores\",\"params\":[{\"name\":\"id\",\"type\":\"InputBotInlineMessageID\"},{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"messages.HighScores\"},{\"id\":\"218777796\",\"method\":\"messages.getCommonChats\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.Chats\"},{\"id\":\"-341307408\",\"method\":\"messages.getAllChats\",\"params\":[{\"name\":\"except_ids\",\"type\":\"Vector<int>\"}],\"type\":\"messages.Chats\"},{\"id\":\"-333262899\",\"method\":\"help.setBotUpdatesStatus\",\"params\":[{\"name\":\"pending_updates_count\",\"type\":\"int\"},{\"name\":\"message\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":\"852135825\",\"method\":\"messages.getWebPage\",\"params\":[{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"WebPage\"},{\"id\":\"-1489903017\",\"method\":\"messages.toggleDialogPin\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"pinned\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputDialogPeer\"}],\"type\":\"Bool\"},{\"id\":\"991616823\",\"method\":\"messages.reorderPinnedDialogs\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"force\",\"type\":\"flags.0?true\"},{\"name\":\"folder_id\",\"type\":\"int\"},{\"name\":\"order\",\"type\":\"Vector<InputDialogPeer>\"}],\"type\":\"Bool\"},{\"id\":\"-692498958\",\"method\":\"messages.getPinnedDialogs\",\"params\":[{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"messages.PeerDialogs\"},{\"id\":\"-1440257555\",\"method\":\"bots.sendCustomRequest\",\"params\":[{\"name\":\"custom_method\",\"type\":\"string\"},{\"name\":\"params\",\"type\":\"DataJSON\"}],\"type\":\"DataJSON\"},{\"id\":\"-434028723\",\"method\":\"bots.answerWebhookJSONQuery\",\"params\":[{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"data\",\"type\":\"DataJSON\"}],\"type\":\"Bool\"},{\"id\":\"619086221\",\"method\":\"upload.getWebFile\",\"params\":[{\"name\":\"location\",\"type\":\"InputWebFileLocation\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"upload.WebFile\"},{\"id\":\"-1712285883\",\"method\":\"payments.getPaymentForm\",\"params\":[{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"payments.PaymentForm\"},{\"id\":\"-1601001088\",\"method\":\"payments.getPaymentReceipt\",\"params\":[{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"payments.PaymentReceipt\"},{\"id\":\"1997180532\",\"method\":\"payments.validateRequestedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"save\",\"type\":\"flags.0?true\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"info\",\"type\":\"PaymentRequestedInfo\"}],\"type\":\"payments.ValidatedRequestedInfo\"},{\"id\":\"730364339\",\"method\":\"payments.sendPaymentForm\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"requested_info_id\",\"type\":\"flags.0?string\"},{\"name\":\"shipping_option_id\",\"type\":\"flags.1?string\"},{\"name\":\"credentials\",\"type\":\"InputPaymentCredentials\"}],\"type\":\"payments.PaymentResult\"},{\"id\":\"1151208273\",\"method\":\"account.getTmpPassword\",\"params\":[{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"},{\"name\":\"period\",\"type\":\"int\"}],\"type\":\"account.TmpPassword\"},{\"id\":\"578650699\",\"method\":\"payments.getSavedInfo\",\"params\":[],\"type\":\"payments.SavedInfo\"},{\"id\":\"-667062079\",\"method\":\"payments.clearSavedInfo\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"credentials\",\"type\":\"flags.0?true\"},{\"name\":\"info\",\"type\":\"flags.1?true\"}],\"type\":\"Bool\"},{\"id\":\"-436833542\",\"method\":\"messages.setBotShippingResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"error\",\"type\":\"flags.0?string\"},{\"name\":\"shipping_options\",\"type\":\"flags.1?Vector<ShippingOption>\"}],\"type\":\"Bool\"},{\"id\":\"163765653\",\"method\":\"messages.setBotPrecheckoutResults\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"success\",\"type\":\"flags.1?true\"},{\"name\":\"query_id\",\"type\":\"long\"},{\"name\":\"error\",\"type\":\"flags.0?string\"}],\"type\":\"Bool\"},{\"id\":\"-251435136\",\"method\":\"stickers.createStickerSet\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"masks\",\"type\":\"flags.0?true\"},{\"name\":\"animated\",\"type\":\"flags.1?true\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"short_name\",\"type\":\"string\"},{\"name\":\"thumb\",\"type\":\"flags.2?InputDocument\"},{\"name\":\"stickers\",\"type\":\"Vector<InputStickerSetItem>\"}],\"type\":\"messages.StickerSet\"},{\"id\":\"-143257775\",\"method\":\"stickers.removeStickerFromSet\",\"params\":[{\"name\":\"sticker\",\"type\":\"InputDocument\"}],\"type\":\"messages.StickerSet\"},{\"id\":\"-4795190\",\"method\":\"stickers.changeStickerPosition\",\"params\":[{\"name\":\"sticker\",\"type\":\"InputDocument\"},{\"name\":\"position\",\"type\":\"int\"}],\"type\":\"messages.StickerSet\"},{\"id\":\"-2041315650\",\"method\":\"stickers.addStickerToSet\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"sticker\",\"type\":\"InputStickerSetItem\"}],\"type\":\"messages.StickerSet\"},{\"id\":\"1369162417\",\"method\":\"messages.uploadMedia\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"media\",\"type\":\"InputMedia\"}],\"type\":\"MessageMedia\"},{\"id\":\"1430593449\",\"method\":\"phone.getCallConfig\",\"params\":[],\"type\":\"DataJSON\"},{\"id\":\"1124046573\",\"method\":\"phone.requestCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.0?true\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"random_id\",\"type\":\"int\"},{\"name\":\"g_a_hash\",\"type\":\"bytes\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"phone.PhoneCall\"},{\"id\":\"1003664544\",\"method\":\"phone.acceptCall\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"g_b\",\"type\":\"bytes\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"phone.PhoneCall\"},{\"id\":\"788404002\",\"method\":\"phone.confirmCall\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"g_a\",\"type\":\"bytes\"},{\"name\":\"key_fingerprint\",\"type\":\"long\"},{\"name\":\"protocol\",\"type\":\"PhoneCallProtocol\"}],\"type\":\"phone.PhoneCall\"},{\"id\":\"399855457\",\"method\":\"phone.receivedCall\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"}],\"type\":\"Bool\"},{\"id\":\"-1295269440\",\"method\":\"phone.discardCall\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"video\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"duration\",\"type\":\"int\"},{\"name\":\"reason\",\"type\":\"PhoneCallDiscardReason\"},{\"name\":\"connection_id\",\"type\":\"long\"}],\"type\":\"Updates\"},{\"id\":\"1508562471\",\"method\":\"phone.setCallRating\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"user_initiative\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"rating\",\"type\":\"int\"},{\"name\":\"comment\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":\"662363518\",\"method\":\"phone.saveCallDebug\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPhoneCall\"},{\"name\":\"debug\",\"type\":\"DataJSON\"}],\"type\":\"Bool\"},{\"id\":\"536919235\",\"method\":\"upload.getCdnFile\",\"params\":[{\"name\":\"file_token\",\"type\":\"bytes\"},{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"upload.CdnFile\"},{\"id\":\"-1691921240\",\"method\":\"upload.reuploadCdnFile\",\"params\":[{\"name\":\"file_token\",\"type\":\"bytes\"},{\"name\":\"request_token\",\"type\":\"bytes\"}],\"type\":\"Vector<FileHash>\"},{\"id\":\"1375900482\",\"method\":\"help.getCdnConfig\",\"params\":[],\"type\":\"CdnConfig\"},{\"id\":\"-219008246\",\"method\":\"langpack.getLangPack\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"LangPackDifference\"},{\"id\":\"-269862909\",\"method\":\"langpack.getStrings\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"keys\",\"type\":\"Vector<string>\"}],\"type\":\"Vector<LangPackString>\"},{\"id\":\"-845657435\",\"method\":\"langpack.getDifference\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"from_version\",\"type\":\"int\"}],\"type\":\"LangPackDifference\"},{\"id\":\"1120311183\",\"method\":\"langpack.getLanguages\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"}],\"type\":\"Vector<LangPackLanguage>\"},{\"id\":\"1920559378\",\"method\":\"channels.editBanned\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"banned_rights\",\"type\":\"ChatBannedRights\"}],\"type\":\"Updates\"},{\"id\":\"870184064\",\"method\":\"channels.getAdminLog\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"events_filter\",\"type\":\"flags.0?ChannelAdminLogEventsFilter\"},{\"name\":\"admins\",\"type\":\"flags.1?Vector<InputUser>\"},{\"name\":\"max_id\",\"type\":\"long\"},{\"name\":\"min_id\",\"type\":\"long\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"channels.AdminLogResults\"},{\"id\":\"1302676017\",\"method\":\"upload.getCdnFileHashes\",\"params\":[{\"name\":\"file_token\",\"type\":\"bytes\"},{\"name\":\"offset\",\"type\":\"int\"}],\"type\":\"Vector<FileHash>\"},{\"id\":\"-914493408\",\"method\":\"messages.sendScreenshotNotification\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to_msg_id\",\"type\":\"int\"},{\"name\":\"random_id\",\"type\":\"long\"}],\"type\":\"Updates\"},{\"id\":\"-359881479\",\"method\":\"channels.setStickers\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"}],\"type\":\"Bool\"},{\"id\":\"567151374\",\"method\":\"messages.getFavedStickers\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.FavedStickers\"},{\"id\":\"-1174420133\",\"method\":\"messages.faveSticker\",\"params\":[{\"name\":\"id\",\"type\":\"InputDocument\"},{\"name\":\"unfave\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":\"-357180360\",\"method\":\"channels.readMessageContents\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Bool\"},{\"id\":\"-2020263951\",\"method\":\"contacts.resetSaved\",\"params\":[],\"type\":\"Bool\"},{\"id\":\"1180140658\",\"method\":\"messages.getUnreadMentions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"offset_id\",\"type\":\"int\"},{\"name\":\"add_offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"max_id\",\"type\":\"int\"},{\"name\":\"min_id\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":\"-1355375294\",\"method\":\"channels.deleteHistory\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"max_id\",\"type\":\"int\"}],\"type\":\"Bool\"},{\"id\":\"1036054804\",\"method\":\"help.getRecentMeUrls\",\"params\":[{\"name\":\"referer\",\"type\":\"string\"}],\"type\":\"help.RecentMeUrls\"},{\"id\":\"-356796084\",\"method\":\"channels.togglePreHistoryHidden\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Updates\"},{\"id\":\"251759059\",\"method\":\"messages.readMentions\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"messages.AffectedHistory\"},{\"id\":\"-1144759543\",\"method\":\"messages.getRecentLocations\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":\"-872345397\",\"method\":\"messages.sendMultiMedia\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.5?true\"},{\"name\":\"background\",\"type\":\"flags.6?true\"},{\"name\":\"clear_draft\",\"type\":\"flags.7?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"reply_to_msg_id\",\"type\":\"flags.0?int\"},{\"name\":\"multi_media\",\"type\":\"Vector<InputSingleMedia>\"},{\"name\":\"schedule_date\",\"type\":\"flags.10?int\"}],\"type\":\"Updates\"},{\"id\":\"1347929239\",\"method\":\"messages.uploadEncryptedFile\",\"params\":[{\"name\":\"peer\",\"type\":\"InputEncryptedChat\"},{\"name\":\"file\",\"type\":\"InputEncryptedFile\"}],\"type\":\"EncryptedFile\"},{\"id\":\"405695855\",\"method\":\"account.getWebAuthorizations\",\"params\":[],\"type\":\"account.WebAuthorizations\"},{\"id\":\"755087855\",\"method\":\"account.resetWebAuthorization\",\"params\":[{\"name\":\"hash\",\"type\":\"long\"}],\"type\":\"Bool\"},{\"id\":\"1747789204\",\"method\":\"account.resetWebAuthorizations\",\"params\":[],\"type\":\"Bool\"},{\"id\":\"-1028140917\",\"method\":\"messages.searchStickerSets\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"exclude_featured\",\"type\":\"flags.0?true\"},{\"name\":\"q\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.FoundStickerSets\"},{\"id\":\"-956147407\",\"method\":\"upload.getFileHashes\",\"params\":[{\"name\":\"location\",\"type\":\"InputFileLocation\"},{\"name\":\"offset\",\"type\":\"int\"}],\"type\":\"Vector<FileHash>\"},{\"id\":\"1031231713\",\"method\":\"help.getProxyData\",\"params\":[],\"type\":\"help.ProxyData\"},{\"id\":\"749019089\",\"method\":\"help.getTermsOfServiceUpdate\",\"params\":[],\"type\":\"help.TermsOfServiceUpdate\"},{\"id\":\"-294455398\",\"method\":\"help.acceptTermsOfService\",\"params\":[{\"name\":\"id\",\"type\":\"DataJSON\"}],\"type\":\"Bool\"},{\"id\":\"-1299661699\",\"method\":\"account.getAllSecureValues\",\"params\":[],\"type\":\"Vector<SecureValue>\"},{\"id\":\"1936088002\",\"method\":\"account.getSecureValue\",\"params\":[{\"name\":\"types\",\"type\":\"Vector<SecureValueType>\"}],\"type\":\"Vector<SecureValue>\"},{\"id\":\"-1986010339\",\"method\":\"account.saveSecureValue\",\"params\":[{\"name\":\"value\",\"type\":\"InputSecureValue\"},{\"name\":\"secure_secret_id\",\"type\":\"long\"}],\"type\":\"SecureValue\"},{\"id\":\"-1199522741\",\"method\":\"account.deleteSecureValue\",\"params\":[{\"name\":\"types\",\"type\":\"Vector<SecureValueType>\"}],\"type\":\"Bool\"},{\"id\":\"-1865902923\",\"method\":\"users.setSecureValueErrors\",\"params\":[{\"name\":\"id\",\"type\":\"InputUser\"},{\"name\":\"errors\",\"type\":\"Vector<SecureValueError>\"}],\"type\":\"Bool\"},{\"id\":\"-1200903967\",\"method\":\"account.getAuthorizationForm\",\"params\":[{\"name\":\"bot_id\",\"type\":\"int\"},{\"name\":\"scope\",\"type\":\"string\"},{\"name\":\"public_key\",\"type\":\"string\"}],\"type\":\"account.AuthorizationForm\"},{\"id\":\"-419267436\",\"method\":\"account.acceptAuthorization\",\"params\":[{\"name\":\"bot_id\",\"type\":\"int\"},{\"name\":\"scope\",\"type\":\"string\"},{\"name\":\"public_key\",\"type\":\"string\"},{\"name\":\"value_hashes\",\"type\":\"Vector<SecureValueHash>\"},{\"name\":\"credentials\",\"type\":\"SecureCredentialsEncrypted\"}],\"type\":\"Bool\"},{\"id\":\"-1516022023\",\"method\":\"account.sendVerifyPhoneCode\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"CodeSettings\"}],\"type\":\"auth.SentCode\"},{\"id\":\"1305716726\",\"method\":\"account.verifyPhone\",\"params\":[{\"name\":\"phone_number\",\"type\":\"string\"},{\"name\":\"phone_code_hash\",\"type\":\"string\"},{\"name\":\"phone_code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":\"1880182943\",\"method\":\"account.sendVerifyEmailCode\",\"params\":[{\"name\":\"email\",\"type\":\"string\"}],\"type\":\"account.SentEmailCode\"},{\"id\":\"-323339813\",\"method\":\"account.verifyEmail\",\"params\":[{\"name\":\"email\",\"type\":\"string\"},{\"name\":\"code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":\"1072547679\",\"method\":\"help.getDeepLinkInfo\",\"params\":[{\"name\":\"path\",\"type\":\"string\"}],\"type\":\"help.DeepLinkInfo\"},{\"id\":\"-2098076769\",\"method\":\"contacts.getSaved\",\"params\":[],\"type\":\"Vector<SavedContact>\"},{\"id\":\"-2092831552\",\"method\":\"channels.getLeftChannels\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"}],\"type\":\"messages.Chats\"},{\"id\":\"-262453244\",\"method\":\"account.initTakeoutSession\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"contacts\",\"type\":\"flags.0?true\"},{\"name\":\"message_users\",\"type\":\"flags.1?true\"},{\"name\":\"message_chats\",\"type\":\"flags.2?true\"},{\"name\":\"message_megagroups\",\"type\":\"flags.3?true\"},{\"name\":\"message_channels\",\"type\":\"flags.4?true\"},{\"name\":\"files\",\"type\":\"flags.5?true\"},{\"name\":\"file_max_size\",\"type\":\"flags.5?int\"}],\"type\":\"account.Takeout\"},{\"id\":\"489050862\",\"method\":\"account.finishTakeoutSession\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"success\",\"type\":\"flags.0?true\"}],\"type\":\"Bool\"},{\"id\":\"486505992\",\"method\":\"messages.getSplitRanges\",\"params\":[],\"type\":\"Vector<MessageRange>\"},{\"id\":\"911373810\",\"method\":\"invokeWithMessagesRange\",\"params\":[{\"name\":\"range\",\"type\":\"MessageRange\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":\"-1398145746\",\"method\":\"invokeWithTakeout\",\"params\":[{\"name\":\"takeout_id\",\"type\":\"long\"},{\"name\":\"query\",\"type\":\"!X\"}],\"type\":\"X\"},{\"id\":\"-1031349873\",\"method\":\"messages.markDialogUnread\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"unread\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputDialogPeer\"}],\"type\":\"Bool\"},{\"id\":\"585256482\",\"method\":\"messages.getDialogUnreadMarks\",\"params\":[],\"type\":\"Vector<DialogPeer>\"},{\"id\":\"-2062238246\",\"method\":\"contacts.toggleTopPeers\",\"params\":[{\"name\":\"enabled\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":\"2119757468\",\"method\":\"messages.clearAllDrafts\",\"params\":[],\"type\":\"Bool\"},{\"id\":\"-1735311088\",\"method\":\"help.getAppConfig\",\"params\":[],\"type\":\"JSONValue\"},{\"id\":\"1862465352\",\"method\":\"help.saveAppLog\",\"params\":[{\"name\":\"events\",\"type\":\"Vector<InputAppEvent>\"}],\"type\":\"Bool\"},{\"id\":\"-966677240\",\"method\":\"help.getPassportConfig\",\"params\":[{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"help.PassportConfig\"},{\"id\":\"1784243458\",\"method\":\"langpack.getLanguage\",\"params\":[{\"name\":\"lang_pack\",\"type\":\"string\"},{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"LangPackLanguage\"},{\"id\":\"-760547348\",\"method\":\"messages.updatePinnedMessage\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"silent\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":\"-1881204448\",\"method\":\"account.confirmPasswordEmail\",\"params\":[{\"name\":\"code\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":\"2055154197\",\"method\":\"account.resendPasswordEmail\",\"params\":[],\"type\":\"Bool\"},{\"id\":\"-1043606090\",\"method\":\"account.cancelPasswordEmail\",\"params\":[],\"type\":\"Bool\"},{\"id\":\"-748624084\",\"method\":\"help.getSupportName\",\"params\":[],\"type\":\"help.SupportName\"},{\"id\":\"59377875\",\"method\":\"help.getUserInfo\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"}],\"type\":\"help.UserInfo\"},{\"id\":\"1723407216\",\"method\":\"help.editUserInfo\",\"params\":[{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"entities\",\"type\":\"Vector<MessageEntity>\"}],\"type\":\"help.UserInfo\"},{\"id\":\"-1626880216\",\"method\":\"account.getContactSignUpNotification\",\"params\":[],\"type\":\"Bool\"},{\"id\":\"-806076575\",\"method\":\"account.setContactSignUpNotification\",\"params\":[{\"name\":\"silent\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":\"1398240377\",\"method\":\"account.getNotifyExceptions\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"compare_sound\",\"type\":\"flags.1?true\"},{\"name\":\"peer\",\"type\":\"flags.0?InputNotifyPeer\"}],\"type\":\"Updates\"},{\"id\":\"283795844\",\"method\":\"messages.sendVote\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"options\",\"type\":\"Vector<bytes>\"}],\"type\":\"Updates\"},{\"id\":\"1941660731\",\"method\":\"messages.getPollResults\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":\"1848369232\",\"method\":\"messages.getOnlines\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"ChatOnlines\"},{\"id\":\"-2127811866\",\"method\":\"messages.getStatsURL\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"params\",\"type\":\"string\"}],\"type\":\"StatsURL\"},{\"id\":\"-554301545\",\"method\":\"messages.editChatAbout\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"about\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":\"-1517917375\",\"method\":\"messages.editChatDefaultBannedRights\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"banned_rights\",\"type\":\"ChatBannedRights\"}],\"type\":\"Updates\"},{\"id\":\"-57811990\",\"method\":\"account.getWallPaper\",\"params\":[{\"name\":\"wallpaper\",\"type\":\"InputWallPaper\"}],\"type\":\"WallPaper\"},{\"id\":\"-578472351\",\"method\":\"account.uploadWallPaper\",\"params\":[{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"mime_type\",\"type\":\"string\"},{\"name\":\"settings\",\"type\":\"WallPaperSettings\"}],\"type\":\"WallPaper\"},{\"id\":\"1817860919\",\"method\":\"account.saveWallPaper\",\"params\":[{\"name\":\"wallpaper\",\"type\":\"InputWallPaper\"},{\"name\":\"unsave\",\"type\":\"Bool\"},{\"name\":\"settings\",\"type\":\"WallPaperSettings\"}],\"type\":\"Bool\"},{\"id\":\"-18000023\",\"method\":\"account.installWallPaper\",\"params\":[{\"name\":\"wallpaper\",\"type\":\"InputWallPaper\"},{\"name\":\"settings\",\"type\":\"WallPaperSettings\"}],\"type\":\"Bool\"},{\"id\":\"-1153722364\",\"method\":\"account.resetWallPapers\",\"params\":[],\"type\":\"Bool\"},{\"id\":\"1457130303\",\"method\":\"account.getAutoDownloadSettings\",\"params\":[],\"type\":\"account.AutoDownloadSettings\"},{\"id\":\"1995661875\",\"method\":\"account.saveAutoDownloadSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"low\",\"type\":\"flags.0?true\"},{\"name\":\"high\",\"type\":\"flags.1?true\"},{\"name\":\"settings\",\"type\":\"AutoDownloadSettings\"}],\"type\":\"Bool\"},{\"id\":\"899735650\",\"method\":\"messages.getEmojiKeywords\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"EmojiKeywordsDifference\"},{\"id\":\"352892591\",\"method\":\"messages.getEmojiKeywordsDifference\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"},{\"name\":\"from_version\",\"type\":\"int\"}],\"type\":\"EmojiKeywordsDifference\"},{\"id\":\"1318675378\",\"method\":\"messages.getEmojiKeywordsLanguages\",\"params\":[{\"name\":\"lang_codes\",\"type\":\"Vector<string>\"}],\"type\":\"Vector<EmojiLanguage>\"},{\"id\":\"-709817306\",\"method\":\"messages.getEmojiURL\",\"params\":[{\"name\":\"lang_code\",\"type\":\"string\"}],\"type\":\"EmojiURL\"},{\"id\":\"1749536939\",\"method\":\"folders.editPeerFolders\",\"params\":[{\"name\":\"folder_peers\",\"type\":\"Vector<InputFolderPeer>\"}],\"type\":\"Updates\"},{\"id\":\"472471681\",\"method\":\"folders.deleteFolder\",\"params\":[{\"name\":\"folder_id\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":\"1932455680\",\"method\":\"messages.getSearchCounters\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"filters\",\"type\":\"Vector<MessagesFilter>\"}],\"type\":\"Vector<messages.SearchCounter>\"},{\"id\":\"-170208392\",\"method\":\"channels.getGroupsForDiscussion\",\"params\":[],\"type\":\"messages.Chats\"},{\"id\":\"1079520178\",\"method\":\"channels.setDiscussionGroup\",\"params\":[{\"name\":\"broadcast\",\"type\":\"InputChannel\"},{\"name\":\"group\",\"type\":\"InputChannel\"}],\"type\":\"Bool\"},{\"id\":\"-482388461\",\"method\":\"messages.requestUrlAuth\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"button_id\",\"type\":\"int\"}],\"type\":\"UrlAuthResult\"},{\"id\":\"-148247912\",\"method\":\"messages.acceptUrlAuth\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"write_allowed\",\"type\":\"flags.0?true\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"msg_id\",\"type\":\"int\"},{\"name\":\"button_id\",\"type\":\"int\"}],\"type\":\"UrlAuthResult\"},{\"id\":\"1336717624\",\"method\":\"messages.hidePeerSettingsBar\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"}],\"type\":\"Bool\"},{\"id\":\"-386636848\",\"method\":\"contacts.addContact\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"add_phone_privacy_exception\",\"type\":\"flags.0?true\"},{\"name\":\"id\",\"type\":\"InputUser\"},{\"name\":\"first_name\",\"type\":\"string\"},{\"name\":\"last_name\",\"type\":\"string\"},{\"name\":\"phone\",\"type\":\"string\"}],\"type\":\"Updates\"},{\"id\":\"-130964977\",\"method\":\"contacts.acceptContact\",\"params\":[{\"name\":\"id\",\"type\":\"InputUser\"}],\"type\":\"Updates\"},{\"id\":\"-1892102881\",\"method\":\"channels.editCreator\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"user_id\",\"type\":\"InputUser\"},{\"name\":\"password\",\"type\":\"InputCheckPasswordSRP\"}],\"type\":\"Updates\"},{\"id\":\"-750207932\",\"method\":\"contacts.getLocated\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"background\",\"type\":\"flags.1?true\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"self_expires\",\"type\":\"flags.0?int\"}],\"type\":\"Updates\"},{\"id\":\"1491484525\",\"method\":\"channels.editLocation\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"geo_point\",\"type\":\"InputGeoPoint\"},{\"name\":\"address\",\"type\":\"string\"}],\"type\":\"Bool\"},{\"id\":\"-304832784\",\"method\":\"channels.toggleSlowMode\",\"params\":[{\"name\":\"channel\",\"type\":\"InputChannel\"},{\"name\":\"seconds\",\"type\":\"int\"}],\"type\":\"Updates\"},{\"id\":\"-490575781\",\"method\":\"messages.getScheduledHistory\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.Messages\"},{\"id\":\"-1111817116\",\"method\":\"messages.getScheduledMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"messages.Messages\"},{\"id\":\"-1120369398\",\"method\":\"messages.sendScheduledMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Updates\"},{\"id\":\"1504586518\",\"method\":\"messages.deleteScheduledMessages\",\"params\":[{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"Vector<int>\"}],\"type\":\"Updates\"},{\"id\":\"473805619\",\"method\":\"account.uploadTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"file\",\"type\":\"InputFile\"},{\"name\":\"thumb\",\"type\":\"flags.0?InputFile\"},{\"name\":\"file_name\",\"type\":\"string\"},{\"name\":\"mime_type\",\"type\":\"string\"}],\"type\":\"Document\"},{\"id\":\"-2077048289\",\"method\":\"account.createTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"slug\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"},{\"name\":\"document\",\"type\":\"flags.2?InputDocument\"},{\"name\":\"settings\",\"type\":\"flags.3?InputThemeSettings\"}],\"type\":\"Theme\"},{\"id\":\"1555261397\",\"method\":\"account.updateTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"format\",\"type\":\"string\"},{\"name\":\"theme\",\"type\":\"InputTheme\"},{\"name\":\"slug\",\"type\":\"flags.0?string\"},{\"name\":\"title\",\"type\":\"flags.1?string\"},{\"name\":\"document\",\"type\":\"flags.2?InputDocument\"},{\"name\":\"settings\",\"type\":\"flags.3?InputThemeSettings\"}],\"type\":\"Theme\"},{\"id\":\"-229175188\",\"method\":\"account.saveTheme\",\"params\":[{\"name\":\"theme\",\"type\":\"InputTheme\"},{\"name\":\"unsave\",\"type\":\"Bool\"}],\"type\":\"Bool\"},{\"id\":\"2061776695\",\"method\":\"account.installTheme\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"format\",\"type\":\"flags.1?string\"},{\"name\":\"theme\",\"type\":\"flags.1?InputTheme\"}],\"type\":\"Bool\"},{\"id\":\"-1919060949\",\"method\":\"account.getTheme\",\"params\":[{\"name\":\"format\",\"type\":\"string\"},{\"name\":\"theme\",\"type\":\"InputTheme\"},{\"name\":\"document_id\",\"type\":\"long\"}],\"type\":\"Theme\"},{\"id\":\"676939512\",\"method\":\"account.getThemes\",\"params\":[{\"name\":\"format\",\"type\":\"string\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"account.Themes\"},{\"id\":\"-1313598185\",\"method\":\"auth.exportLoginToken\",\"params\":[{\"name\":\"api_id\",\"type\":\"int\"},{\"name\":\"api_hash\",\"type\":\"string\"},{\"name\":\"except_ids\",\"type\":\"Vector<int>\"}],\"type\":\"auth.LoginToken\"},{\"id\":\"-1783866140\",\"method\":\"auth.importLoginToken\",\"params\":[{\"name\":\"token\",\"type\":\"bytes\"}],\"type\":\"auth.LoginToken\"},{\"id\":\"-392909491\",\"method\":\"auth.acceptLoginToken\",\"params\":[{\"name\":\"token\",\"type\":\"bytes\"}],\"type\":\"Authorization\"},{\"id\":\"-1250643605\",\"method\":\"account.setContentSettings\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"sensitive_enabled\",\"type\":\"flags.0?true\"}],\"type\":\"Bool\"},{\"id\":\"-1952756306\",\"method\":\"account.getContentSettings\",\"params\":[],\"type\":\"account.ContentSettings\"},{\"id\":\"300429806\",\"method\":\"channels.getInactiveChannels\",\"params\":[],\"type\":\"messages.InactiveChats\"},{\"id\":\"1705865692\",\"method\":\"account.getMultiWallPapers\",\"params\":[{\"name\":\"wallpapers\",\"type\":\"Vector<InputWallPaper>\"}],\"type\":\"Vector<WallPaper>\"},{\"id\":\"-1200736242\",\"method\":\"messages.getPollVotes\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"peer\",\"type\":\"InputPeer\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"option\",\"type\":\"flags.0?bytes\"},{\"name\":\"offset\",\"type\":\"flags.1?string\"},{\"name\":\"limit\",\"type\":\"int\"}],\"type\":\"messages.VotesList\"},{\"id\":\"-1257951254\",\"method\":\"messages.toggleStickerSets\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"uninstall\",\"type\":\"flags.0?true\"},{\"name\":\"archive\",\"type\":\"flags.1?true\"},{\"name\":\"unarchive\",\"type\":\"flags.2?true\"},{\"name\":\"stickersets\",\"type\":\"Vector<InputStickerSet>\"}],\"type\":\"Bool\"},{\"id\":\"779736953\",\"method\":\"payments.getBankCardData\",\"params\":[{\"name\":\"number\",\"type\":\"string\"}],\"type\":\"payments.BankCardData\"},{\"id\":\"-241247891\",\"method\":\"messages.getDialogFilters\",\"params\":[],\"type\":\"Vector<DialogFilter>\"},{\"id\":\"-1566780372\",\"method\":\"messages.getSuggestedDialogFilters\",\"params\":[],\"type\":\"Vector<DialogFilterSuggested>\"},{\"id\":\"450142282\",\"method\":\"messages.updateDialogFilter\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"filter\",\"type\":\"flags.0?DialogFilter\"}],\"type\":\"Bool\"},{\"id\":\"-983318044\",\"method\":\"messages.updateDialogFiltersOrder\",\"params\":[{\"name\":\"order\",\"type\":\"Vector<int>\"}],\"type\":\"Bool\"},{\"id\":\"-1421720550\",\"method\":\"stats.getBroadcastStats\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"dark\",\"type\":\"flags.0?true\"},{\"name\":\"channel\",\"type\":\"InputChannel\"}],\"type\":\"stats.BroadcastStats\"},{\"id\":\"1646092192\",\"method\":\"stats.loadAsyncGraph\",\"params\":[{\"name\":\"flags\",\"type\":\"#\"},{\"name\":\"token\",\"type\":\"string\"},{\"name\":\"x\",\"type\":\"flags.0?long\"}],\"type\":\"StatsGraph\"},{\"id\":\"-1707717072\",\"method\":\"stickers.setStickerSetThumb\",\"params\":[{\"name\":\"stickerset\",\"type\":\"InputStickerSet\"},{\"name\":\"thumb\",\"type\":\"InputDocument\"}],\"type\":\"messages.StickerSet\"},{\"id\":\"-2141370634\",\"method\":\"bots.setBotCommands\",\"params\":[{\"name\":\"commands\",\"type\":\"Vector<BotCommand>\"}],\"type\":\"Bool\"},{\"id\":\"1608974939\",\"method\":\"messages.getOldFeaturedStickers\",\"params\":[{\"name\":\"offset\",\"type\":\"int\"},{\"name\":\"limit\",\"type\":\"int\"},{\"name\":\"hash\",\"type\":\"int\"}],\"type\":\"messages.FeaturedStickers\"}]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/schema.json\n// module id = 22\n// module chunks = 0","// import moment from 'moment'\n\n// const DATETIME_FORMAT = 'YYYY-MM-DD HH:mm:ss.SSS'\n\n// export const getDefaultDateTimeFormat = () => DATETIME_FORMAT\n\n// export const dateStrToDMY = (dateObject, format = 'DD.MM.YYYY') => {\n//     if (!dateObject) {\n//         throw new Error('Empty dateObject')\n//     }\n\n//     const date = moment(dateObject, format)\n\n//     return {\n//         day: date.date(),\n//         month: date.month() + 1,\n//         year: date.year()\n//     }\n// }\n\n// export const now = () => moment().format(DATETIME_FORMAT)\n\n// export const DMYToMomentDate = (date) => {\n//     return moment({ day: date.day, month: date.month - 1, year: date.year })\n// }\n\n\n// WEBPACK FOOTER //\n// ./src/Services/DateTimeService.js","class ErrorResponse {\n    constructor(obj) {\n        this.dataObject = {}\n\n        if (!obj) {\n            return\n        }\n\n        if (obj instanceof Error) {\n            Object.getOwnPropertyNames(obj).forEach((key) => this.dataObject[key] = obj[key])\n            return\n        }\n\n        this.dataObject = obj\n    }\n\n    toJSON() {\n        return this.dataObject\n    }\n\n    toString() {\n        /// Circular Reference Exception\n        let cache = []\n        return JSON.stringify(this.dataObject, (key, value) => {\n            if (typeof value === 'object' && value !== null) {\n                if (cache.indexOf(value) !== -1) {\n                    return\n                }\n                cache.push(value)\n            }\n            return value\n        }, 2)\n    }\n\n}\n\nexport default ErrorResponse\n\n\n// WEBPACK FOOTER //\n// ./src/Services/ErrorResponse.js","import { TLSerialization } from '../TL'\nimport { bytesToHex, bytesFromHex, sha1BytesSync, bigStringInt } from '../Utils'\n\n/**\n*  Server public key, obtained from here: https://core.telegram.org/api/obtaining_api_id\n* \n* \n*  -----BEGIN RSA PUBLIC KEY-----\n*  MIIBCgKCAQEAwVACPi9w23mF3tBkdZz+zwrzKOaaQdr01vAbU4E1pvkfj4sqDsm6\n*  lyDONS789sVoD/xCS9Y0hkkC3gtL1tSfTlgCMOOul9lcixlEKzwKENj1Yz/s7daS\n*  an9tqw3bfUV/nqgbhGX81v/+7RFAEd+RwFnK7a+XYl9sluzHRyVVaTTveB2GazTw\n*  Efzk2DWgkBluml8OREmvfraX3bkHZJTKX4EQSjBbbdJ2ZXIsRrYOXfaA+xayEGB+\n*  8hdlLmAjbCVfaigxX0CDqWeR1yFL9kwd9P0NsZRPsmoqVwMbMu7mStFai6aIhc3n\n*  Slv8kg9qv1m6XHVQY3PnEw+QQtqSIXklHwIDAQAB\n*  -----END RSA PUBLIC KEY-----\n*  \n*  -----BEGIN PUBLIC KEY-----\n*  MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAruw2yP/BCcsJliRoW5eB\n*  VBVle9dtjJw+OYED160Wybum9SXtBBLXriwt4rROd9csv0t0OHCaTmRqBcQ0J8fx\n*  hN6/cpR1GWgOZRUAiQxoMnlt0R93LCX/j1dnVa/gVbCjdSxpbrfY2g2L4frzjJvd\n*  l84Kd9ORYjDEAyFnEA7dD556OptgLQQ2e2iVNq8NZLYTzLp5YpOdO1doK+ttrltg\n*  gTCy5SrKeLoCPPbOgGsdxJxyz5KKcZnSLj16yE5HvJQn0CNpRdENvRUXe6tBP78O\n*  39oJ8BTHp9oIjd6XWXAsp2CvK45Ol8wFXGF710w9lwCGNbmNxNYhtIkdqfsEcwR5\n*  JwIDAQAB\n*  -----END PUBLIC KEY-----\n*  \n*  -----BEGIN PUBLIC KEY-----\n*  MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvfLHfYH2r9R70w8prHbl\n*  Wt/nDkh+XkgpflqQVcnAfSuTtO05lNPspQmL8Y2XjVT4t8cT6xAkdgfmmvnvRPOO\n*  KPi0OfJXoRVylFzAQG/j83u5K3kRLbae7fLccVhKZhY46lvsueI1hQdLgNV9n1cQ\n*  3TDS2pQOCtovG4eDl9wacrXOJTG2990VjgnIKNA0UMoP+KF03qzryqIt3oTvZq03\n*  DyWdGK+AZjgBLaDKSnC6qD2cFY81UryRWOab8zKkWAnhw2kFpcqhI0jdV5QaSCEx\n*  vnsjVaX0Y1N0870931/5Jb9ICe4nweZ9kSDF/gip3kWLG0o8XQpChDfyvsqB9OLV\n*  /wIDAQAB\n*  -----END PUBLIC KEY-----\n*  \n*  -----BEGIN PUBLIC KEY-----\n*  MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAs/ditzm+mPND6xkhzwFI\n*  z6J/968CtkcSE/7Z2qAJiXbmZ3UDJPGrzqTDHkO30R8VeRM/Kz2f4nR05GIFiITl\n*  4bEjvpy7xqRDspJcCFIOcyXm8abVDhF+th6knSU0yLtNKuQVP6voMrnt9MV1X92L\n*  GZQLgdHZbPQz0Z5qIpaKhdyA8DEvWWvSUwwc+yi1/gGaybwlzZwqXYoPOhwMebzK\n*  Uk0xW14htcJrRrq+PXXQbRzTMynseCoPIoke0dtCodbA3qQxQovE16q9zz4Otv2k\n*  4j63cz53J+mhkVWAeWxVGI0lltJmWtEYK6er8VqqWot3nqmWMXogrgRLggv/Nbbo\n*  oQIDAQAB\n*  -----END PUBLIC KEY-----\n*  \n*  -----BEGIN PUBLIC KEY-----\n*  MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvmpxVY7ld/8DAjz6F6q0\n*  5shjg8/4p6047bn6/m8yPy1RBsvIyvuDuGnP/RzPEhzXQ9UJ5Ynmh2XJZgHoE9xb\n*  nfxL5BXHplJhMtADXKM9bWB11PU1Eioc3+AXBB8QiNFBn2XI5UkO5hPhbb9mJpjA\n*  9Uhw8EdfqJP8QetVsI/xrCEbwEXe0xvifRLJbY08/Gp66KpQvy7g8w7VB8wlgePe\n*  xW3pT13Ap6vuC+mQuJPyiHvSxjEKHgqePji9NP3tJUFQjcECqcm0yV7/2d0t/pbC\n*  m+ZH1sadZspQCEPPrtbkQBlvHb4OLiIWPGHKSMeRFvp3IWcmdJqXahxLCUS1Eh6M\n*  AQIDAQAB\n*  -----END PUBLIC KEY-----\n*\n* Bytes can be got via \n* $ openssl rsa -pubin -in key.pub -text -noout\n*/\n\nconst publisKeysHex = [\n    {\n        modulus: 'c150023e2f70db7985ded064759cfecf0af328e69a41daf4d6f01b538135a6f91f8f8b2a0ec9ba9720ce352efcf6c5680ffc424bd634864902de0b4bd6d49f4e580230e3ae97d95c8b19442b3c0a10d8f5633fecedd6926a7f6dab0ddb7d457f9ea81b8465fcd6fffeed114011df91c059caedaf97625f6c96ecc74725556934ef781d866b34f011fce4d835a090196e9a5f0e4449af7eb697ddb9076494ca5f81104a305b6dd27665722c46b60e5df680fb16b210607ef217652e60236c255f6a28315f4083a96791d7214bf64c1df4fd0db1944fb26a2a57031b32eee64ad15a8ba68885cde74a5bfc920f6abf59ba5c75506373e7130f9042da922179251f',\n        exponent: '010001'\n    },\n    {\n        modulus: 'aeec36c8ffc109cb099624685b97815415657bd76d8c9c3e398103d7ad16c9bba6f525ed0412d7ae2c2de2b44e77d72cbf4b7438709a4e646a05c43427c7f184debf72947519680e651500890c6832796dd11f772c25ff8f576755afe055b0a3752c696eb7d8da0d8be1faf38c9bdd97ce0a77d3916230c4032167100edd0f9e7a3a9b602d04367b689536af0d64b613ccba7962939d3b57682beb6dae5b608130b2e52aca78ba023cf6ce806b1dc49c72cf928a7199d22e3d7ac84e47bc9427d0236945d10dbd15177bab413fbf0edfda09f014c7a7da088dde9759702ca760af2b8e4e97cc055c617bd74c3d97008635b98dc4d621b4891da9fb0473047927',\n        exponent: '010001'\n    },\n    {\n        modulus: 'bdf2c77d81f6afd47bd30f29ac76e55adfe70e487e5e48297e5a9055c9c07d2b93b4ed3994d3eca5098bf18d978d54f8b7c713eb10247607e69af9ef44f38e28f8b439f257a11572945cc0406fe3f37bb92b79112db69eedf2dc71584a661638ea5becb9e23585074b80d57d9f5710dd30d2da940e0ada2f1b878397dc1a72b5ce2531b6f7dd158e09c828d03450ca0ff8a174deacebcaa22dde84ef66ad370f259d18af806638012da0ca4a70baa83d9c158f3552bc9158e69bf332a45809e1c36905a5caa12348dd57941a482131be7b2355a5f4635374f3bd3ddf5ff925bf4809ee27c1e67d9120c5fe08a9de458b1b4a3c5d0a428437f2beca81f4e2d5ff',\n        exponent: '010001'\n    },\n    {\n        modulus: 'b3f762b739be98f343eb1921cf0148cfa27ff7af02b6471213fed9daa0098976e667750324f1abcea4c31e43b7d11f1579133f2b3d9fe27474e462058884e5e1b123be9cbbc6a443b2925c08520e7325e6f1a6d50e117eb61ea49d2534c8bb4d2ae4153fabe832b9edf4c5755fdd8b19940b81d1d96cf433d19e6a22968a85dc80f0312f596bd2530c1cfb28b5fe019ac9bc25cd9c2a5d8a0f3a1c0c79bcca524d315b5e21b5c26b46babe3d75d06d1cd33329ec782a0f22891ed1db42a1d6c0dea431428bc4d7aabdcf3e0eb6fda4e23eb7733e7727e9a1915580796c55188d2596d2665ad1182ba7abf15aaa5a8b779ea996317a20ae044b820bff35b6e8a1',\n        exponent: '010001'\n    },\n    {\n        modulus: 'be6a71558ee577ff03023cfa17aab4e6c86383cff8a7ad38edb9fafe6f323f2d5106cbc8cafb83b869cffd1ccf121cd743d509e589e68765c96601e813dc5b9dfc4be415c7a6526132d0035ca33d6d6075d4f535122a1cdfe017041f1088d1419f65c8e5490ee613e16dbf662698c0f54870f0475fa893fc41eb55b08ff1ac211bc045ded31be27d12c96d8d3cfc6a7ae8aa50bf2ee0f30ed507cc2581e3dec56de94f5dc0a7abee0be990b893f2887bd2c6310a1e0a9e3e38bd34fded2541508dc102a9c9b4c95effd9dd2dfe96c29be647d6c69d66ca500843cfaed6e440196f1dbe0e2e22163c61ca48c79116fa77216726749a976a1c4b0944b5121e8c01',\n        exponent: '010001'\n    }\n]\n\nvar publicKeysParsed = {}\nvar prepared = false\n\nfunction prepareRsaKeys() {\n    if (prepared) {\n        return\n    }\n\n    for (var i = 0; i < publisKeysHex.length; i++) {\n        var keyParsed = publisKeysHex[i]\n\n        var RSAPublicKey = new TLSerialization()\n        RSAPublicKey.storeBytes(bytesFromHex(keyParsed.modulus), 'n')\n        RSAPublicKey.storeBytes(bytesFromHex(keyParsed.exponent), 'e')\n\n        var buffer = RSAPublicKey.getBuffer()\n\n        var fingerprintBytes = sha1BytesSync(buffer).slice(-8)\n        fingerprintBytes.reverse()\n\n        publicKeysParsed[bytesToHex(fingerprintBytes)] = {\n            modulus: keyParsed.modulus,\n            exponent: keyParsed.exponent\n        }\n    }\n\n    prepared = true\n}\n\nfunction selectRsaKeyByFingerPrint(fingerprints) {\n    prepareRsaKeys()\n\n    var fingerprintHex, foundKey, i\n    for (i = 0; i < fingerprints.length; i++) {\n        fingerprintHex = bigStringInt(fingerprints[i]).toString(16)\n        if (foundKey = publicKeysParsed[fingerprintHex]) {\n            return { ...foundKey, fingerprint: fingerprints[i] }\n        }\n    }\n\n    return false\n}\n\nexport const prepare = prepareRsaKeys\nexport const select = selectRsaKeyByFingerPrint\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/Mtp/MtpRsaKeysManager.js","import { intToUint, bytesToHex, bigStringInt, bigint, uintToInt, gzipUncompress, bytesToArrayBuffer } from '../Utils'\nimport Config from '../config'\nimport { bytesFromArrayBuffer } from '../Utils/utils'\nimport { ErrorResponse } from '../Services'\n\n// console.log(Config.Modes);\n\nexport function TLSerialization(options) {\n    options = options || {}\n    this.maxLength = options.startMaxLength || 2048 // 2Kb\n    this.offset = 0 // in bytes\n\n    this.createBuffer()\n\n    this.mtproto = options.mtproto || false\n    return this\n}\n\nTLSerialization.prototype.createBuffer = function () {\n    this.buffer = new ArrayBuffer(this.maxLength)\n    this.intView = new Int32Array(this.buffer)\n    this.byteView = new Uint8Array(this.buffer)\n}\n\nTLSerialization.prototype.getArray = function () {\n    var resultBuffer = new ArrayBuffer(this.offset)\n    var resultArray = new Int32Array(resultBuffer)\n\n    resultArray.set(this.intView.subarray(0, this.offset / 4))\n\n    return resultArray\n}\n\nTLSerialization.prototype.getBuffer = function () {\n    return this.getArray().buffer\n}\n\nTLSerialization.prototype.getBytes = function (typed) {\n    if (typed) {\n        var resultBuffer = new ArrayBuffer(this.offset)\n        var resultArray = new Uint8Array(resultBuffer)\n\n        resultArray.set(this.byteView.subarray(0, this.offset))\n\n        return resultArray\n    }\n\n    var bytes = []\n    for (var i = 0; i < this.offset; i++) {\n        bytes.push(this.byteView[i])\n    }\n    return bytes\n}\n\nTLSerialization.prototype.checkLength = function (needBytes) {\n    if (this.offset + needBytes < this.maxLength) {\n        return\n    }\n\n    //LogService.logDebug(`[TLSerialization] checkLength() ${this.offset} ${needBytes} ${this.maxLength}`)\n\n    this.maxLength = Math.ceil(Math.max(this.maxLength * 2, this.offset + needBytes + 16) / 4) * 4\n    var previousBuffer = this.buffer\n    var previousArray = new Int32Array(previousBuffer)\n\n    this.createBuffer()\n\n    new Int32Array(this.buffer).set(previousArray)\n}\n\nTLSerialization.prototype.writeInt = function (i, field) {\n    //LogService.logDebug(`[TLSerialization] writeInt() ${i}  ${i} ${field}`)\n\n    this.checkLength(4)\n    this.intView[this.offset / 4] = i\n    this.offset += 4\n}\n\nTLSerialization.prototype.storeInt = function (i, field) {\n    this.writeInt(i, (field || '') + ':int')\n}\n\nTLSerialization.prototype.storeBool = function (i, field) {\n    if (i) {\n        this.writeInt(0x997275b5, (field || '') + ':bool')\n    } else {\n        this.writeInt(0xbc799737, (field || '') + ':bool')\n    }\n}\n\nTLSerialization.prototype.storeLongP = function (iHigh, iLow, field) {\n    this.writeInt(iLow, (field || '') + ':long[low]')\n    this.writeInt(iHigh, (field || '') + ':long[high]')\n}\n\nTLSerialization.prototype.storeLong = function (sLong, field) {\n    if (Array.isArray(sLong)) {\n        if (sLong.length == 2) {\n            return this.storeLongP(sLong[0], sLong[1], field)\n        } else {\n            return this.storeIntBytes(sLong, 64, field)\n        }\n    }\n\n    if (typeof sLong != 'string') {\n        sLong = sLong ? sLong.toString() : '0'\n    }\n    var divRem = bigStringInt(sLong).divideAndRemainder(bigint(0x100000000))\n\n    this.writeInt(intToUint(divRem[1].intValue()), (field || '') + ':long[low]')\n    this.writeInt(intToUint(divRem[0].intValue()), (field || '') + ':long[high]')\n}\n\nTLSerialization.prototype.storeDouble = function (f, field) {\n    var buffer = new ArrayBuffer(8)\n    var intView = new Int32Array(buffer)\n    var doubleView = new Float64Array(buffer)\n\n    doubleView[0] = f\n\n    this.writeInt(intView[0], (field || '') + ':double[low]')\n    this.writeInt(intView[1], (field || '') + ':double[high]')\n}\n\nTLSerialization.prototype.storeString = function (s, field) {\n    //LogService.logDebug(`[TLSerialization] storeString() ${s} ${(field || '') + ':string'}`)\n\n    if (s === undefined) {\n        s = ''\n    }\n    var sUTF8 = unescape(encodeURIComponent(s))\n\n    this.checkLength(sUTF8.length + 8)\n\n    var len = sUTF8.length\n    if (len <= 253) {\n        this.byteView[this.offset++] = len\n    } else {\n        this.byteView[this.offset++] = 254\n        this.byteView[this.offset++] = len & 0xFF\n        this.byteView[this.offset++] = (len & 0xFF00) >> 8\n        this.byteView[this.offset++] = (len & 0xFF0000) >> 16\n    }\n    for (var i = 0; i < len; i++) {\n        this.byteView[this.offset++] = sUTF8.charCodeAt(i)\n    }\n\n    // Padding\n    while (this.offset % 4) {\n        this.byteView[this.offset++] = 0\n    }\n}\n\nTLSerialization.prototype.storeBytes = function (bytes, field) {\n    if (bytes instanceof ArrayBuffer) {\n        bytes = new Uint8Array(bytes)\n    } else if (bytes && !bytes.name && bytes[0] !== undefined) {\n        // serialized and deserialized json  uintarray\n        let a = [];\n        let i = 0;\n        while (bytes[i] || bytes[i] === 0) {\n            a.push(bytes[i]);\n            i++;\n        }\n        bytes = new Uint8Array(a);\n    } else if (bytes === undefined) {\n        bytes = []\n    }\n\n    //LogService.logDebug(`[TLSerialization] storeBytes() ${bytesToHex(bytes)} ${(field || '') + ':bytes'}`)\n\n    var len = bytes.byteLength || bytes.length\n    this.checkLength(len + 8)\n    if (len <= 253) {\n        this.byteView[this.offset++] = len\n    } else {\n        this.byteView[this.offset++] = 254\n        this.byteView[this.offset++] = len & 0xFF\n        this.byteView[this.offset++] = (len & 0xFF00) >> 8\n        this.byteView[this.offset++] = (len & 0xFF0000) >> 16\n    }\n\n    this.byteView.set(bytes, this.offset)\n    this.offset += len\n\n    // Padding\n    while (this.offset % 4) {\n        this.byteView[this.offset++] = 0\n    }\n}\n\nTLSerialization.prototype.storeIntBytes = function (bytes, bits, field) {\n    if (bytes instanceof ArrayBuffer) {\n        bytes = new Uint8Array(bytes)\n    }\n    var len = bytes.length\n    if ((bits % 32) || (len * 8) != bits) {\n        throw new Error('Invalid bits: ' + bits + ', ' + bytes.length)\n    }\n\n    //LogService.logDebug(`[TLSerialization] storeIntBytes() ${bytesToHex(bytes)} ${(field || '') + ':int' + bits}`)\n\n    this.checkLength(len)\n\n    this.byteView.set(bytes, this.offset)\n    this.offset += len\n}\n\nTLSerialization.prototype.storeRawBytes = function (bytes, field) {\n    if (bytes instanceof ArrayBuffer) {\n        bytes = new Uint8Array(bytes)\n    }\n    var len = bytes.length\n\n    //LogService.logDebug(`[TLSerialization] storeRawBytes() ${bytesToHex(bytes)} ${(field || '')}`)\n\n    this.checkLength(len)\n\n    this.byteView.set(bytes, this.offset)\n    this.offset += len\n}\n\nTLSerialization.prototype.storeMethod = function (methodName, params) {\n    var schema = this.mtproto ? Config.Schema.MTProto : Config.Schema.API\n    var methodData = false,\n        i\n\n    for (i = 0; i < schema.methods.length; i++) {\n        if (schema.methods[i].method == methodName) {\n            methodData = schema.methods[i]\n            break\n        }\n    }\n    if (!methodData) {\n        throw new Error('No method ' + methodName + ' found')\n    }\n\n\n    this.storeInt(intToUint(methodData.id), methodName + '[id]')\n\n    var param, type\n    var i, condType\n    var fieldBit\n    var len = methodData.params.length\n    for (i = 0; i < len; i++) {\n        param = methodData.params[i]\n        type = param.type\n\n        if (type.indexOf('?') !== -1) {\n            condType = type.split('?')\n            fieldBit = condType[0].split('.')\n            if (!(params[fieldBit[0]] & (1 << fieldBit[1]))) {\n                continue\n\n\n            }\n            type = condType[1]\n        }\n\n\n        this.storeObject(params[param.name], type, methodName + '[' + param.name + ']')\n    }\n\n    return methodData.type\n}\n\nTLSerialization.prototype.storeObject = function (obj, type, field) {\n    switch (type) {\n        case '#':\n        case 'int':\n            return this.storeInt(obj, field)\n        case 'long':\n            return this.storeLong(obj, field)\n        case 'int128':\n            return this.storeIntBytes(obj, 128, field)\n        case 'int256':\n            return this.storeIntBytes(obj, 256, field)\n        case 'int512':\n            return this.storeIntBytes(obj, 512, field)\n        case 'string':\n            return this.storeString(obj, field)\n        case 'bytes':\n            return this.storeBytes(obj, field)\n        case 'double':\n            return this.storeDouble(obj, field)\n        case 'Bool':\n            return this.storeBool(obj, field)\n        case 'true':\n            return\n    }\n\n    if (Array.isArray(obj)) {\n        if (type.substr(0, 6) == 'Vector') {\n            this.writeInt(0x1cb5c415, field + '[id]')\n        }\n        else if (type.substr(0, 6) != 'vector') {\n            throw new Error('Invalid vector type ' + type)\n        }\n        var itemType = type.substr(7, type.length - 8); // for \"Vector<itemType>\"\n        this.writeInt(obj.length, field + '[count]')\n        for (var i = 0; i < obj.length; i++) {\n            this.storeObject(obj[i], itemType, field + '[' + i + ']')\n        }\n        return true\n    }\n    else if (type.substr(0, 6).toLowerCase() == 'vector') {\n        throw new Error(`Invalid vector object \"${type}\"`)\n    }\n\n    if (typeof (obj) !== 'object') {\n        throw new Error('Invalid object for type ' + type)\n    }\n\n    var schema = this.mtproto ? Config.Schema.MTProto : Config.Schema.API\n    var predicate = obj['_']\n    var isBare = false\n    var constructorData = false,\n        i\n\n    if (isBare = (type.charAt(0) == '%')) {\n        type = type.substr(1)\n    }\n\n    for (i = 0; i < schema.constructors.length; i++) {\n        if (schema.constructors[i].predicate == predicate) {\n            constructorData = schema.constructors[i]\n            break\n        }\n    }\n    if (!constructorData) {\n        throw new Error('No predicate ' + predicate + ' found')\n    }\n\n    if (predicate == type) {\n        isBare = true\n    }\n\n    if (!isBare) {\n        this.writeInt(intToUint(constructorData.id), field + '[' + predicate + '][id]')\n    }\n\n    var param, type\n    var i, condType\n    var fieldBit\n    var len = constructorData.params.length\n    for (i = 0; i < len; i++) {\n        param = constructorData.params[i]\n        type = param.type\n        if (type.indexOf('?') !== -1) {\n            condType = type.split('?')\n            fieldBit = condType[0].split('.')\n            if (!(obj[fieldBit[0]] & (1 << fieldBit[1]))) {\n                continue\n            }\n            type = condType[1]\n        }\n\n        this.storeObject(obj[param.name], type, field + '[' + predicate + '][' + param.name + ']')\n    }\n\n    return constructorData.type\n}\n\nexport function TLDeserialization(buffer, options) {\n    options = options || {}\n\n    this.offset = 0 // in bytes\n    this.override = options.override || {}\n\n    this.buffer = buffer\n    this.intView = new Uint32Array(this.buffer)\n    this.byteView = new Uint8Array(this.buffer)\n\n    this.mtproto = options.mtproto || false\n    return this\n}\n\nTLDeserialization.prototype.readInt = function (field) {\n    if (this.offset >= this.intView.length * 4) {\n        throw new Error('Nothing to fetch: ' + field)\n    }\n    var i = this.intView[this.offset / 4]\n\n    //LogService.logDebug(`[TLSerialization] readInt() ${i.toString(16)} ${i} ${field}`)\n\n    this.offset += 4\n\n    return i\n}\n\nTLDeserialization.prototype.fetchInt = function (field) {\n    return this.readInt((field || '') + ':int')\n}\n\nTLDeserialization.prototype.fetchDouble = function (field) {\n    var buffer = new ArrayBuffer(8)\n    var intView = new Int32Array(buffer)\n    var doubleView = new Float64Array(buffer)\n\n    intView[0] = this.readInt((field || '') + ':double[low]'),\n        intView[1] = this.readInt((field || '') + ':double[high]')\n\n    return doubleView[0]\n}\n\nTLDeserialization.prototype.fetchLong = function (field) {\n    var iLow = this.readInt((field || '') + ':long[low]')\n    var iHigh = this.readInt((field || '') + ':long[high]')\n    var longDec = bigint(iHigh).shiftLeft(32).add(bigint(iLow)).toString()\n\n    return longDec\n}\n\nTLDeserialization.prototype.fetchBool = function (field) {\n    var i = this.readInt((field || '') + ':bool')\n    if (i == 0x997275b5) {\n        return true\n    } else if (i == 0xbc799737) {\n        return false\n    }\n\n    this.offset -= 4\n    return this.fetchObject('Object', field)\n}\n\nTLDeserialization.prototype.fetchString = function (field) {\n    var len = this.byteView[this.offset++]\n\n    if (len == 254) {\n        var len = this.byteView[this.offset++] |\n            (this.byteView[this.offset++] << 8) |\n            (this.byteView[this.offset++] << 16)\n    }\n\n    var sUTF8 = ''\n    for (var i = 0; i < len; i++) {\n        sUTF8 += String.fromCharCode(this.byteView[this.offset++])\n    }\n\n    // Padding\n    while (this.offset % 4) {\n        this.offset++\n    }\n\n    try {\n        var s = decodeURIComponent(escape(sUTF8))\n    } catch (e) {\n        var s = sUTF8\n    }\n\n    //LogService.logDebug(`[TLSerialization] fetchString() ${s} ${(field || '') + ':string'}`)\n\n    return s\n}\n\nTLDeserialization.prototype.fetchBytes = function (field) {\n    var len = this.byteView[this.offset++]\n\n    if (len == 254) {\n        len = this.byteView[this.offset++] |\n            (this.byteView[this.offset++] << 8) |\n            (this.byteView[this.offset++] << 16)\n    }\n\n    var bytes = this.byteView.subarray(this.offset, this.offset + len)\n    this.offset += len\n\n    // Padding\n    while (this.offset % 4) {\n        this.offset++\n    }\n\n    //LogService.logDebug(`[TLSerialization] fetchBytes() ${bytesToHex(bytes)} ${(field || '') + ':bytes'}`)\n\n    return bytes\n}\n\nTLDeserialization.prototype.fetchIntBytes = function (bits, typed, field) {\n    if (bits % 32) {\n        throw new Error('Invalid bits: ' + bits)\n    }\n\n    var len = bits / 8\n    if (typed) {\n        var result = this.byteView.subarray(this.offset, this.offset + len)\n        this.offset += len\n        return result\n    }\n\n    var bytes = []\n    for (var i = 0; i < len; i++) {\n        bytes.push(this.byteView[this.offset++])\n    }\n\n    //LogService.logDebug(`[TLSerialization] fetchIntBytes() ${bytesToHex(bytes)} ${(field || '') + ':int' + bits}`)\n\n    return bytes\n}\n\nTLDeserialization.prototype.fetchRawBytes = function (len, typed, field) {\n    if (len === false) {\n        len = this.readInt((field || '') + '_length')\n        if (len > this.byteView.byteLength) {\n            throw new Error('Invalid raw bytes length: ' + len + ', buffer len: ' + this.byteView.byteLength)\n        }\n    }\n\n    if (typed) {\n        var bytes = new Uint8Array(len)\n        bytes.set(this.byteView.subarray(this.offset, this.offset + len))\n        this.offset += len\n        return bytes\n    }\n\n    var bytes = []\n    for (var i = 0; i < len; i++) {\n        bytes.push(this.byteView[this.offset++])\n    }\n\n    //LogService.logDebug(`[TLSerialization] fetchRawBytes() ${bytesToHex(bytes)} ${(field || '')}`)\n\n    return bytes\n}\n\nTLDeserialization.prototype.fetchObject = function (type, field) {\n    switch (type) {\n        case '#':\n        case 'int':\n            return this.fetchInt(field)\n        case 'long':\n            return this.fetchLong(field)\n        case 'int128':\n            return this.fetchIntBytes(128, false, field)\n        case 'int256':\n            return this.fetchIntBytes(256, false, field)\n        case 'int512':\n            return this.fetchIntBytes(512, false, field)\n        case 'string':\n            return this.fetchString(field)\n        case 'bytes':\n            return this.fetchBytes(field)\n        case 'double':\n            return this.fetchDouble(field)\n        case 'Bool':\n            return this.fetchBool(field)\n        case 'true':\n            return true\n    }\n\n    field = field || type || 'Object'\n\n    if (type.substr(0, 6) == 'Vector' || type.substr(0, 6) == 'vector') {\n\n        if (type.charAt(0) == 'V') {\n            var constructor = this.readInt(field + '[id]')\n            var constructorCmp = uintToInt(constructor)\n\n            if (constructorCmp == 0x3072cfa1) { // Gzip packed\n                var compressed = this.fetchBytes(field + '[packed_string]')\n                var buffer = gzipUncompress(compressed)\n                var newDeserializer = (new TLDeserialization(buffer))\n\n                return newDeserializer.fetchObject(type, field)\n            }\n            if (constructorCmp != 0x1cb5c415) {\n                throw new Error('Invalid vector constructor ' + constructor)\n            }\n        }\n        var len = this.readInt(field + '[count]')\n        var result = []\n        if (len > 0) {\n            var itemType = type.substr(7, type.length - 8); // for \"Vector<itemType>\"\n            for (var i = 0; i < len; i++) {\n                result.push(this.fetchObject(itemType, field + '[' + i + ']'))\n            }\n        }\n\n        return result\n    }\n\n    var schema = this.mtproto ? Config.Schema.MTProto : Config.Schema.API\n\n    var predicate = false\n    var constructorData = false\n\n    if (type.charAt(0) == '%') {\n        var checkType = type.substr(1)\n        for (var i = 0; i < schema.constructors.length; i++) {\n            if (schema.constructors[i].type == checkType) {\n                constructorData = schema.constructors[i]\n                break\n            }\n        }\n        if (!constructorData) {\n            throw new Error('Constructor not found for type: ' + type)\n        }\n    }\n    else if (type.charAt(0) >= 97 && type.charAt(0) <= 122) {\n        for (var i = 0; i < schema.constructors.length; i++) {\n            if (schema.constructors[i].predicate == type) {\n                constructorData = schema.constructors[i]\n                break\n            }\n        }\n        if (!constructorData) {\n            throw new Error('Constructor not found for predicate: ' + type)\n        }\n    } else {\n        var constructor = this.readInt(field + '[id]')\n        var constructorCmp = uintToInt(constructor)\n\n        if (constructorCmp == 0x3072cfa1) { // Gzip packed\n            var compressed = this.fetchBytes(field + '[packed_string]')\n            var buffer = gzipUncompress(Buffer.from(compressed))\n            var newDeserializer = (new TLDeserialization(buffer))\n\n            return newDeserializer.fetchObject(type, field)\n        }\n\n        var index = schema.constructorsIndex\n        if (!index) {\n            schema.constructorsIndex = index = {}\n            for (var i = 0; i < schema.constructors.length; i++) {\n                index[schema.constructors[i].id] = i\n            }\n        }\n        var i = index[constructorCmp]\n        if (i) {\n            constructorData = schema.constructors[i]\n        }\n\n        var fallback = false\n        if (!constructorData && this.mtproto) {\n            var schemaFallback = Config.Schema.API\n            for (i = 0; i < schemaFallback.constructors.length; i++) {\n                if (schemaFallback.constructors[i].id == constructorCmp) {\n                    constructorData = schemaFallback.constructors[i]\n\n                    delete this.mtproto\n                    fallback = true\n                    break\n                }\n            }\n        }\n\n        if (!constructorData) {\n            throw new Error('MTProto Constructor not found: ' + constructor + ' ' + this.fetchInt() + ' ' + this.fetchInt())\n        }\n    }\n\n\n    predicate = constructorData.predicate\n\n    var result = { '_': predicate }\n    var overrideKey = (this.mtproto ? 'mt_' : '') + predicate\n    var self = this\n\n    if (this.override[overrideKey]) {\n        this.override[overrideKey].apply(this, [result, field + '[' + predicate + ']'])\n    } else {\n        var i, param\n        var type, isCond\n        var condType, fieldBit\n        var value\n        var len = constructorData.params.length\n        for (i = 0; i < len; i++) {\n            param = constructorData.params[i]\n            type = param.type\n            if (type == '#' && result.pFlags === undefined) {\n                result.pFlags = {}\n            }\n            if (isCond = (type.indexOf('?') !== -1)) {\n                condType = type.split('?')\n                fieldBit = condType[0].split('.')\n                if (!(result[fieldBit[0]] & (1 << fieldBit[1]))) {\n                    continue\n                }\n                type = condType[1]\n            }\n\n            value = self.fetchObject(type, field + '[' + predicate + '][' + param.name + ']')\n\n            if (isCond && type === 'true') {\n                result.pFlags[param.name] = value\n            } else {\n                result[param.name] = value\n            }\n        }\n    }\n\n    if (fallback) {\n        this.mtproto = true\n    }\n\n    return result\n}\n\nTLDeserialization.prototype.getOffset = function () {\n    return this.offset\n}\n\nTLDeserialization.prototype.fetchEnd = function () {\n    if (this.offset != this.byteView.length) {\n        throw new Error('Fetch end with non-empty buffer')\n    }\n    return true\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/TL/TLSerialization.js","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/buffer/index.js\n// module id = 27\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 28\n// module chunks = 0","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/base64-js/index.js\n// module id = 29\n// module chunks = 0","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ieee754/index.js\n// module id = 30\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/isarray/index.js\n// module id = 31\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_32__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rusha\"\n// module id = 32\n// module chunks = 0","import * as CryptoJS from 'crypto-js'\n\n/**\n* Abstract base IGE mode.\n*/\nlet IGE = CryptoJS.mode.IGE = CryptoJS.lib.BlockCipherMode.extend();\n\n/**\n* IGE encryptor.\n*/\nIGE.Encryptor = IGE.extend({\n  /**\n   * Processes the data block at offset.\n   *\n   * @param {Array} words The data words to operate on.\n   * @param {number} offset The offset where the block starts.\n   *\n   * @example\n   *\n   *    mode.processBlock(data.words, offset);\n   */\n  processBlock: function (words, offset) {\n     // Shortcuts\n     let cipher = this._cipher;\n     let blockSize = cipher.blockSize;\n\n     if (this._ivp === undefined) {\n      this._ivp = this._iv.slice(0, blockSize);\n      this._iv2p = this._iv.slice(blockSize, blockSize + blockSize);\n     }\n\n\n     // Remember this block to use with next block\n     let nextIv2p = words.slice(offset, offset + blockSize);\n\n     // XOR with previous ciphertext\n     xorBlock(words, this._ivp, offset, blockSize);\n\n     // Block cipher\n     cipher.encryptBlock(words, offset);\n\n     // XOR with previous plaintext\n     xorBlock(words, this._iv2p, offset, blockSize);\n\n     this._ivp = words.slice(offset, offset + blockSize);\n     this._iv2p = nextIv2p;\n  }\n});\n\n/**\n* IGE decryptor.\n*/\nIGE.Decryptor = IGE.extend({\n  /**\n   * Processes the data block at offset.\n   *\n   * @param {Array} words The data words to operate on.\n   * @param {number} offset The offset where the block starts.\n   *\n   * @example\n   *\n   *    mode.processBlock(data.words, offset);\n   */\n  processBlock: function (words, offset) {\n     // Shortcuts\n     let cipher = this._cipher;\n     let blockSize = cipher.blockSize;\n\n     if (this._ivp === undefined) {\n      this._ivp = this._iv.slice(0, blockSize);\n      this._iv2p = this._iv.slice(blockSize, 2 * blockSize);\n     }\n\n     // Remember this block to use with next block\n     let nextIvp = words.slice(offset, offset + blockSize);\n\n     // XOR with previous ciphertext\n     xorBlock(words, this._iv2p, offset, blockSize);\n\n     // Block cipher\n     cipher.decryptBlock(words, offset);\n\n     // XOR with previous plaintext\n     xorBlock(words, this._ivp, offset, blockSize);\n\n     this._ivp = nextIvp;\n     this._iv2p = words.slice(offset, offset + blockSize);\n  }\n});\n\nfunction xorBlock(words, block, offset, blockSize) {\n  for (let i = 0; i < blockSize; i++) {\n     words[offset + i] ^= block[i];\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/Utils/aesIGEMode.js","// Top level file is just a mixin of submodules & constants\n'use strict';\n\nvar assign    = require('./lib/utils/common').assign;\n\nvar deflate   = require('./lib/deflate');\nvar inflate   = require('./lib/inflate');\nvar constants = require('./lib/zlib/constants');\n\nvar pako = {};\n\nassign(pako, deflate, inflate, constants);\n\nmodule.exports = pako;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pako/index.js\n// module id = 34\n// module chunks = 0","'use strict';\n\n\nvar zlib_deflate = require('./zlib/deflate');\nvar utils        = require('./utils/common');\nvar strings      = require('./utils/strings');\nvar msg          = require('./zlib/messages');\nvar ZStream      = require('./zlib/zstream');\n\nvar toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nvar Z_NO_FLUSH      = 0;\nvar Z_FINISH        = 4;\n\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_SYNC_FLUSH    = 2;\n\nvar Z_DEFAULT_COMPRESSION = -1;\n\nvar Z_DEFAULT_STRATEGY    = 0;\n\nvar Z_DEFLATED  = 8;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array|Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param)  or if you\n * push a chunk with explicit flush (call [[Deflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate(options) {\n  if (!(this instanceof Deflate)) return new Deflate(options);\n\n  this.options = utils.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status = zlib_deflate.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  if (opt.header) {\n    zlib_deflate.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    var dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = zlib_deflate.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK) {\n      throw new Error(msg[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Deflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the compression context.\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * array format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var status, _mode;\n\n  if (this.ended) { return false; }\n\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? Z_FINISH : Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n    status = zlib_deflate.deflate(strm, _mode);    /* no bad return value */\n\n    if (status !== Z_STREAM_END && status !== Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n    if (strm.avail_out === 0 || (strm.avail_in === 0 && (_mode === Z_FINISH || _mode === Z_SYNC_FLUSH))) {\n      if (this.options.to === 'string') {\n        this.onData(strings.buf2binstring(utils.shrinkBuf(strm.output, strm.next_out)));\n      } else {\n        this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n      }\n    }\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== Z_STREAM_END);\n\n  // Finalize on the last chunk.\n  if (_mode === Z_FINISH) {\n    status = zlib_deflate.deflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === Z_SYNC_FLUSH) {\n    this.onEnd(Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , data = Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate(input, options) {\n  var deflator = new Deflate(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || msg[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate(input, options);\n}\n\n\nexports.Deflate = Deflate;\nexports.deflate = deflate;\nexports.deflateRaw = deflateRaw;\nexports.gzip = gzip;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pako/lib/deflate.js\n// module id = 35\n// module chunks = 0","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils   = require('../utils/common');\nvar trees   = require('./trees');\nvar adler32 = require('./adler32');\nvar crc32   = require('./crc32');\nvar msg     = require('./messages');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\nvar Z_NO_FLUSH      = 0;\nvar Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\nvar Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\n//var Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\n//var Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\n//var Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n\n/* compression levels */\n//var Z_NO_COMPRESSION      = 0;\n//var Z_BEST_SPEED          = 1;\n//var Z_BEST_COMPRESSION    = 9;\nvar Z_DEFAULT_COMPRESSION = -1;\n\n\nvar Z_FILTERED            = 1;\nvar Z_HUFFMAN_ONLY        = 2;\nvar Z_RLE                 = 3;\nvar Z_FIXED               = 4;\nvar Z_DEFAULT_STRATEGY    = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\n//var Z_BINARY              = 0;\n//var Z_TEXT                = 1;\n//var Z_ASCII               = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n/*============================================================================*/\n\n\nvar MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_MEM_LEVEL = 8;\n\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nvar D_CODES       = 30;\n/* number of distance codes */\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nvar MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar MIN_MATCH = 3;\nvar MAX_MATCH = 258;\nvar MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nvar PRESET_DICT = 0x20;\n\nvar INIT_STATE = 42;\nvar EXTRA_STATE = 69;\nvar NAME_STATE = 73;\nvar COMMENT_STATE = 91;\nvar HCRC_STATE = 103;\nvar BUSY_STATE = 113;\nvar FINISH_STATE = 666;\n\nvar BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nvar BS_BLOCK_DONE     = 2; /* block flush performed */\nvar BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nvar BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nvar OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nfunction err(strm, errorCode) {\n  strm.msg = msg[errorCode];\n  return errorCode;\n}\n\nfunction rank(f) {\n  return ((f) << 1) - ((f) > 4 ? 9 : 0);\n}\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\nfunction flush_pending(strm) {\n  var s = strm.state;\n\n  //_tr_flush_bits(s);\n  var len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);\n  strm.next_out += len;\n  s.pending_out += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n}\n\n\nfunction flush_block_only(s, last) {\n  trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n}\n\n\nfunction put_byte(s, b) {\n  s.pending_buf[s.pending++] = b;\n}\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nfunction putShortMSB(s, b) {\n//  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n}\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nfunction read_buf(strm, buf, start, size) {\n  var len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  utils.arraySet(buf, strm.input, strm.next_in, len, start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n}\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nfunction longest_match(s, cur_match) {\n  var chain_length = s.max_chain_length;      /* max hash chain length */\n  var scan = s.strstart; /* current string */\n  var match;                       /* matched string */\n  var len;                           /* length of current match */\n  var best_len = s.prev_length;              /* best match length so far */\n  var nice_match = s.nice_match;             /* stop if match long enough */\n  var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  var _win = s.window; // shortcut\n\n  var wmask = s.w_mask;\n  var prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  var strend = s.strstart + MAX_MATCH;\n  var scan_end1  = _win[scan + best_len - 1];\n  var scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n}\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nfunction fill_window(s) {\n  var _w_size = s.w_size;\n  var p, n, m, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n\n      /* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */\n\n      n = s.hash_size;\n      p = n;\n      do {\n        m = s.head[--p];\n        s.head[p] = (m >= _w_size ? m - _w_size : 0);\n      } while (--n);\n\n      n = _w_size;\n      p = n;\n      do {\n        m = s.prev[--p];\n        s.prev[p] = (m >= _w_size ? m - _w_size : 0);\n        /* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */\n      } while (--n);\n\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    var curr = s.strstart + s.lookahead;\n//    var init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n}\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\nfunction deflate_stored(s, flush) {\n  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */\n  var max_block_size = 0xffff;\n\n  if (max_block_size > s.pending_buf_size - 5) {\n    max_block_size = s.pending_buf_size - 5;\n  }\n\n  /* Copy as much as possible from input to output: */\n  for (;;) {\n    /* Fill the window as much as possible: */\n    if (s.lookahead <= 1) {\n\n      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n      //  s->block_start >= (long)s->w_size, \"slide too late\");\n//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n//        s.block_start >= s.w_size)) {\n//        throw  new Error(\"slide too late\");\n//      }\n\n      fill_window(s);\n      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n    }\n    //Assert(s->block_start >= 0L, \"block gone\");\n//    if (s.block_start < 0) throw new Error(\"block gone\");\n\n    s.strstart += s.lookahead;\n    s.lookahead = 0;\n\n    /* Emit a stored block if pending_buf will be full: */\n    var max_start = s.block_start + max_block_size;\n\n    if (s.strstart === 0 || s.strstart >= max_start) {\n      /* strstart == 0 is possible when wraparound on 16-bit machine */\n      s.lookahead = s.strstart - max_start;\n      s.strstart = max_start;\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n\n    }\n    /* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */\n    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n\n  s.insert = 0;\n\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n\n  if (s.strstart > s.block_start) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_NEED_MORE;\n}\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nfunction deflate_fast(s, flush) {\n  var hash_head;        /* head of the hash chain */\n  var bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nfunction deflate_slow(s, flush) {\n  var hash_head;          /* head of hash chain */\n  var bflush;              /* set if current block must be flushed */\n\n  var max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = trees._tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n}\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nfunction deflate_rle(s, flush) {\n  var bflush;            /* set if current block must be flushed */\n  var prev;              /* byte at distance one to match */\n  var scan, strend;      /* scan goes up to strend for length of run */\n\n  var _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nfunction deflate_huff(s, flush) {\n  var bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nvar configuration_table;\n\nconfiguration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nfunction lm_init(s) {\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n}\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);\n  this.dyn_dtree  = new utils.Buf16((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new utils.Buf16((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new utils.Buf16(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new utils.Buf16(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new utils.Buf16(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.l_buf = 0;          /* buffer index for literals or lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.last_lit = 0;      /* running index in l_buf */\n\n  this.d_buf = 0;\n  /* Buffer index for distances. To simplify the code, d_buf and l_buf have\n   * the same number of elements. To use different lengths, an extra flag\n   * array would be necessary.\n   */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\nfunction deflateResetKeep(strm) {\n  var s;\n\n  if (!strm || !strm.state) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = Z_NO_FLUSH;\n  trees._tr_init(s);\n  return Z_OK;\n}\n\n\nfunction deflateReset(strm) {\n  var ret = deflateResetKeep(strm);\n  if (ret === Z_OK) {\n    lm_init(strm.state);\n  }\n  return ret;\n}\n\n\nfunction deflateSetHeader(strm, head) {\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }\n  strm.state.gzhead = head;\n  return Z_OK;\n}\n\n\nfunction deflateInit2(strm, level, method, windowBits, memLevel, strategy) {\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR;\n  }\n  var wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  var s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new utils.Buf8(s.w_size * 2);\n  s.head = new utils.Buf16(s.hash_size);\n  s.prev = new utils.Buf16(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n\n  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);\n  //s->pending_buf = (uchf *) overlay;\n  s.pending_buf = new utils.Buf8(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);\n  s.d_buf = 1 * s.lit_bufsize;\n\n  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;\n  s.l_buf = (1 + 2) * s.lit_bufsize;\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n}\n\nfunction deflateInit(strm, level) {\n  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n}\n\n\nfunction deflate(strm, flush) {\n  var old_flush, s;\n  var beg, val; // for gzip header write only\n\n  if (!strm || !strm.state ||\n    flush > Z_BLOCK || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n\n  if (!strm.output ||\n      (!strm.input && strm.avail_in !== 0) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);\n  }\n\n  s.strm = strm; /* just in case */\n  old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Write the header */\n  if (s.status === INIT_STATE) {\n\n    if (s.wrap === 2) { // GZIP header\n      strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n      put_byte(s, 31);\n      put_byte(s, 139);\n      put_byte(s, 8);\n      if (!s.gzhead) { // s->gzhead == Z_NULL\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, OS_CODE);\n        s.status = BUSY_STATE;\n      }\n      else {\n        put_byte(s, (s.gzhead.text ? 1 : 0) +\n                    (s.gzhead.hcrc ? 2 : 0) +\n                    (!s.gzhead.extra ? 0 : 4) +\n                    (!s.gzhead.name ? 0 : 8) +\n                    (!s.gzhead.comment ? 0 : 16)\n        );\n        put_byte(s, s.gzhead.time & 0xff);\n        put_byte(s, (s.gzhead.time >> 8) & 0xff);\n        put_byte(s, (s.gzhead.time >> 16) & 0xff);\n        put_byte(s, (s.gzhead.time >> 24) & 0xff);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, s.gzhead.os & 0xff);\n        if (s.gzhead.extra && s.gzhead.extra.length) {\n          put_byte(s, s.gzhead.extra.length & 0xff);\n          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n        }\n        if (s.gzhead.hcrc) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);\n        }\n        s.gzindex = 0;\n        s.status = EXTRA_STATE;\n      }\n    }\n    else // DEFLATE header\n    {\n      var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;\n      var level_flags = -1;\n\n      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n        level_flags = 0;\n      } else if (s.level < 6) {\n        level_flags = 1;\n      } else if (s.level === 6) {\n        level_flags = 2;\n      } else {\n        level_flags = 3;\n      }\n      header |= (level_flags << 6);\n      if (s.strstart !== 0) { header |= PRESET_DICT; }\n      header += 31 - (header % 31);\n\n      s.status = BUSY_STATE;\n      putShortMSB(s, header);\n\n      /* Save the adler32 of the preset dictionary: */\n      if (s.strstart !== 0) {\n        putShortMSB(s, strm.adler >>> 16);\n        putShortMSB(s, strm.adler & 0xffff);\n      }\n      strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    }\n  }\n\n//#ifdef GZIP\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n\n      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            break;\n          }\n        }\n        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n        s.gzindex++;\n      }\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (s.gzindex === s.gzhead.extra.length) {\n        s.gzindex = 0;\n        s.status = NAME_STATE;\n      }\n    }\n    else {\n      s.status = NAME_STATE;\n    }\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.gzindex = 0;\n        s.status = COMMENT_STATE;\n      }\n    }\n    else {\n      s.status = COMMENT_STATE;\n    }\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.status = HCRC_STATE;\n      }\n    }\n    else {\n      s.status = HCRC_STATE;\n    }\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n      }\n      if (s.pending + 2 <= s.pending_buf_size) {\n        put_byte(s, strm.adler & 0xff);\n        put_byte(s, (strm.adler >> 8) & 0xff);\n        strm.adler = 0; //crc32(0L, Z_NULL, 0);\n        s.status = BUSY_STATE;\n      }\n    }\n    else {\n      s.status = BUSY_STATE;\n    }\n  }\n//#endif\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {\n    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :\n      (s.strategy === Z_RLE ? deflate_rle(s, flush) :\n        configuration_table[s.level].func(s, flush));\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        trees._tr_align(s);\n      }\n      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        trees._tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK;\n      }\n    }\n  }\n  //Assert(strm->avail_out > 0, \"bug2\");\n  //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\n  if (flush !== Z_FINISH) { return Z_OK; }\n  if (s.wrap <= 0) { return Z_STREAM_END; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n}\n\nfunction deflateEnd(strm) {\n  var status;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  status = strm.state.status;\n  if (status !== INIT_STATE &&\n    status !== EXTRA_STATE &&\n    status !== NAME_STATE &&\n    status !== COMMENT_STATE &&\n    status !== HCRC_STATE &&\n    status !== BUSY_STATE &&\n    status !== FINISH_STATE\n  ) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n}\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nfunction deflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var s;\n  var str, n;\n  var wrap;\n  var avail;\n  var next;\n  var input;\n  var tmpDict;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n  wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    tmpDict = new utils.Buf8(s.w_size);\n    utils.arraySet(tmpDict, dictionary, dictLength - s.w_size, s.w_size, 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  avail = strm.avail_in;\n  next = strm.next_in;\n  input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    str = s.strstart;\n    n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK;\n}\n\n\nexports.deflateInit = deflateInit;\nexports.deflateInit2 = deflateInit2;\nexports.deflateReset = deflateReset;\nexports.deflateResetKeep = deflateResetKeep;\nexports.deflateSetHeader = deflateSetHeader;\nexports.deflate = deflate;\nexports.deflateEnd = deflateEnd;\nexports.deflateSetDictionary = deflateSetDictionary;\nexports.deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nexports.deflateBound = deflateBound;\nexports.deflateCopy = deflateCopy;\nexports.deflateParams = deflateParams;\nexports.deflatePending = deflatePending;\nexports.deflatePrime = deflatePrime;\nexports.deflateTune = deflateTune;\n*/\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pako/lib/zlib/deflate.js\n// module id = 36\n// module chunks = 0","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\nvar utils = require('../utils/common');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//var Z_FILTERED          = 1;\n//var Z_HUFFMAN_ONLY      = 2;\n//var Z_RLE               = 3;\nvar Z_FIXED               = 4;\n//var Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nvar Z_BINARY              = 0;\nvar Z_TEXT                = 1;\n//var Z_ASCII             = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n/*============================================================================*/\n\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nvar STORED_BLOCK = 0;\nvar STATIC_TREES = 1;\nvar DYN_TREES    = 2;\n/* The three kinds of block type */\n\nvar MIN_MATCH    = 3;\nvar MAX_MATCH    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\n\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nvar D_CODES       = 30;\n/* number of distance codes */\n\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\n\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\n\nvar MAX_BITS      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nvar MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nvar END_BLOCK   = 256;\n/* end of block literal code */\n\nvar REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nvar REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nvar REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nvar extra_lbits =   /* extra bits for each length code */\n  [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];\n\nvar extra_dbits =   /* extra bits for each distance code */\n  [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];\n\nvar extra_blbits =  /* extra bits for each bit length code */\n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];\n\nvar bl_order =\n  [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nvar DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nvar static_ltree  = new Array((L_CODES + 2) * 2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nvar static_dtree  = new Array(D_CODES * 2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nvar _dist_code    = new Array(DIST_CODE_LEN);\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nvar _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nvar base_length   = new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nvar base_dist     = new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nvar static_l_desc;\nvar static_d_desc;\nvar static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nfunction d_code(dist) {\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n}\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nfunction put_short(s, w) {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n}\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nfunction send_bits(s, value, length) {\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n}\n\n\nfunction send_code(s, c, tree) {\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n}\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nfunction bi_reverse(code, len) {\n  var res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nfunction bi_flush(s) {\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n}\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nfunction gen_bitlen(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{\n  var tree            = desc.dyn_tree;\n  var max_code        = desc.max_code;\n  var stree           = desc.stat_desc.static_tree;\n  var has_stree       = desc.stat_desc.has_stree;\n  var extra           = desc.stat_desc.extra_bits;\n  var base            = desc.stat_desc.extra_base;\n  var max_length      = desc.stat_desc.max_length;\n  var h;              /* heap index */\n  var n, m;           /* iterate over the tree elements */\n  var bits;           /* bit length */\n  var xbits;          /* extra bits */\n  var f;              /* frequency */\n  var overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Trace((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nfunction gen_codes(tree, max_code, bl_count)\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{\n  var next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */\n  var code = 0;              /* running code value */\n  var bits;                  /* bit index */\n  var n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    var len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n}\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nfunction tr_static_init() {\n  var n;        /* iterates over tree elements */\n  var bits;     /* bit counter */\n  var length;   /* length value */\n  var code;     /* code value */\n  var dist;     /* distance index */\n  var bl_count = new Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);\n\n  //static_init_done = true;\n}\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nfunction init_block(s) {\n  var n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.last_lit = s.matches = 0;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nfunction bi_windup(s)\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n}\n\n/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\nfunction copy_block(s, buf, len, header)\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{\n  bi_windup(s);        /* align on byte boundary */\n\n  if (header) {\n    put_short(s, len);\n    put_short(s, ~len);\n  }\n//  while (len--) {\n//    put_byte(s, *buf++);\n//  }\n  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);\n  s.pending += len;\n}\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nfunction smaller(tree, n, m, depth) {\n  var _n2 = n * 2;\n  var _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n}\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nfunction pqdownheap(s, tree, k)\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\n  var v = s.heap[k];\n  var j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n}\n\n\n// inlined manually\n// var SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nfunction compress_block(s, ltree, dtree)\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\n  var dist;           /* distance of matched string */\n  var lc;             /* match length or unmatched char (if dist == 0) */\n  var lx = 0;         /* running index in l_buf */\n  var code;           /* the code to send */\n  var extra;          /* number of extra bits to send */\n\n  if (s.last_lit !== 0) {\n    do {\n      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);\n      lc = s.pending_buf[s.l_buf + lx];\n      lx++;\n\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n      //       \"pendingBuf overflow\");\n\n    } while (lx < s.last_lit);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n}\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nfunction build_tree(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\n  var tree     = desc.dyn_tree;\n  var stree    = desc.stat_desc.static_tree;\n  var has_stree = desc.stat_desc.has_stree;\n  var elems    = desc.stat_desc.elems;\n  var n, m;          /* iterate over heap elements */\n  var max_code = -1; /* largest code with non zero frequency */\n  var node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n}\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nfunction scan_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nfunction send_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nfunction build_bl_tree(s) {\n  var max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n}\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nfunction send_all_trees(s, lcodes, dcodes, blcodes)\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{\n  var rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n}\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nfunction detect_data_type(s) {\n  /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  var black_mask = 0xf3ffc07f;\n  var n;\n\n  /* Check for non-textual (\"black-listed\") bytes. */\n  for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"white-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n}\n\n\nvar static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nfunction _tr_init(s)\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n}\n\n\n/* ===========================================================================\n * Send a stored block\n */\nfunction _tr_stored_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  copy_block(s, buf, stored_len, true); /* with header */\n}\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nfunction _tr_align(s) {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n}\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nfunction _tr_flush_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  var opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  var max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->last_lit));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n}\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nfunction _tr_tally(s, dist, lc)\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n  //var out_length, in_length, dcode;\n\n  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;\n  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n\n  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n  s.last_lit++;\n\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n\n//#ifdef TRUNCATE_BLOCK\n//  /* Try to guess if it is profitable to stop the current block here */\n//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n//    /* Compute an upper bound for the compressed length */\n//    out_length = s.last_lit*8;\n//    in_length = s.strstart - s.block_start;\n//\n//    for (dcode = 0; dcode < D_CODES; dcode++) {\n//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n//    }\n//    out_length >>>= 3;\n//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n//    //       s->last_lit, in_length, out_length,\n//    //       100L - out_length*100L/in_length));\n//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n//      return true;\n//    }\n//  }\n//#endif\n\n  return (s.last_lit === s.lit_bufsize - 1);\n  /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n}\n\nexports._tr_init  = _tr_init;\nexports._tr_stored_block = _tr_stored_block;\nexports._tr_flush_block  = _tr_flush_block;\nexports._tr_tally = _tr_tally;\nexports._tr_align = _tr_align;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pako/lib/zlib/trees.js\n// module id = 37\n// module chunks = 0","'use strict';\n\n\nvar zlib_inflate = require('./zlib/inflate');\nvar utils        = require('./utils/common');\nvar strings      = require('./utils/strings');\nvar c            = require('./zlib/constants');\nvar msg          = require('./zlib/messages');\nvar ZStream      = require('./zlib/zstream');\nvar GZheader     = require('./zlib/gzheader');\n\nvar toString = Object.prototype.toString;\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param) or if you\n * push a chunk with explicit flush (call [[Inflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate(options) {\n  if (!(this instanceof Inflate)) return new Inflate(options);\n\n  this.options = utils.assign({\n    chunkSize: 16384,\n    windowBits: 0,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status  = zlib_inflate.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== c.Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  this.header = new GZheader();\n\n  zlib_inflate.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = zlib_inflate.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== c.Z_OK) {\n        throw new Error(msg[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Inflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the decompression context.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var dictionary = this.options.dictionary;\n  var status, _mode;\n  var next_out_utf8, tail, utf8str;\n\n  // Flag to properly process Z_BUF_ERROR on testing inflate call\n  // when we check that all output data was flushed.\n  var allowBufError = false;\n\n  if (this.ended) { return false; }\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? c.Z_FINISH : c.Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // Only binary strings can be decompressed on practice\n    strm.input = strings.binstring2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = zlib_inflate.inflate(strm, c.Z_NO_FLUSH);    /* no bad return value */\n\n    if (status === c.Z_NEED_DICT && dictionary) {\n      status = zlib_inflate.inflateSetDictionary(this.strm, dictionary);\n    }\n\n    if (status === c.Z_BUF_ERROR && allowBufError === true) {\n      status = c.Z_OK;\n      allowBufError = false;\n    }\n\n    if (status !== c.Z_STREAM_END && status !== c.Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === c.Z_STREAM_END || (strm.avail_in === 0 && (_mode === c.Z_FINISH || _mode === c.Z_SYNC_FLUSH))) {\n\n        if (this.options.to === 'string') {\n\n          next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          tail = strm.next_out - next_out_utf8;\n          utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) { utils.arraySet(strm.output, strm.output, next_out_utf8, tail, 0); }\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n        }\n      }\n    }\n\n    // When no more input data, we should check that internal inflate buffers\n    // are flushed. The only way to do it when avail_out = 0 - run one more\n    // inflate pass. But if output data not exists, inflate return Z_BUF_ERROR.\n    // Here we set flag to process this error properly.\n    //\n    // NOTE. Deflate does not return error in this case and does not needs such\n    // logic.\n    if (strm.avail_in === 0 && strm.avail_out === 0) {\n      allowBufError = true;\n    }\n\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== c.Z_STREAM_END);\n\n  if (status === c.Z_STREAM_END) {\n    _mode = c.Z_FINISH;\n  }\n\n  // Finalize on the last chunk.\n  if (_mode === c.Z_FINISH) {\n    status = zlib_inflate.inflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === c.Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === c.Z_SYNC_FLUSH) {\n    this.onEnd(c.Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === c.Z_OK) {\n    if (this.options.to === 'string') {\n      // Glue & convert here, until we teach pako to send\n      // utf8 aligned strings to onData\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , input = pako.deflate([1,2,3,4,5,6,7,8,9])\n *   , output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err)\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate(input, options) {\n  var inflator = new Inflate(options);\n\n  inflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) { throw inflator.msg || msg[inflator.err]; }\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nexports.Inflate = Inflate;\nexports.inflate = inflate;\nexports.inflateRaw = inflateRaw;\nexports.ungzip  = inflate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pako/lib/inflate.js\n// module id = 38\n// module chunks = 0","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils         = require('../utils/common');\nvar adler32       = require('./adler32');\nvar crc32         = require('./crc32');\nvar inflate_fast  = require('./inffast');\nvar inflate_table = require('./inftrees');\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\n//var Z_NO_FLUSH      = 0;\n//var Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\n//var Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\nvar Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\nvar Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nvar    HEAD = 1;       /* i: waiting for magic header */\nvar    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\nvar    TIME = 3;       /* i: waiting for modification time (gzip) */\nvar    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\nvar    EXLEN = 5;      /* i: waiting for extra length (gzip) */\nvar    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\nvar    NAME = 7;       /* i: waiting for end of file name (gzip) */\nvar    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\nvar    HCRC = 9;       /* i: waiting for header crc (gzip) */\nvar    DICTID = 10;    /* i: waiting for dictionary check value */\nvar    DICT = 11;      /* waiting for inflateSetDictionary() call */\nvar        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\nvar        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */\nvar        STORED = 14;    /* i: waiting for stored size (length and complement) */\nvar        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */\nvar        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\nvar        TABLE = 17;     /* i: waiting for dynamic block table lengths */\nvar        LENLENS = 18;   /* i: waiting for code length code lengths */\nvar        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\nvar            LEN_ = 20;      /* i: same as LEN below, but only first time in */\nvar            LEN = 21;       /* i: waiting for length/lit/eob code */\nvar            LENEXT = 22;    /* i: waiting for length extra bits */\nvar            DIST = 23;      /* i: waiting for distance code */\nvar            DISTEXT = 24;   /* i: waiting for distance extra bits */\nvar            MATCH = 25;     /* o: waiting for output space to copy string */\nvar            LIT = 26;       /* o: waiting for output space to write literal */\nvar    CHECK = 27;     /* i: waiting for 32-bit check value */\nvar    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\nvar    DONE = 29;      /* finished check, done -- remain here until reset */\nvar    BAD = 30;       /* got a data error -- remain here until reset */\nvar    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\nvar    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_WBITS = MAX_WBITS;\n\n\nfunction zswap32(q) {\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n}\n\n\nfunction InflateState() {\n  this.mode = 0;             /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib) */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new utils.Buf16(320); /* temporary storage for code lengths */\n  this.work = new utils.Buf16(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\nfunction inflateResetKeep(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);\n  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK;\n}\n\nfunction inflateReset(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n}\n\nfunction inflateReset2(strm, windowBits) {\n  var wrap;\n  var state;\n\n  /* get the state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 1;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n}\n\nfunction inflateInit2(strm, windowBits) {\n  var ret;\n  var state;\n\n  if (!strm) { return Z_STREAM_ERROR; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.window = null/*Z_NULL*/;\n  ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n}\n\nfunction inflateInit(strm) {\n  return inflateInit2(strm, DEF_WBITS);\n}\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nvar virgin = true;\n\nvar lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\nfunction fixedtables(state) {\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    var sym;\n\n    lenfix = new utils.Buf32(512);\n    distfix = new utils.Buf32(32);\n\n    /* literal/length table */\n    sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n}\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nfunction updatewindow(strm, src, end, copy) {\n  var dist;\n  var state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new utils.Buf8(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    utils.arraySet(state.window, src, end - state.wsize, state.wsize, 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    utils.arraySet(state.window, src, end - copy, dist, state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      utils.arraySet(state.window, src, end - copy, copy, 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n}\n\nfunction inflate(strm, flush) {\n  var state;\n  var input, output;          // input/output buffers\n  var next;                   /* next input INDEX */\n  var put;                    /* next output INDEX */\n  var have, left;             /* available input and output */\n  var hold;                   /* bit buffer */\n  var bits;                   /* bits in bit buffer */\n  var _in, _out;              /* save starting available input and output */\n  var copy;                   /* number of stored or match bytes to copy */\n  var from;                   /* where to copy match bytes from */\n  var from_source;\n  var here = 0;               /* current decoding table entry */\n  var here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //var last;                   /* parent table entry */\n  var last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  var len;                    /* length to copy for repeats, bits to drop */\n  var ret;                    /* return code */\n  var hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */\n  var opts;\n\n  var n; // temporary var for NEED_BITS\n\n  var order = /* permutation of code lengths */\n    [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];\n\n\n  if (!strm || !strm.state || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        state.flags = 0;           /* expect zlib header */\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        else if (len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n        state.dmax = 1 << len;\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if (state.flags & 0x0200) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Array(state.head.extra_len);\n              }\n              utils.arraySet(\n                state.head.extra,\n                input,\n                next,\n                // extra field is limited to 65536 bytes\n                // - no need for additional size check\n                copy,\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if (state.flags & 0x0200) {\n              state.check = crc32(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          utils.arraySet(output, input, next, copy, put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inflate_fast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if (_out) {\n            strm.adler = state.check =\n                /*UPDATE(state.check, put - _out, _out);*/\n                (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n      state.mode = MEM;\n      return Z_MEM_ERROR;\n    }\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if (state.wrap && _out) {\n    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n}\n\nfunction inflateEnd(strm) {\n\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  var state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK;\n}\n\nfunction inflateGetHeader(strm, head) {\n  var state;\n\n  /* check state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK;\n}\n\nfunction inflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var state;\n  var dictid;\n  var ret;\n\n  /* check state */\n  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK;\n}\n\nexports.inflateReset = inflateReset;\nexports.inflateReset2 = inflateReset2;\nexports.inflateResetKeep = inflateResetKeep;\nexports.inflateInit = inflateInit;\nexports.inflateInit2 = inflateInit2;\nexports.inflate = inflate;\nexports.inflateEnd = inflateEnd;\nexports.inflateGetHeader = inflateGetHeader;\nexports.inflateSetDictionary = inflateSetDictionary;\nexports.inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nexports.inflateCopy = inflateCopy;\nexports.inflateGetDictionary = inflateGetDictionary;\nexports.inflateMark = inflateMark;\nexports.inflatePrime = inflatePrime;\nexports.inflateSync = inflateSync;\nexports.inflateSyncPoint = inflateSyncPoint;\nexports.inflateUndermine = inflateUndermine;\n*/\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pako/lib/zlib/inflate.js\n// module id = 39\n// module chunks = 0","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nvar BAD = 30;       /* got a data error -- remain here until reset */\nvar TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nmodule.exports = function inflate_fast(strm, start) {\n  var state;\n  var _in;                    /* local strm.input */\n  var last;                   /* have enough input while in < last */\n  var _out;                   /* local strm.output */\n  var beg;                    /* inflate()'s initial strm.output */\n  var end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  var dmax;                   /* maximum distance from zlib header */\n//#endif\n  var wsize;                  /* window size or zero if not using window */\n  var whave;                  /* valid bytes in the window */\n  var wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  var s_window;               /* allocated sliding window, if wsize != 0 */\n  var hold;                   /* local strm.hold */\n  var bits;                   /* local strm.bits */\n  var lcode;                  /* local strm.lencode */\n  var dcode;                  /* local strm.distcode */\n  var lmask;                  /* mask for first level of length codes */\n  var dmask;                  /* mask for first level of distance codes */\n  var here;                   /* retrieved table entry */\n  var op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  var len;                    /* match length, unused bytes */\n  var dist;                   /* match distance */\n  var from;                   /* where to copy match from */\n  var from_source;\n\n\n  var input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pako/lib/zlib/inffast.js\n// module id = 40\n// module chunks = 0","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils = require('../utils/common');\n\nvar MAXBITS = 15;\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\nvar lbase = [ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n];\n\nvar lext = [ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n];\n\nvar dbase = [ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n];\n\nvar dext = [ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n];\n\nmodule.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)\n{\n  var bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  var len = 0;               /* a code's length in bits */\n  var sym = 0;               /* index of code symbols */\n  var min = 0, max = 0;          /* minimum and maximum code lengths */\n  var root = 0;              /* number of index bits for root table */\n  var curr = 0;              /* number of index bits for current table */\n  var drop = 0;              /* code bits to drop for sub-table */\n  var left = 0;                   /* number of prefix codes available */\n  var used = 0;              /* code entries in table used */\n  var huff = 0;              /* Huffman code */\n  var incr;              /* for incrementing code, index */\n  var fill;              /* index for replicating entries */\n  var low;               /* low bits for current root entry */\n  var mask;              /* mask for low root bits */\n  var next;             /* next available space in table */\n  var base = null;     /* base value table to use */\n  var base_index = 0;\n//  var shoextra;    /* extra bits table to use */\n  var end;                    /* use base and extra for symbol > end */\n  var count = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  var offs = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  var extra = null;\n  var extra_index = 0;\n\n  var here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES) {\n    base = extra = work;    /* dummy value--not used */\n    end = 19;\n\n  } else if (type === LENS) {\n    base = lbase;\n    base_index -= 257;\n    extra = lext;\n    extra_index -= 257;\n    end = 256;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    end = -1;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS && used > ENOUGH_LENS) ||\n    (type === DISTS && used > ENOUGH_DISTS)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] < end) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] > end) {\n      here_op = extra[extra_index + work[sym]];\n      here_val = base[base_index + work[sym]];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS && used > ENOUGH_LENS) ||\n        (type === DISTS && used > ENOUGH_DISTS)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pako/lib/zlib/inftrees.js\n// module id = 41\n// module chunks = 0","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nmodule.exports = GZheader;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pako/lib/zlib/gzheader.js\n// module id = 42\n// module chunks = 0","import { tsNow, dT, nextRandomInt, longFromInts, longToInts } from '../Utils'\nimport { getState, setState } from '../state'\nimport { ErrorResponse } from '../Services'\nimport { str2bigInt, greater, addInt, bigInt2str, modInt } from '../Utils/leemonBigInt'\n\nlet lastMessageID = [0, 0]\nlet lastBigInt = null;\nlet timeOffset = 0\nlet lastServerBigInt = null;\n\nconst to = getState().server_time_offset\n\nif (to) {\n    timeOffset = to\n}\n\nfunction generateMessageID() {\n    var timeTicks = tsNow(),\n        timeSec = Math.floor(timeTicks / 1000) + timeOffset,\n        timeMSec = timeTicks % 1000,\n        random = nextRandomInt(0xFFFF)\n\n    var messageID = [timeSec, (timeMSec << 21) | (random << 3) | 4]\n    if (lastMessageID[0] > messageID[0] ||\n        lastMessageID[0] == messageID[0] && lastMessageID[1] >= messageID[1]) {\n        messageID = [lastMessageID[0], lastMessageID[1] + 4]\n    }\n\n    var longFrom = longFromInts(messageID[0], messageID[1]);\n    lastBigInt = str2bigInt(longFrom, 10);\n    lastMessageID = messageID;\n\n    if (lastServerBigInt && greater(lastServerBigInt, lastBigInt)) {\n        //18: incorrect two lower order msg_id bits (the server expects client message msg_id to be divisible by 4)\n        lastServerBigInt = addInt(lastServerBigInt, 100000-modInt(lastServerBigInt, 4));\n        return bigInt2str(lastServerBigInt, 10);\n    } else {\n        return longFrom;\n    }\n}\n\nfunction setLastMessageID(str) {\n\n    let toSet = str2bigInt(str, 10);\n\n    if (lastServerBigInt && greater(lastServerBigInt, toSet)) {\n\n    } else {\n        // console.error('setLastMessageID', str);\n        lastServerBigInt = toSet;\n    }\n\n    // console.warn('was', lastBigInt);\n    // console.warn('to', toSet);\n\n    // if (greater(toSet, lastBigInt)) {\n    //     shiftOffset+=60;\n    //     console.warn('was greater');\n    // }\n\n\n    // if (toSet[0] > lastMessageID[0] ||\n    //     toSet[0] == lastMessageID[0] && toSet[1] >= lastMessageID[1]) {\n    //     console.warn('was greater');\n    //     lastMessageID = [toSet[0], toSet[1] + 4]\n    // }\n}\n\nexport function applyServerTime(serverTime, localTime) {\n    const newTimeOffset = serverTime - Math.floor((localTime || tsNow()) / 1000)\n    const changed = Math.abs(timeOffset - newTimeOffset) > 10\n\n    setState({ server_time_offset: newTimeOffset })\n\n    lastMessageID = [0, 0]\n    timeOffset = newTimeOffset\n\n    return changed\n}\n\nexport const generateID = generateMessageID\nexport const setLastID = setLastMessageID\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/Mtp/MtpTimeManager.js","// Number of rounds by keysize\nvar numberOfRounds = {16: 10, 24: 12, 32: 14}\n\n// Round constant words\nvar rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];\n\n// S-box and Inverse S-box (S is for Substitution)\nvar S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\nvar Si =[0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];\n\n// Transformations for encryption\nvar T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\nvar T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\nvar T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\nvar T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];\n\n// Transformations for decryption\nvar T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\nvar T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\nvar T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\nvar T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];\n\n// Transformations for decryption key expansion\nvar U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\nvar U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\nvar U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\nvar U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\n\nfunction checkInt(value) {\n    return (parseInt(value) === value);\n}\n\nfunction checkInts(arrayish) {\n    if (!checkInt(arrayish.length)) { return false; }\n\n    for (var i = 0; i < arrayish.length; i++) {\n        if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nfunction coerceArray(arg, copy) {\n\n    // ArrayBuffer view\n    if (arg.buffer && ArrayBuffer.isView(arg) && arg.name === 'Uint8Array') {\n\n        if (copy) {\n            if (arg.slice) {\n                arg = arg.slice();\n            } else {\n                arg = Array.prototype.slice.call(arg);\n            }\n        }\n\n        return arg;\n    }\n\n    // It's an array; check it is a valid representation of a byte\n    if (Array.isArray(arg)) {\n        if (!checkInts(arg)) {\n            throw new Error('Array contains invalid value: ' + arg);\n        }\n\n        return new Uint8Array(arg);\n    }\n\n    // Something else, but behaves like an array (maybe a Buffer? Arguments?)\n    if (checkInt(arg.length) && checkInts(arg)) {\n        return new Uint8Array(arg);\n    }\n\n    throw new Error('unsupported array-like object');\n}\n\nfunction createArray(length) {\n    return new Uint8Array(length);\n}\n\nfunction convertToInt32(bytes) {\n    var result = [];\n    for (var i = 0; i < bytes.length; i += 4) {\n        result.push(\n            (bytes[i    ] << 24) |\n            (bytes[i + 1] << 16) |\n            (bytes[i + 2] <<  8) |\n             bytes[i + 3]\n        );\n    }\n    return result;\n}\n\nexport function AES(key) {\n    if (!(this instanceof AES)) {\n        throw Error('AES must be instanitated with `new`');\n    }\n\n    Object.defineProperty(this, 'key', {\n        value: coerceArray(key, true)\n    });\n\n    this._prepare();\n}\n\n\nAES.prototype._prepare = function() {\n\n    var rounds = numberOfRounds[this.key.length];\n    if (rounds == null) {\n        throw new Error('invalid key size (must be 16, 24 or 32 bytes)');\n    }\n\n    // encryption round keys\n    this._Ke = [];\n\n    // decryption round keys\n    this._Kd = [];\n\n    for (var i = 0; i <= rounds; i++) {\n        this._Ke.push([0, 0, 0, 0]);\n        this._Kd.push([0, 0, 0, 0]);\n    }\n\n    var roundKeyCount = (rounds + 1) * 4;\n    var KC = this.key.length / 4;\n\n    // convert the key into ints\n    var tk = convertToInt32(this.key);\n\n    // copy values into round key arrays\n    var index;\n    for (var i = 0; i < KC; i++) {\n        index = i >> 2;\n        this._Ke[index][i % 4] = tk[i];\n        this._Kd[rounds - index][i % 4] = tk[i];\n    }\n\n    // key expansion (fips-197 section 5.2)\n    var rconpointer = 0;\n    var t = KC, tt;\n    while (t < roundKeyCount) {\n        tt = tk[KC - 1];\n        tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^\n                  (S[(tt >>  8) & 0xFF] << 16) ^\n                  (S[ tt        & 0xFF] <<  8) ^\n                   S[(tt >> 24) & 0xFF]        ^\n                  (rcon[rconpointer] << 24));\n        rconpointer += 1;\n\n        // key expansion (for non-256 bit)\n        if (KC != 8) {\n            for (var i = 1; i < KC; i++) {\n                tk[i] ^= tk[i - 1];\n            }\n\n        // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n        } else {\n            for (var i = 1; i < (KC / 2); i++) {\n                tk[i] ^= tk[i - 1];\n            }\n            tt = tk[(KC / 2) - 1];\n\n            tk[KC / 2] ^= (S[ tt        & 0xFF]        ^\n                          (S[(tt >>  8) & 0xFF] <<  8) ^\n                          (S[(tt >> 16) & 0xFF] << 16) ^\n                          (S[(tt >> 24) & 0xFF] << 24));\n\n            for (var i = (KC / 2) + 1; i < KC; i++) {\n                tk[i] ^= tk[i - 1];\n            }\n        }\n\n        // copy values into round key arrays\n        var i = 0, r, c;\n        while (i < KC && t < roundKeyCount) {\n            r = t >> 2;\n            c = t % 4;\n            this._Ke[r][c] = tk[i];\n            this._Kd[rounds - r][c] = tk[i++];\n            t++;\n        }\n    }\n\n    // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n    for (var r = 1; r < rounds; r++) {\n        for (var c = 0; c < 4; c++) {\n            tt = this._Kd[r][c];\n            this._Kd[r][c] = (U1[(tt >> 24) & 0xFF] ^\n                              U2[(tt >> 16) & 0xFF] ^\n                              U3[(tt >>  8) & 0xFF] ^\n                              U4[ tt        & 0xFF]);\n        }\n    }\n}\n\nAES.prototype.encrypt = function(plaintext) {\n    if (plaintext.length != 16) {\n        throw new Error('invalid plaintext size (must be 16 bytes)');\n    }\n\n    var rounds = this._Ke.length - 1;\n    var a = [0, 0, 0, 0];\n\n    // convert plaintext to (ints ^ key)\n    var t = convertToInt32(plaintext);\n    for (var i = 0; i < 4; i++) {\n        t[i] ^= this._Ke[0][i];\n    }\n\n    // apply round transforms\n    for (var r = 1; r < rounds; r++) {\n        for (var i = 0; i < 4; i++) {\n            a[i] = (T1[(t[ i         ] >> 24) & 0xff] ^\n                    T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n                    T3[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                    T4[ t[(i + 3) % 4]        & 0xff] ^\n                    this._Ke[r][i]);\n        }\n        t = a.slice();\n    }\n\n    // the last round is special\n    var result = createArray(16), tt;\n    for (var i = 0; i < 4; i++) {\n        tt = this._Ke[rounds][i];\n        result[4 * i    ] = (S[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n        result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n        result[4 * i + 2] = (S[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n        result[4 * i + 3] = (S[ t[(i + 3) % 4]        & 0xff] ^  tt       ) & 0xff;\n    }\n\n    return result;\n}\n\n// AES.prototype.decrypt = function(ciphertext) {\n//     if (ciphertext.length != 16) {\n//         throw new Error('invalid ciphertext size (must be 16 bytes)');\n//     }\n\n//     var rounds = this._Kd.length - 1;\n//     var a = [0, 0, 0, 0];\n\n//     // convert plaintext to (ints ^ key)\n//     var t = convertToInt32(ciphertext);\n//     for (var i = 0; i < 4; i++) {\n//         t[i] ^= this._Kd[0][i];\n//     }\n\n//     // apply round transforms\n//     for (var r = 1; r < rounds; r++) {\n//         for (var i = 0; i < 4; i++) {\n//             a[i] = (T5[(t[ i          ] >> 24) & 0xff] ^\n//                     T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n//                     T7[(t[(i + 2) % 4] >>  8) & 0xff] ^\n//                     T8[ t[(i + 1) % 4]        & 0xff] ^\n//                     this._Kd[r][i]);\n//         }\n//         t = a.slice();\n//     }\n\n//     // the last round is special\n//     var result = createArray(16), tt;\n//     for (var i = 0; i < 4; i++) {\n//         tt = this._Kd[rounds][i];\n//         result[4 * i    ] = (Si[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n//         result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n//         result[4 * i + 2] = (Si[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n//         result[4 * i + 3] = (Si[ t[(i + 1) % 4]        & 0xff] ^  tt       ) & 0xff;\n//     }\n\n//     return result;\n// }\n\n\n/**\n *  Counter object for CTR common mode of operation\n */\nvar Counter = function(initialValue) {\n    if (!(this instanceof Counter)) {\n        throw Error('Counter must be instanitated with `new`');\n    }\n\n    // We allow 0, but anything false-ish uses the default 1\n    if (initialValue !== 0 && !initialValue) { initialValue = 1; }\n\n    if (typeof(initialValue) === 'number') {\n        this._counter = createArray(16);\n        this.setValue(initialValue);\n\n    } else {\n        this.setBytes(initialValue);\n    }\n}\n\nCounter.prototype.setValue = function(value) {\n    if (typeof(value) !== 'number' || parseInt(value) != value) {\n        throw new Error('invalid counter value (must be an integer)');\n    }\n\n    for (var index = 15; index >= 0; --index) {\n        this._counter[index] = value % 256;\n        value = value >> 8;\n    }\n}\n\nCounter.prototype.setBytes = function(bytes) {\n    bytes = coerceArray(bytes, true);\n\n    if (bytes.length != 16) {\n        throw new Error('invalid counter bytes size (must be 16 bytes)');\n    }\n\n    this._counter = bytes;\n};\n\nCounter.prototype.increment = function() {\n    for (var i = 15; i >= 0; i--) {\n        if (this._counter[i] === 255) {\n            this._counter[i] = 0;\n        } else {\n            this._counter[i]++;\n            break;\n        }\n    }\n}\n\n\n/**\n *  Mode Of Operation - Counter (CTR)\n */\nexport function ModeOfOperationCTR(key, counter) {\n    if (!(this instanceof ModeOfOperationCTR)) {\n        throw Error('AES must be instanitated with `new`');\n    }\n\n    this.description = \"Counter\";\n    this.name = \"ctr\";\n\n    if (!(counter instanceof Counter)) {\n        counter = new Counter(counter)\n    }\n\n    this._counter = counter;\n\n    this._remainingCounter = null;\n    this._remainingCounterIndex = 16;\n\n    this._aes = new AES(key);\n}\n\nModeOfOperationCTR.prototype.encrypt = function(plaintext) {\n    var encrypted = coerceArray(plaintext, true);\n\n    for (var i = 0; i < encrypted.length; i++) {\n        if (this._remainingCounterIndex === 16) {\n            this._remainingCounter = this._aes.encrypt(this._counter._counter);\n            this._remainingCounterIndex = 0;\n            this._counter.increment();\n        }\n        encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];\n    }\n\n    return encrypted;\n}\n\n// Decryption is symetric\nModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;\n\n\n// WEBPACK FOOTER //\n// ./src/Utils/aes.js","import * as MtpAuthorizer from './MtpAuthorizer'\nimport * as MtpNetworker from './MtpNetworker'\nimport { getState, setState, initState, flushState } from '../state'\nimport { dT, tsNow, inflate, md5 } from '../Utils'\nimport { ErrorResponse } from '../Services'\nimport { SRP } from '../Utils/SRP'\nimport { name } from '../../package.json'\nimport { networkRequest, flushSockets } from '../network'\n\nlet isInitialized = false\n\nexport const MtpAuth = MtpAuthorizer;\n// console.error(SRP);\nexport const SRPGenerator = SRP;\nexport const MD5 = md5;\nexport const setUpdatesCallback = MtpNetworker.setUpdatesProcessor;\n\nexport const inflateObj = inflate; /// we need gzipUncompress for playing tgs, so lets export it from here\n\nlet nearestDCData = null;\nexport const getNearestDc = ()=>{\n    return nearestDCData;\n};\n\nlet appId = null;\nlet appHash = null;\n\nexport const init = (options, dumpState, loadState, loggingLevel = 'verbose') => new Promise((resolve, reject) => {\n    // LogService.init(name, loggingLevel)\n    let gNetworker = null;\n\n    appId = options.appId;\n    appHash = options.appHash;\n\n    initState(options, dumpState, loadState)\n        .then(() => {\n            isInitialized = true;\n\n            let state = getState();\n            if (state && state.default_dc_id) {\n                options.defaultDC = state.default_dc_id;\n            }\n\n            if (!options.keepNotDefaultNetworkers) {\n                let updatedNetworkers = [];\n                for (let networker of state.networkers) {\n                    if (networker.id == options.defaultDC) {\n                        updatedNetworkers.push(networker);\n                    }\n                }\n\n                state.networkers = updatedNetworkers;\n            }\n\n            state.current_dc_id = options.defaultDC;\n            state.prev_dc_id = undefined;\n            state.default_dc_id = options.defaultDC;\n\n            setState(state);\n\n            return mtpGetNetworker(options.defaultDC);\n        })\n        .then((networker)=> {\n            // remove all other networkers from state\n            gNetworker = networker;\n            return networker.wrapApiCall('help.getNearestDc', {}, { dcId: options.defaultDC, noErrorBox: true });\n\n            // isInitialized = true;\n\n            // let initTimeout = setTimeout(()=>{\n            //     console.error('no response for init full user');\n            //     resolve(null);\n            // }, 2000); // if no full user data in 2 sec - log out.\n\n            // mtpInvokeApi('users.getFullUser', {id: { \"_\": \"inputUserSelf\" }})\n            //     .then((data)=>{\n            //         console.error('full user', data);\n            //         resolve(data);\n            //         clearTimeout(initTimeout);\n            //     })\n            //     .catch((data)=>{\n            //         console.error('no full user', data);\n            //         resolve(null);\n            //         clearTimeout(initTimeout);\n            //     });\n\n        })\n        .then((nearestDC)=>{\n            // console.warn('nearestDC', nearestDC);\n            nearestDCData = nearestDC;\n\n            return mtpInvokeApi('users.getFullUser', {id: { \"_\": \"inputUserSelf\" }});\n        })\n        .then((selfUser)=>{\n            console.warn('Self user', selfUser);\n\n            // if (selfUser) {\n            //     gNetworker.signedIn = true;\n            // }\n\n            resolve(selfUser);\n        })\n        .catch((e) => {\n            console.error(e);\n\n            // default state set\n            isInitialized = true;\n            resolve(null);\n        });\n})\n\nlet networkers = {};\nlet networkersPromises = {};\nlet networkersPromisesResolvers = {};\nlet networkersPromisesRejecters = {};\n\nexport const logOut = () => {\n    isInitialized = false;\n    networkers = {};\n    networkersPromises = {};\n    MtpAuthorizer.flushCachedNetworkers();\n    flushState();\n}\n\nexport const mtpGetNetworker = (dcId, options = {}) => new Promise((resolve, reject) => {\n    dcId = dcId || getState().current_dc_id;\n\n    if (!isInitialized) {\n        reject(new Error('Not initialized!'))\n        return\n    }\n\n    if (!dcId) {\n        reject(new Error('Please specify dcId'))\n        return\n    }\n\n    if (networkers[dcId]) {\n        resolve(networkers[dcId]);\n        return;\n    }\n\n    const networkerDataFromState = getState().networkers.find(nw => nw.id == dcId)\n    if (networkerDataFromState) {\n        const networker = MtpNetworker.getNetworker(dcId, networkerDataFromState.auth.authKey, networkerDataFromState.auth.serverSalt, options);\n        networkers[dcId] = networker;\n        resolve(networker);\n        // networker.wrapApiCall('users.getFullUser', {id: { \"_\": \"inputUserSelf\" }})\n        //     .then((data)=>{\n        //         networkers[dcId] = networker;\n        //         resolve(networker);\n        //     })\n        //     .catch((data)=>{\n        //         // remove networker from state\n        //         let state = getState();\n        //         let updatedNetworkers = [];\n        //         for (let networker of state.networkers) {\n        //             if (networker.id != dcId) {\n        //                 updatedNetworkers.push(networker);\n        //             }\n        //         }\n\n        //         state.networkers = updatedNetworkers;\n        //         setState(state)\n        //             .then(()=>{\n        //                 mtpGetNetworker(dcId, options)\n        //                     .then((networker)=>{\n        //                         resolve(networker);\n        //                     })\n        //                     .catch((e)=>{\n        //                         reject(e);\n        //                     });\n        //             });\n        //     });\n        return;\n    }\n\n    let wPromise = null;\n    if (!networkersPromises[dcId]) {\n        networkersPromises[dcId] = new Promise(function(res, rej){\n            networkersPromisesResolvers[dcId] = res;\n            networkersPromisesRejecters[dcId] = rej;\n        });\n        wPromise = Promise.resolve(null);\n    } else {\n        wPromise = networkersPromises[dcId];\n    }\n\n    wPromise\n        .then((networker)=>{\n            const originalDcId = dcId % 1000;\n            if (networker) {\n                resolve(networker);\n            } else if (dcId > 1000 && networkers[originalDcId]) {\n                // media networkers\n                const networker = MtpNetworker.getNetworker(dcId, networkers[originalDcId].authKey, networkers[originalDcId].serverSalt, options);\n                networkers[dcId] = networker;\n                setState({ networkers: [...getState().networkers, { id: dcId, auth: {authKey: networkers[originalDcId].authKey, serverSalt: networkers[originalDcId].serverSalt } }] });\n                resolve(networker);\n                networkersPromisesResolvers[dcId](networker);\n                // const state = getState();\n                // let defaultNetworker = networkers[state.default_dc_id];\n                // if (defaultNetworker && defaultNetworker.signedIn) {\n                //     const networker = MtpNetworker.getNetworker(dcId, defaultNetworker.authKey, defaultNetworker.serverSalt, options);\n\n                //     networkers[dcId] = networker;\n                //     setState({ networkers: [...getState().networkers, { id: dcId, auth: {authKey: defaultNetworker.authKey, serverSalt: defaultNetworker.serverSalt } }] });\n                //     resolve(networker);\n                //     networkersPromisesResolvers[dcId](networker);\n                // }\n            } else {\n                MtpAuthorizer.auth(dcId)\n                    .then((auth) => {\n                        const state = getState();\n                        const networker = MtpNetworker.getNetworker(dcId, auth.authKey, auth.serverSalt, options);\n\n                        let defaultNetworker = networkers[state.default_dc_id];\n\n                        if (defaultNetworker && defaultNetworker.signedIn) {\n                            // export authorization to new networker\n                            if (dcId != state.default_dc_id) {\n                                let dcIdToExport = dcId % 1000;\n\n\n                                mtpInvokeApi('auth.exportAuthorization', { dc_id: dcIdToExport }, { dcId: state.default_dc_id, noErrorBox: true })\n                                    .then((exportedAuth) => {\n                                        return networker.wrapApiCall('auth.importAuthorization', { id: exportedAuth.id, bytes: exportedAuth.bytes }, { dcId: dcId, noErrorBox: true })\n                                    })\n                                    .then(()=>{\n                                        networkers[dcId] = networker;\n                                        setState({ networkers: [...getState().networkers, { id: dcId, auth: auth }] });\n                                        resolve(networker);\n                                        networkersPromisesResolvers[dcId](networker);\n                                    })\n                                    .catch((e)=>{\n                                        reject(e);\n                                    });\n                            } else {\n                                /// should never be here\n                                throw new Error('should never be here');\n                                resolve(defaultNetworker);\n                            }\n                        } else {\n                            // we are probably here because of PHONE_MIGRATE_\n                            // flush other networker and keep this one as default\n                            // flushSockets();\n                            networkers = {};\n                            networkers[dcId] = networker;\n                            setState({ networkers: [ { id: dcId, auth: auth }], default_dc_id: dcId });\n                            resolve(networker);\n                            networkersPromisesResolvers[dcId](networker);\n                        }\n                        // if (dcId != state.default_dc_id) {\n                        //     mtpInvokeApi('auth.exportAuthorization', { dc_id: dcId }, { dcId: state.default_dc_id, noErrorBox: true })\n                        //         .then((exportedAuth) => {\n                        //             return networker.wrapApiCall('auth.importAuthorization', { id: exportedAuth.id, bytes: exportedAuth.bytes }, { dcId: dcId, noErrorBox: true })\n                        //         })\n                        //         .then(()=>{\n                        //             networkers[dcId] = networker;\n                        //             setState({ networkers: [...getState().networkers, { id: dcId, auth: auth }] });\n                        //             resolve(networker);\n                        //             networkersPromisesResolvers[dcId](networker);\n                        //         })\n                        //         .catch((e)=>{\n                        //             reject(e);\n                        //         });\n                        // } else {\n                        //     console.warn('setting networker to state', auth, dcId);\n                        //     networkers[dcId] = networker;\n                        //     setState({ networkers: [...getState().networkers, { id: dcId, auth: auth }] });\n                        //     resolve(networker);\n                        //     networkersPromisesResolvers[dcId](networker);\n                        // }\n                    })\n                    .catch((error) => {\n                        reject(error);\n                        networkersPromisesRejecters[dcId](error);\n                    });\n            }\n        })\n        .catch((error) => {\n            reject(error);\n        });\n})\n\n// export const signUpUser = (phoneNumber, firstName, lastName, codeInputPromise) => new Promise((resolve, reject) => {\n//     if (!isInitialized) {\n//         reject(new Error('Not initialized!'))\n//         return\n//     }\n\n//     const sendCodeCallParams = {\n//         flags: 0,\n//         allow_flashcall: null,\n//         phone_number: phoneNumber,\n//         current_number: null,\n//         api_id: 2496,\n//         api_hash: '8da85b0d5bfe62527e5b244c209159c3'\n//     }\n\n//     mtpInvokeApi(\"auth.sendCode\", sendCodeCallParams)\n//         .then(res => res.phone_code_hash)\n//         .then(phone_code_hash => {\n//             return codeInputPromise()\n//                 .then((code) => {\n//                     return { code, phone_code_hash }\n//                 })\n//         })\n//         .then(({ code, phone_code_hash }) => {\n//             const signUpCallParams = {\n//                 phone_number: phoneNumber,\n//                 phone_code_hash: phone_code_hash,\n//                 phone_code: code,\n//                 first_name: firstName,\n//                 last_name: lastName\n//             }\n\n//             return mtpInvokeApi(\"auth.signUp\", signUpCallParams)\n//         })\n//         .then(resolve)\n//         .catch(reject)\n// })\n\n// export const signInUser = (phoneNumber, codeInputPromise) => new Promise((resolve, reject) => {\n//     if (!isInitialized) {\n//         reject(new Error('Not initialized!'))\n//         return\n//     }\n\n//     const sendCodeCallParams = {\n//         sms_type: 5,\n//         phone_number: phoneNumber,\n//         api_id: 2496,\n//         api_hash: '8da85b0d5bfe62527e5b244c209159c3'\n//     }\n\n//     mtpInvokeApi(\"auth.sendCode\", sendCodeCallParams)\n//         .then(res => res.phone_code_hash)\n//         .then(phone_code_hash => {\n//             return codeInputPromise()\n//                 .then((code) => {\n//                     return { code, phone_code_hash }\n//                 })\n//         })\n//         .then(({ code, phone_code_hash }) => {\n//             const signInCallParams = {\n//                 phone_number: phoneNumber,\n//                 phone_code_hash: phone_code_hash,\n//                 phone_code: code\n//             }\n\n//             return mtpInvokeApi(\"auth.signIn\", signInCallParams)\n//         })\n//         .then(resolve)\n//         .catch(reject)\n// })\n\nexport const mtpInvokeApi = (method, params, options = {}) => new Promise((resolve, reject) => {\n    if (!isInitialized) {\n        reject(new Error('Not initialized!'))\n        return\n    }\n\n    if (!params) {\n        params = {};\n    }\n\n    params.api_id = appId;\n    params.api_hash = appHash;\n\n    //LogService.logVerbose(`[MtpProxy] mtpInvokeApi() ${JSON.stringify(method, 0, 2)} ${JSON.stringify(params, 0, 2)} ${JSON.stringify(options, 0, 2)}`)\n\n    const rejectPromise = function (error) {\n        if (!error) {\n            error = { type: 'ERROR_EMPTY' }\n        } else if (typeof (error) !== 'object') {\n            error = { message: error }\n        }\n\n        if (error.code == 406) {\n            error.handled = true\n        }\n\n        reject(error)\n    }\n\n    const requestPromise = function (networker) {\n        let dcId = networker.getDcId()\n        let prevDcId = getState().prev_dc_id\n        let valid401Errors = ['AUTH_KEY_UNREGISTERED', 'AUTH_KEY_INVALID', 'AUTH_KEY_PERM_EMPTY'];\n\n\n        return networker.wrapApiCall(method, params, options)\n            .then(resolve)\n            .catch(error => {\n                console.error(method, params, options);\n                console.log(error, dcId, prevDcId);\n                //LogService.logError(`[MtpProxy] networker.wrapApiCall() ${new ErrorResponse(error)} ${prevDcId} ${dcId}`)\n\n                if (error.code == 401 && (!prevDcId || (dcId == prevDcId))) {\n                    rejectPromise(error)\n                }\n                else if (error.code == 401 && prevDcId && dcId != prevDcId && valid401Errors.indexOf(error.type) != -1) {\n                    mtpInvokeApi('auth.exportAuthorization', { dc_id: dcId }, { dcId: prevDcId, noErrorBox: true })\n                        .then((exportedAuth) =>\n                            mtpInvokeApi('auth.importAuthorization', { id: exportedAuth.id, bytes: exportedAuth.bytes }, { dcId: dcId, noErrorBox: true })\n                        )\n                        .then(() => mtpInvokeApi(method, params, options))\n                        .then(resolve)\n                        .catch(rejectPromise)\n                }\n                else if (error.code == 303) {\n                    var newDcID = error.type.match(/^(PHONE_MIGRATE_|NETWORK_MIGRATE_|FILE_MIGRATE_|USER_MIGRATE_)(\\d+)/)[2]\n                    if (newDcID != dcId) {\n                        setState({ prev_dc_id: dcId, current_dc_id: newDcID })\n                        options.dcId = newDcID;\n                        // @todo: do not change state on FILE_MIGRAGE???\n\n                        mtpInvokeApi(method, params, options)\n                            .then(resolve)\n                            .catch(rejectPromise)\n                    }\n                }\n                else if (!options.rawError && error.code == 420) {\n                    const waitTime = error.type.match(/^FLOOD_WAIT_(\\d+)/)[1] || 10\n                    if (waitTime > (options.timeout || 60)) {\n                        rejectPromise(error)\n                        return\n                    }\n\n                    setTimeout(function () {\n                        requestPromise(networker)\n                    }, waitTime * 1000)\n                }\n                else if (!options.rawError && (error.code == 500 || error.type == 'MSG_WAIT_FAILED') && error.type != 'NEED_MEMBER_INVALID') {\n                    const now = tsNow()\n                    if (options.stopTime) {\n                        if (now >= options.stopTime) {\n                            rejectPromise(error)\n                            return\n                        }\n                    } else {\n                        options.stopTime = now + (options.timeout !== undefined ? options.timeout : 10) * 1000\n                    }\n                    options.waitTime = options.waitTime ? Math.min(60, options.waitTime * 1.5) : 1\n                    setTimeout(function () {\n                        requestPromise(networker)\n                    }, options.waitTime * 1000)\n                } else {\n                    rejectPromise(error)\n                }\n            })\n    }\n\n    const currrentDcId = options.dcId || getState().current_dc_id\n    mtpGetNetworker(currrentDcId, options)\n        .then(requestPromise)\n        .catch(rejectPromise)\n})\n\n\n// WEBPACK FOOTER //\n// ./src/Mtp/MtpProxy.js","import { millerRabinInt, sub, multMod, mod, modInt, negative, add, str2bigInt, bigInt2str, getBpe, getOne, copyInt_, copy_, add_, rightShift_, sub_, eGCD_, divide_, equalsInt, greater, isZero, powMod, mult } from './leemonBigInt'\nimport { sha256HashSync } from './utils';\n\nexport function SRP(accountPassword) {\n\tlet algo = accountPassword.current_algo;\n\n\tthis._algo = algo;\n\n\tthis._salt1 = algo.salt1;\n\tthis._salt2 = algo.salt2;\n\tthis._g = algo.g;\n\tthis._p = algo.p;\n\n\tthis._srp_B = accountPassword.srp_B;\n\tthis._srp_id = accountPassword.srp_id;\n\tthis._secure_random = accountPassword.secure_random;\n\n\tif (!this.goodPrime(this._p, this._g)) {\n\t\tthrow new Error('Invalid p/g');\n\t}\n};\n\nSRP.prototype.goodPrime = function(prime, g) {\n\t// const expectedBitLength = 2048 / 8; //  /8 = 256\n\n\tif (prime.length != 256) {\n\t\treturn false;\n\t}\n\tif (prime[0] < 128) { // and that 2^2047 < p < 2^2048), means the first bit should be 1\n\t\treturn false;\n\t}\n\n\t// Since g is always equal to 2, 3, 4, 5, 6 or 7, this is easily done using quadratic reciprocity law,\n\t// yielding a simple condition on p mod 4g — namely,\n\t// p mod 8 = 7 for g = 2;\n\t// p mod 3 = 2 for g = 3;\n\t// no extra condition for g = 4;\n\t// p mod 5 = 1 or 4 for g = 5;\n\t// p mod 24 = 19 or 23 for g = 6;\n\t// and p mod 7 = 3, 5 or 6 for g = 7.\n\n\tlet primeB = this.BIGFROMUINTA(prime);\n\n\tif (g == 2) {\n\t\tif (modInt(primeB, 8) != 7) {\n\t\t\treturn false;\n\t\t}\n\t} else if (g == 3) {\n\t\tif (modInt(primeB, 3) != 2) {\n\t\t\treturn false;\n\t\t}\n\t} else if (g == 4) {\n\n\t} else if (g == 5) {\n\t\tif ([1,4].indexOf(modInt(primeB, 5)) == -1) {\n\t\t\treturn false;\n\t\t}\n\t} else if (g == 6) {\n\t\tif ([19,23].indexOf(modInt(primeB, 24)) == -1) {\n\t\t\treturn false;\n\t\t}\n\t} else if (g == 7) {\n\t\tif ([3,5,6].indexOf(modInt(primeB, 7)) == -1) {\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\treturn false; // g is something different\n\t}\n\n\tlet subprimeB = sub(primeB, getOne()); // sub\n\trightShift_(subprimeB, 1); // and div by 2\n\n\tconst smallPrimes = [3,5];\n\n\tfor (let smallPrime of smallPrimes) {\n\t\tif (!millerRabinInt(primeB, smallPrime)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!millerRabinInt(subprimeB, smallPrime)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nSRP.prototype.randomA = function() {\n\tlet a = new Uint8Array(256);\n\t// console.error('secure_random', this._secure_random);\n\ta.set(this._secure_random);\n\t// for (let i = 0; i < a.length; i++) {\n\t// \tif (Math.random() < 0.5) {\n\t// \t\ta[i] = Math.floor(Math.random()*250);\n\t// \t}\n\t// }\n\n\t// console.error('secure_random', a);\n\treturn a;\n};\n\nSRP.prototype.getInputCheckPasswordSRP = function(thePassword) {\n\treturn new Promise((res, rej)=>{\n\t\tthis.generate(thePassword)\n\t\t\t.then((m1)=>{\n\t\t\t\tres({\n\t\t\t\t\t\"_\": \"inputCheckPasswordSRP\",\n\t\t\t\t\tsrp_id: this._srp_id,\n\t\t\t\t\tA: this._A_bytes,\n\t\t\t\t\tM1: this._m1\n\t\t\t\t});\n\t\t\t});\n\t});\n}\n\nSRP.prototype.generate = function(thePassword) {\n\treturn new Promise((res, rej)=>{\n\n\t\tlet _passwordA = new TextEncoder().encode(thePassword);\n\n\t\t// try with mr.slavik python\n\t\t//\n\t\tlet p_bytes = this._p;\n\t\tlet p = this.BIGFROMUINTA(p_bytes);\n\n\t\tlet g_bytes = this.PAD([this._g], 256); // 2048 / 8\n\t\tlet g = str2bigInt(''+this._g, 10); // g is number\n\n\t\tlet B_bytes = this._srp_B;\n\t\tlet B = this.BIGFROMUINTA(B_bytes);\n\n\t\t\t\t// console.log('_passwordA', _passwordA);\n\t\t\t\t// console.log('this._salt1', this._salt1);\n\t\t\t\t// console.log('this._salt2', this._salt2);\n\n\t\t// x := PH2(password, salt1, salt2)\n\t\tthis.PH2(_passwordA, this._salt1, this._salt2)\n\t\t\t.then((x_bytes)=>{\n\n\t\t\t\t// console.log('x_bytes', x_bytes);\n\n\n\t\t\t\tlet x = this.BIGFROMUINTA(x_bytes);\n\n\t\t\t\tlet g_x = powMod(g, x, p);\n\n\t\t\t\tlet k_bytes = this.H(this.CONCAT(p_bytes, g_bytes));\n\t\t\t\tlet k = this.BIGFROMUINTA(k_bytes);\n\n\t\t\t\tlet kg_x = multMod(k, g_x, p);\n\n\t\t\t\t// console.log('kg_x', this.UINTAFROMBIG(kg_x));\n\n\t\t\t\tlet a = null;\n\t\t\t\tlet A = null;\n\t\t\t\tlet A_bytes = null;\n\t\t\t\tlet u = null;\n\t\t\t\tlet u_bytes = null;\n\t\t\t\twhile(true) {\n\t\t\t\t\tthis._a = this.randomA();\n\t\t\t\t\ta  = this.BIGFROMUINTA(this._a);\n\t\t\t\t\tA = powMod(g, a, p);\n\t\t\t\t\tA_bytes = this.UINTAFROMBIG(A);\n\n\t\t\t\t\tthis._A_bytes = A_bytes;\n\n\t\t\t\t\tu_bytes = this.H(this.CONCAT(A_bytes, B_bytes));\n\t\t\t\t\tu = this.BIGFROMUINTA(u_bytes);\n\n\t\t\t\t\tif (!negative(u)) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twhile(!greater(B, kg_x)) {\n\t\t\t\t\tB = add(B, p);\n\t\t\t\t}\n\n\t\t\t\tlet g_b = mod(sub(B, kg_x), p);\n\t\t\t\tif (negative(g_b)) {\n\t\t\t\t\tg_b = add(g_b, p);\n\t\t\t\t}\n\t\t\t\tlet ux = mult(u,x);\n\n\t\t\t\tlet a_ux = add(a, ux);\n\n\t\t\t\t// console.log('a_ux', this.UINTAFROMBIG(a_ux));\n\n\n\t\t\t\tlet S = powMod(g_b, a_ux, p);\n\t\t\t\tlet S_bytes = this.UINTAFROMBIG(S);\n\n\t\t\t\t// console.log('S_bytes', S_bytes);\n\n\t\t\t\tlet K_bytes = this.H(S_bytes);\n\n\t\t\t\tlet h1 = this.H(p_bytes);\n\t\t\t\tlet h2 = this.H(g_bytes);\n\n\t\t\t\tlet p1 = this.XOR(h1, h2);\n\t\t\t\tlet p2 = this.H(this._salt1);\n\t\t\t\tlet p3 = this.H(this._salt2);\n\t\t\t\tlet p4 = A_bytes;\n\t\t\t\tlet p5 = B_bytes;\n\t\t\t\tlet p6 = K_bytes;\n\n\n\t\t\t\t// console.log(p1);\n\t\t\t\t// console.log(p2);\n\t\t\t\t// console.log(p3);\n\t\t\t\t// console.log(p4);\n\t\t\t\t// console.log(p5);\n\t\t\t\t// console.log(p6);\n\n\t\t\t\tlet concated = new Uint8Array(p1.length+p2.length+p3.length+p4.length+p5.length+p6.length);\n\t\t\t\tconcated.set(p1, 0);\n\t\t\t\tconcated.set(p2, p1.length);\n\t\t\t\tconcated.set(p3, p1.length+p2.length);\n\t\t\t\tconcated.set(p4, p1.length+p2.length+p3.length);\n\t\t\t\tconcated.set(p5, p1.length+p2.length+p3.length+p4.length);\n\t\t\t\tconcated.set(p6, p1.length+p2.length+p3.length+p4.length+p5.length);\n\n\t\t\t\tthis._m1 = this.H(concated);\n\n\t\t\t\tres(this._m1);\n\t\t\t});\n\n\t});\n};\n\nSRP.prototype.XOR = function(uint8Array1, uint8Array2) {\n\tlet ret = new Uint8Array(uint8Array2);\n\tfor (let i = 0; i < uint8Array1.length; i++) {\n\t\tret[i] = uint8Array1[i] ^ uint8Array2[i];\n\t}\n\n\treturn ret;\n};\n\nSRP.prototype.PAD = function(bytes, length) {\n\tlet padded = new Uint8Array(length);\n\tpadded.set(bytes, length - bytes.length);\n\n\treturn padded;\n};\n\nSRP.prototype.CONCAT = function(a1, a2) {\n\tconst concated = new Uint8Array(a1.length+a2.length);\n\tconcated.set(a1);\n\tconcated.set(a2, a1.length);\n\treturn concated;\n};\n\nSRP.prototype.bytesFromHex = function(hexString) {\n    var len = hexString.length,\n        i\n    var start = 0\n    var bytes = []\n\n    if (hexString.length % 2) {\n        bytes.push(parseInt(hexString.charAt(0), 16))\n        start++\n    }\n\n    for (i = start; i < len; i += 2) {\n        bytes.push(parseInt(hexString.substr(i, 2), 16))\n    }\n\n    return new Uint8Array(bytes);\n};\n\nSRP.prototype.bytesToHex = function(uint8Array) {\n\tlet arr = [];\n\tfor (let i = 0; i < uint8Array.length; i++) {\n\t\tarr.push((uint8Array[i] < 16 ? \"0\" : \"\") + (uint8Array[i] || 0).toString(16));\n\t}\n\treturn arr.join(\"\");\n};\n\nSRP.prototype.BIGFROMUINTA = function(uint8Array) {\n\treturn str2bigInt(this.bytesToHex(uint8Array), 16, Math.ceil(64 / getBpe()) + 1);\n};\n\nSRP.prototype.UINTAFROMBIG = function(big) {\n\tlet str = bigInt2str(big, 16);\n\treturn this.bytesFromHex(str);\n};\n\n\t// H(data) := sha256(data)\nSRP.prototype.H = function(data) {\n\t// let digest = await window.crypto.subtle.digest('SHA-256', data);\n\t// console.warn(data, digest, new Uint8Array(digest));\n\treturn new Uint8Array(sha256HashSync(data));\n\t// return new Uint8Array(window.crypto.subtle.digest('SHA-256', data));\n};\n\n\t// SH(data, salt) := H(salt | data | salt)\nSRP.prototype.SH = function(data, salt) {\n\tconst concated = new Uint8Array(salt.length + data.length + salt.length);\n\tconcated.set(salt);\n\tconcated.set(data, salt.length);\n\tconcated.set(salt, salt.length + data.length);\n\n\treturn this.H(concated);\n};\n\n\t// PH1(password, salt1, salt2) := SH(SH(password, salt1), salt2)\nSRP.prototype.PH1 = function(password, salt1, salt2) {\n\tlet h1 = this.SH(password, salt1);\n\treturn this.SH(h1, salt2);\n};\n\n\t// PH2(password, salt1, salt2) := SH(pbkdf2(sha512, PH1(password, salt1, salt2), salt1, 100000), salt2)\nSRP.prototype.PH2 = function(password, salt1, salt2) {\n\treturn new Promise((res, rej)=>{\n\t\tlet ph1 = this.PH1(password, salt1, salt2);\n\t\t// console.log('ph1', ph1);\n\t\tthis.PBKDF2(ph1, salt1, 100000)\n\t\t\t.then((pbk)=>{\n\t\t// console.log('pbk', pbk);\n\t\t\t\tres(this.SH(pbk, salt2));\n\t\t\t})\n\t\t\t.catch((e)=>{\n\t\t\t\trej(e);\n\t\t\t});\n\t});\n};\n\nSRP.prototype.PBKDF2 = function(hash, salt, iterations) {\n\t\t// console.log('hash', hash);\n\treturn new Promise((res, rej)=>{\n\t\tcrypto.subtle.importKey(\"raw\",hash,{ name: \"PBKDF2\" },false,[\"deriveBits\", \"deriveKey\"])\n\t\t\t.then((importKey)=>{\n\t\t\t\treturn crypto.subtle.deriveKey(\n\t\t\t\t\t\t{ name: \"PBKDF2\", hash: \"SHA-512\", iterations: 100000, salt: salt },\n\t\t\t\t\t\timportKey,\n\t\t\t\t\t\t{ name: \"HMAC\", hash: \"SHA-256\" },\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t[\"sign\"]\n\t\t\t\t\t);\n\t\t\t})\n\t\t\t.then((deriveKey)=>{\n\t\t\t\treturn crypto.subtle.exportKey(\"raw\", deriveKey);\n\t\t\t})\n\t\t\t.then((exportKey)=>{\n\t\t\t\tres(new Uint8Array(exportKey));\n\t\t\t})\n\t\t\t.catch((e)=>{\n\t\t\t\trej(e);\n\t\t\t});\n\t});\n};\n\n\n// WEBPACK FOOTER //\n// ./src/Utils/SRP.js","module.exports = {\"name\":\"teleweb\",\"version\":\"0.1.9\",\"description\":\"JavaScript library to work with Telegram API in browser\",\"homepage\":\"https://github.com/jeka-kiselyov/teleweb\",\"main\":\"lib/telejs.min.js\",\"scripts\":{\"build\":\"webpack --env dev && webpack --env build\",\"dev\":\"webpack --progress --colors --watch --env dev\",\"prepublish\":\"webpack --env dev && webpack --env build\"},\"keywords\":[\"telegram\",\"api\",\"srp\"],\"author\":\"Jeka Kiselyov (https://github.com/jeka-kiselyov)\",\"babel\":{\"presets\":[\"env\"],\"plugins\":[\"babel-plugin-add-module-exports\",\"transform-object-rest-spread\"],\"sourceMaps\":true,\"retainLines\":true},\"license\":\"MIT\",\"devDependencies\":{\"babel-cli\":\"^6.26.0\",\"babel-core\":\"^6.26.0\",\"babel-eslint\":\"^8.0.3\",\"babel-loader\":\"^7.1.2\",\"babel-plugin-add-module-exports\":\"^0.2.1\",\"babel-plugin-transform-object-rest-spread\":\"^6.26.0\",\"babel-preset-env\":\"^1.6.1\",\"chai\":\"^4.1.2\",\"eslint\":\"^4.13.1\",\"eslint-loader\":\"^1.9.0\",\"mocha\":\"^4.0.1\",\"webpack\":\"^3.10.0\",\"yargs\":\"^10.0.3\"},\"dependencies\":{\"axios\":\"^0.17.1\",\"crypto-js\":\"^3.1.9-1\",\"rusha\":\"^0.8.9\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./package.json\n// module id = 47\n// module chunks = 0"],"sourceRoot":""}